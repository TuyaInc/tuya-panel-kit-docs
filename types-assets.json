{"/animation/diffusion":[[{"text":"import Diffusion","docs":"","start":9,"length":9,"line":0,"character":9,"targetString":"Diffusion"},{"text":"import Diffusion","docs":"","start":105,"length":9,"line":3,"character":1,"targetString":"Diffusion"}],[{"text":"(alias) class View\nimport View","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"View"},{"text":"import Diffusion","docs":"","start":45,"length":9,"line":1,"character":9,"targetString":"Diffusion"},{"text":"import Diffusion","docs":"","start":141,"length":9,"line":4,"character":1,"targetString":"Diffusion"},{"text":"(JSX attribute) color: string","docs":"","start":151,"length":5,"line":4,"character":11,"targetString":"color"},{"text":"(JSX attribute) number: number","docs":"","start":164,"length":6,"line":4,"character":24,"targetString":"number"},{"text":"(alias) class View\nimport View","docs":"","start":179,"length":4,"line":5,"character":3,"targetString":"View"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":184,"length":5,"line":5,"character":8,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":193,"length":5,"line":5,"character":17,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":204,"length":6,"line":5,"character":28,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":216,"length":12,"line":5,"character":40,"targetString":"borderRadius"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":234,"length":15,"line":5,"character":58,"targetString":"backgroundColor"},{"text":"import Diffusion","docs":"","start":266,"length":9,"line":6,"character":2,"targetString":"Diffusion"}]],"/animation/drawer":[[{"text":"import Drawer","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Drawer"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":17,"length":5,"line":0,"character":17,"targetString":"Utils"},{"text":"const viewWidth: number","docs":"","start":110,"length":9,"line":3,"character":8,"targetString":"viewWidth"},{"text":"(method) convertX(d: number): number","docs":"","start":121,"length":8,"line":3,"character":19,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":131,"length":2,"line":3,"character":29,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":138,"length":5,"line":3,"character":36,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":144,"length":10,"line":3,"character":42,"targetString":"RatioUtils"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":164,"length":5,"line":5,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>>","docs":"","start":171,"length":8,"line":5,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":183,"length":5,"line":5,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    visible: boolean;\n    placement: string;\n}>(initialState: {\n    visible: boolean;\n    placement: string;\n} | (() => {\n    visible: boolean;\n    placement: string;\n})): [{\n    visible: boolean;\n    placement: string;\n}, React.Dispatch<React.SetStateAction<{\n    ...;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":189,"length":8,"line":5,"character":32,"targetString":"useState"},{"text":"(property) visible: boolean","docs":"","start":204,"length":7,"line":6,"character":4,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":224,"length":9,"line":7,"character":4,"targetString":"placement"},{"text":"import Drawer","docs":"","start":250,"length":6,"line":10,"character":1,"targetString":"Drawer"},{"text":"(JSX attribute) width: any","docs":"","start":259,"length":5,"line":11,"character":2,"targetString":"width"},{"text":"(JSX attribute) height: number","docs":"","start":278,"length":6,"line":12,"character":2,"targetString":"height"},{"text":"(JSX attribute) hasMask: boolean","docs":"","start":303,"length":7,"line":13,"character":2,"targetString":"hasMask"},{"text":"(JSX attribute) placement: string","docs":"","start":321,"length":9,"line":14,"character":2,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":332,"length":5,"line":14,"character":13,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":338,"length":9,"line":14,"character":19,"targetString":"placement"},{"text":"(JSX attribute) visible: boolean","docs":"","start":351,"length":7,"line":15,"character":2,"targetString":"visible"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":360,"length":5,"line":15,"character":11,"targetString":"state"},{"text":"(property) visible: boolean","docs":"","start":366,"length":7,"line":15,"character":17,"targetString":"visible"},{"text":"(JSX attribute) onMaskPress: () => void","docs":"","start":377,"length":11,"line":16,"character":2,"targetString":"onMaskPress"},{"text":"const setState: (value: React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>) => void","docs":"","start":402,"length":8,"line":17,"character":4,"targetString":"setState"},{"text":"(property) visible: boolean","docs":"","start":413,"length":7,"line":17,"character":15,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":429,"length":9,"line":17,"character":31,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":440,"length":5,"line":17,"character":42,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":446,"length":9,"line":17,"character":48,"targetString":"placement"},{"text":"(JSX attribute) onStateChange: (state: any) => void","docs":"","start":467,"length":13,"line":19,"character":2,"targetString":"onStateChange"},{"text":"(parameter) state: any","docs":"","start":482,"length":5,"line":19,"character":17,"targetString":"state"},{"text":"var console: Console","docs":"","start":497,"length":7,"line":20,"character":4,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":505,"length":3,"line":20,"character":12,"targetString":"log"},{"text":"(parameter) state: any","docs":"","start":509,"length":5,"line":20,"character":16,"targetString":"state"},{"text":"(JSX attribute) style: {\n    width: string;\n    height: string;\n    backgroundColor: string;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":536,"length":5,"line":24,"character":4,"targetString":"style"},{"text":"(property) width: string","docs":"","start":551,"length":5,"line":25,"character":6,"targetString":"width"},{"text":"(property) height: string","docs":"","start":572,"length":6,"line":26,"character":6,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":594,"length":15,"line":27,"character":6,"targetString":"backgroundColor"},{"text":"(property) alignItems: string","docs":"","start":624,"length":10,"line":28,"character":6,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":652,"length":14,"line":29,"character":6,"targetString":"justifyContent"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":694,"length":4,"line":32,"character":5,"targetString":"Text"},{"text":"(JSX attribute) style: {\n    fontSize: number;\n}","docs":"","start":699,"length":5,"line":32,"character":10,"targetString":"style"},{"text":"(property) fontSize: number","docs":"","start":708,"length":8,"line":32,"character":19,"targetString":"fontSize"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":745,"length":4,"line":32,"character":56,"targetString":"Text"},{"text":"import Drawer","docs":"","start":763,"length":6,"line":34,"character":2,"targetString":"Drawer"}],[{"text":"import Drawer","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Drawer"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":17,"length":5,"line":0,"character":17,"targetString":"Utils"},{"text":"const viewWidth: number","docs":"","start":110,"length":9,"line":3,"character":8,"targetString":"viewWidth"},{"text":"(method) convertX(d: number): number","docs":"","start":121,"length":8,"line":3,"character":19,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":131,"length":2,"line":3,"character":29,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":138,"length":5,"line":3,"character":36,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":144,"length":10,"line":3,"character":42,"targetString":"RatioUtils"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":164,"length":5,"line":5,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>>","docs":"","start":171,"length":8,"line":5,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":183,"length":5,"line":5,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    visible: boolean;\n    placement: string;\n}>(initialState: {\n    visible: boolean;\n    placement: string;\n} | (() => {\n    visible: boolean;\n    placement: string;\n})): [{\n    visible: boolean;\n    placement: string;\n}, React.Dispatch<React.SetStateAction<{\n    ...;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":189,"length":8,"line":5,"character":32,"targetString":"useState"},{"text":"(property) visible: boolean","docs":"","start":204,"length":7,"line":6,"character":4,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":224,"length":9,"line":7,"character":4,"targetString":"placement"},{"text":"import Drawer","docs":"","start":252,"length":6,"line":10,"character":1,"targetString":"Drawer"},{"text":"(JSX attribute) width: number","docs":"","start":261,"length":5,"line":11,"character":2,"targetString":"width"},{"text":"(JSX attribute) height: any","docs":"","start":284,"length":6,"line":12,"character":2,"targetString":"height"},{"text":"(JSX attribute) hasMask: boolean","docs":"","start":305,"length":7,"line":13,"character":2,"targetString":"hasMask"},{"text":"(JSX attribute) placement: string","docs":"","start":322,"length":9,"line":14,"character":2,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":333,"length":5,"line":14,"character":13,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":339,"length":9,"line":14,"character":19,"targetString":"placement"},{"text":"(JSX attribute) visible: boolean","docs":"","start":352,"length":7,"line":15,"character":2,"targetString":"visible"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":361,"length":5,"line":15,"character":11,"targetString":"state"},{"text":"(property) visible: boolean","docs":"","start":367,"length":7,"line":15,"character":17,"targetString":"visible"},{"text":"(JSX attribute) onMaskPress: () => void","docs":"","start":378,"length":11,"line":16,"character":2,"targetString":"onMaskPress"},{"text":"const setState: (value: React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>) => void","docs":"","start":403,"length":8,"line":17,"character":4,"targetString":"setState"},{"text":"(property) visible: boolean","docs":"","start":414,"length":7,"line":17,"character":15,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":430,"length":9,"line":17,"character":31,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":441,"length":5,"line":17,"character":42,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":447,"length":9,"line":17,"character":48,"targetString":"placement"},{"text":"(JSX attribute) onStateChange: (state: any) => void","docs":"","start":468,"length":13,"line":19,"character":2,"targetString":"onStateChange"},{"text":"(parameter) state: any","docs":"","start":483,"length":5,"line":19,"character":17,"targetString":"state"},{"text":"var console: Console","docs":"","start":498,"length":7,"line":20,"character":4,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":506,"length":3,"line":20,"character":12,"targetString":"log"},{"text":"(parameter) state: any","docs":"","start":510,"length":5,"line":20,"character":16,"targetString":"state"},{"text":"(JSX attribute) style: {\n    width: string;\n    height: string;\n    backgroundColor: string;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":537,"length":5,"line":24,"character":4,"targetString":"style"},{"text":"(property) width: string","docs":"","start":552,"length":5,"line":25,"character":6,"targetString":"width"},{"text":"(property) height: string","docs":"","start":573,"length":6,"line":26,"character":6,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":595,"length":15,"line":27,"character":6,"targetString":"backgroundColor"},{"text":"(property) alignItems: string","docs":"","start":625,"length":10,"line":28,"character":6,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":653,"length":14,"line":29,"character":6,"targetString":"justifyContent"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":695,"length":4,"line":32,"character":5,"targetString":"Text"},{"text":"(JSX attribute) style: {\n    fontSize: number;\n}","docs":"","start":700,"length":5,"line":32,"character":10,"targetString":"style"},{"text":"(property) fontSize: number","docs":"","start":709,"length":8,"line":32,"character":19,"targetString":"fontSize"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":740,"length":4,"line":32,"character":50,"targetString":"Text"},{"text":"(JSX attribute) style: {\n    backgroundColor: string;\n    width: number;\n    height: number;\n    marginTop: number;\n    alignItems: string;\n    justifyContent: string;\n    borderRadius: number;\n    zIndex: number;\n}","docs":"","start":774,"length":5,"line":34,"character":6,"targetString":"style"},{"text":"(property) backgroundColor: string","docs":"","start":791,"length":15,"line":35,"character":8,"targetString":"backgroundColor"},{"text":"(property) width: number","docs":"","start":824,"length":5,"line":36,"character":8,"targetString":"width"},{"text":"(property) height: number","docs":"","start":843,"length":6,"line":37,"character":8,"targetString":"height"},{"text":"(property) marginTop: number","docs":"","start":863,"length":9,"line":38,"character":8,"targetString":"marginTop"},{"text":"(property) alignItems: string","docs":"","start":886,"length":10,"line":39,"character":8,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":916,"length":14,"line":40,"character":8,"targetString":"justifyContent"},{"text":"(property) borderRadius: number","docs":"","start":950,"length":12,"line":41,"character":8,"targetString":"borderRadius"},{"text":"(property) zIndex: number","docs":"","start":976,"length":6,"line":42,"character":8,"targetString":"zIndex"},{"text":"(JSX attribute) onPress: () => void","docs":"","start":1003,"length":7,"line":44,"character":6,"targetString":"onPress"},{"text":"const setState: (value: React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>) => void","docs":"","start":1028,"length":8,"line":45,"character":8,"targetString":"setState"},{"text":"(property) visible: boolean","docs":"","start":1039,"length":7,"line":45,"character":19,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":1055,"length":9,"line":45,"character":35,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":1066,"length":5,"line":45,"character":46,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":1072,"length":9,"line":45,"character":52,"targetString":"placement"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":1108,"length":4,"line":48,"character":7,"targetString":"Text"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":1124,"length":4,"line":48,"character":23,"targetString":"Text"},{"text":"import Drawer","docs":"","start":1166,"length":6,"line":51,"character":2,"targetString":"Drawer"}],[{"text":"import Drawer","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Drawer"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":17,"length":5,"line":0,"character":17,"targetString":"Utils"},{"text":"const viewWidth: number","docs":"","start":110,"length":9,"line":3,"character":8,"targetString":"viewWidth"},{"text":"(method) convertX(d: number): number","docs":"","start":121,"length":8,"line":3,"character":19,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":131,"length":2,"line":3,"character":29,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":138,"length":5,"line":3,"character":36,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":144,"length":10,"line":3,"character":42,"targetString":"RatioUtils"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":164,"length":5,"line":5,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>>","docs":"","start":171,"length":8,"line":5,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":183,"length":5,"line":5,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    visible: boolean;\n    placement: string;\n}>(initialState: {\n    visible: boolean;\n    placement: string;\n} | (() => {\n    visible: boolean;\n    placement: string;\n})): [{\n    visible: boolean;\n    placement: string;\n}, React.Dispatch<React.SetStateAction<{\n    ...;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":189,"length":8,"line":5,"character":32,"targetString":"useState"},{"text":"(property) visible: boolean","docs":"","start":204,"length":7,"line":6,"character":4,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":224,"length":9,"line":7,"character":4,"targetString":"placement"},{"text":"import Drawer","docs":"","start":253,"length":6,"line":10,"character":1,"targetString":"Drawer"},{"text":"(JSX attribute) width: any","docs":"","start":262,"length":5,"line":11,"character":2,"targetString":"width"},{"text":"(JSX attribute) height: number","docs":"","start":281,"length":6,"line":12,"character":2,"targetString":"height"},{"text":"(JSX attribute) hasMask: boolean","docs":"","start":306,"length":7,"line":13,"character":2,"targetString":"hasMask"},{"text":"(JSX attribute) placement: string","docs":"","start":324,"length":9,"line":14,"character":2,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":335,"length":5,"line":14,"character":13,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":341,"length":9,"line":14,"character":19,"targetString":"placement"},{"text":"(JSX attribute) visible: boolean","docs":"","start":354,"length":7,"line":15,"character":2,"targetString":"visible"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":363,"length":5,"line":15,"character":11,"targetString":"state"},{"text":"(property) visible: boolean","docs":"","start":369,"length":7,"line":15,"character":17,"targetString":"visible"},{"text":"(JSX attribute) onMaskPress: () => void","docs":"","start":380,"length":11,"line":16,"character":2,"targetString":"onMaskPress"},{"text":"const setState: (value: React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>) => void","docs":"","start":405,"length":8,"line":17,"character":4,"targetString":"setState"},{"text":"(property) visible: boolean","docs":"","start":416,"length":7,"line":17,"character":15,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":432,"length":9,"line":17,"character":31,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":443,"length":5,"line":17,"character":42,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":449,"length":9,"line":17,"character":48,"targetString":"placement"},{"text":"(JSX attribute) onStateChange: (state: any) => void","docs":"","start":470,"length":13,"line":19,"character":2,"targetString":"onStateChange"},{"text":"(parameter) state: any","docs":"","start":485,"length":5,"line":19,"character":17,"targetString":"state"},{"text":"var console: Console","docs":"","start":500,"length":7,"line":20,"character":4,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":508,"length":3,"line":20,"character":12,"targetString":"log"},{"text":"(parameter) state: any","docs":"","start":512,"length":5,"line":20,"character":16,"targetString":"state"},{"text":"(JSX attribute) style: {\n    width: string;\n    height: string;\n    backgroundColor: string;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":539,"length":5,"line":24,"character":4,"targetString":"style"},{"text":"(property) width: string","docs":"","start":554,"length":5,"line":25,"character":6,"targetString":"width"},{"text":"(property) height: string","docs":"","start":575,"length":6,"line":26,"character":6,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":597,"length":15,"line":27,"character":6,"targetString":"backgroundColor"},{"text":"(property) alignItems: string","docs":"","start":627,"length":10,"line":28,"character":6,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":655,"length":14,"line":29,"character":6,"targetString":"justifyContent"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":697,"length":4,"line":32,"character":5,"targetString":"Text"},{"text":"(JSX attribute) style: {\n    fontSize: number;\n}","docs":"","start":702,"length":5,"line":32,"character":10,"targetString":"style"},{"text":"(property) fontSize: number","docs":"","start":711,"length":8,"line":32,"character":19,"targetString":"fontSize"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":748,"length":4,"line":32,"character":56,"targetString":"Text"},{"text":"import Drawer","docs":"","start":766,"length":6,"line":34,"character":2,"targetString":"Drawer"}],[{"text":"import Drawer","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Drawer"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":17,"length":5,"line":0,"character":17,"targetString":"Utils"},{"text":"const viewWidth: number","docs":"","start":110,"length":9,"line":3,"character":8,"targetString":"viewWidth"},{"text":"(method) convertX(d: number): number","docs":"","start":121,"length":8,"line":3,"character":19,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":131,"length":2,"line":3,"character":29,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":138,"length":5,"line":3,"character":36,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":144,"length":10,"line":3,"character":42,"targetString":"RatioUtils"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":164,"length":5,"line":5,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>>","docs":"","start":171,"length":8,"line":5,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":183,"length":5,"line":5,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    visible: boolean;\n    placement: string;\n}>(initialState: {\n    visible: boolean;\n    placement: string;\n} | (() => {\n    visible: boolean;\n    placement: string;\n})): [{\n    visible: boolean;\n    placement: string;\n}, React.Dispatch<React.SetStateAction<{\n    ...;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":189,"length":8,"line":5,"character":32,"targetString":"useState"},{"text":"(property) visible: boolean","docs":"","start":204,"length":7,"line":6,"character":4,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":224,"length":9,"line":7,"character":4,"targetString":"placement"},{"text":"import Drawer","docs":"","start":251,"length":6,"line":10,"character":1,"targetString":"Drawer"},{"text":"(JSX attribute) width: number","docs":"","start":260,"length":5,"line":11,"character":2,"targetString":"width"},{"text":"(JSX attribute) height: any","docs":"","start":283,"length":6,"line":12,"character":2,"targetString":"height"},{"text":"(JSX attribute) hasMask: boolean","docs":"","start":304,"length":7,"line":13,"character":2,"targetString":"hasMask"},{"text":"(JSX attribute) placement: string","docs":"","start":321,"length":9,"line":14,"character":2,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":332,"length":5,"line":14,"character":13,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":338,"length":9,"line":14,"character":19,"targetString":"placement"},{"text":"(JSX attribute) visible: boolean","docs":"","start":351,"length":7,"line":15,"character":2,"targetString":"visible"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":360,"length":5,"line":15,"character":11,"targetString":"state"},{"text":"(property) visible: boolean","docs":"","start":366,"length":7,"line":15,"character":17,"targetString":"visible"},{"text":"(JSX attribute) onMaskPress: () => void","docs":"","start":377,"length":11,"line":16,"character":2,"targetString":"onMaskPress"},{"text":"const setState: (value: React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>) => void","docs":"","start":402,"length":8,"line":17,"character":4,"targetString":"setState"},{"text":"(property) visible: boolean","docs":"","start":413,"length":7,"line":17,"character":15,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":429,"length":9,"line":17,"character":31,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":440,"length":5,"line":17,"character":42,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":446,"length":9,"line":17,"character":48,"targetString":"placement"},{"text":"(JSX attribute) onStateChange: (state: any) => void","docs":"","start":467,"length":13,"line":19,"character":2,"targetString":"onStateChange"},{"text":"(parameter) state: any","docs":"","start":482,"length":5,"line":19,"character":17,"targetString":"state"},{"text":"var console: Console","docs":"","start":497,"length":7,"line":20,"character":4,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":505,"length":3,"line":20,"character":12,"targetString":"log"},{"text":"(parameter) state: any","docs":"","start":509,"length":5,"line":20,"character":16,"targetString":"state"},{"text":"(JSX attribute) style: {\n    width: string;\n    height: string;\n    backgroundColor: string;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":536,"length":5,"line":24,"character":4,"targetString":"style"},{"text":"(property) width: string","docs":"","start":551,"length":5,"line":25,"character":6,"targetString":"width"},{"text":"(property) height: string","docs":"","start":572,"length":6,"line":26,"character":6,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":594,"length":15,"line":27,"character":6,"targetString":"backgroundColor"},{"text":"(property) alignItems: string","docs":"","start":624,"length":10,"line":28,"character":6,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":652,"length":14,"line":29,"character":6,"targetString":"justifyContent"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":694,"length":4,"line":32,"character":5,"targetString":"Text"},{"text":"(JSX attribute) style: {\n    fontSize: number;\n}","docs":"","start":699,"length":5,"line":32,"character":10,"targetString":"style"},{"text":"(property) fontSize: number","docs":"","start":708,"length":8,"line":32,"character":19,"targetString":"fontSize"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":739,"length":4,"line":32,"character":50,"targetString":"Text"},{"text":"(JSX attribute) style: {\n    backgroundColor: string;\n    width: number;\n    height: number;\n    marginTop: number;\n    alignItems: string;\n    justifyContent: string;\n    borderRadius: number;\n    zIndex: number;\n}","docs":"","start":773,"length":5,"line":34,"character":6,"targetString":"style"},{"text":"(property) backgroundColor: string","docs":"","start":790,"length":15,"line":35,"character":8,"targetString":"backgroundColor"},{"text":"(property) width: number","docs":"","start":823,"length":5,"line":36,"character":8,"targetString":"width"},{"text":"(property) height: number","docs":"","start":842,"length":6,"line":37,"character":8,"targetString":"height"},{"text":"(property) marginTop: number","docs":"","start":862,"length":9,"line":38,"character":8,"targetString":"marginTop"},{"text":"(property) alignItems: string","docs":"","start":885,"length":10,"line":39,"character":8,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":915,"length":14,"line":40,"character":8,"targetString":"justifyContent"},{"text":"(property) borderRadius: number","docs":"","start":949,"length":12,"line":41,"character":8,"targetString":"borderRadius"},{"text":"(property) zIndex: number","docs":"","start":975,"length":6,"line":42,"character":8,"targetString":"zIndex"},{"text":"(JSX attribute) onPress: () => void","docs":"","start":1002,"length":7,"line":44,"character":6,"targetString":"onPress"},{"text":"const setState: (value: React.SetStateAction<{\n    visible: boolean;\n    placement: string;\n}>) => void","docs":"","start":1027,"length":8,"line":45,"character":8,"targetString":"setState"},{"text":"(property) visible: boolean","docs":"","start":1038,"length":7,"line":45,"character":19,"targetString":"visible"},{"text":"(property) placement: string","docs":"","start":1054,"length":9,"line":45,"character":35,"targetString":"placement"},{"text":"const state: {\n    visible: boolean;\n    placement: string;\n}","docs":"","start":1065,"length":5,"line":45,"character":46,"targetString":"state"},{"text":"(property) placement: string","docs":"","start":1071,"length":9,"line":45,"character":52,"targetString":"placement"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":1107,"length":4,"line":48,"character":7,"targetString":"Text"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":1123,"length":4,"line":48,"character":23,"targetString":"Text"},{"text":"import Drawer","docs":"","start":1165,"length":6,"line":51,"character":2,"targetString":"Drawer"}]],"/animation/wave":[[{"text":"import Wave","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Wave"},{"text":"import Wave","docs":"","start":90,"length":4,"line":3,"character":1,"targetString":"Wave"}],[{"text":"import Wave","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Wave"},{"text":"import Wave","docs":"","start":90,"length":4,"line":3,"character":1,"targetString":"Wave"},{"text":"(JSX attribute) style: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":97,"length":5,"line":4,"character":2,"targetString":"style"},{"text":"(property) width: number","docs":"","start":106,"length":5,"line":4,"character":11,"targetString":"width"},{"text":"(property) height: number","docs":"","start":118,"length":6,"line":4,"character":23,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":131,"length":12,"line":4,"character":36,"targetString":"borderRadius"},{"text":"(JSX attribute) H: number","docs":"","start":153,"length":1,"line":5,"character":2,"targetString":"H"},{"text":"(JSX attribute) waveParams: {\n    A: number;\n    T: number;\n    fill: string;\n}[]","docs":"","start":162,"length":10,"line":6,"character":2,"targetString":"waveParams"},{"text":"(property) A: number","docs":"","start":182,"length":1,"line":7,"character":6,"targetString":"A"},{"text":"(property) T: number","docs":"","start":189,"length":1,"line":7,"character":13,"targetString":"T"},{"text":"(property) fill: string","docs":"","start":197,"length":4,"line":7,"character":21,"targetString":"fill"},{"text":"(property) A: number","docs":"","start":219,"length":1,"line":8,"character":6,"targetString":"A"},{"text":"(property) T: number","docs":"","start":226,"length":1,"line":8,"character":13,"targetString":"T"},{"text":"(property) fill: string","docs":"","start":234,"length":4,"line":8,"character":21,"targetString":"fill"},{"text":"(JSX attribute) animated: boolean","docs":"","start":257,"length":8,"line":10,"character":2,"targetString":"animated"}]],"/feedback/dialog":[[{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Dialog"},{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":41,"length":6,"line":2,"character":0,"targetString":"Dialog"},{"text":"(property) Dialog.alert: (option: DialogAlertProps, option2?: DialogElse | undefined) => void","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"alert"},{"text":"(property) DialogProps.title: string","docs":"","start":58,"length":5,"line":3,"character":2,"targetString":"title"},{"text":"(property) DialogProps.subTitle?: string | undefined","docs":"","start":76,"length":8,"line":4,"character":2,"targetString":"subTitle"},{"text":"(property) DialogProps.confirmText?: string | undefined","docs":"","start":101,"length":11,"line":5,"character":2,"targetString":"confirmText"},{"text":"(property) DialogProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":127,"length":9,"line":6,"character":2,"targetString":"onConfirm"},{"text":"(parameter) data: any","docs":"","start":139,"length":4,"line":6,"character":14,"targetString":"data"},{"text":"var close: () => void","docs":"","start":147,"length":5,"line":6,"character":22,"targetString":"close"},{"text":"var close: () => void","docs":"","start":165,"length":5,"line":7,"character":4,"targetString":"close"}],[{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Dialog"},{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":41,"length":6,"line":2,"character":0,"targetString":"Dialog"},{"text":"(property) Dialog.confirm: (option: DialogConfirmProps, option2?: DialogElse | undefined) => void","docs":"","start":48,"length":7,"line":2,"character":7,"targetString":"confirm"},{"text":"(property) DialogProps.title: string","docs":"","start":60,"length":5,"line":3,"character":2,"targetString":"title"},{"text":"(property) DialogProps.subTitle?: string | undefined","docs":"","start":78,"length":8,"line":4,"character":2,"targetString":"subTitle"},{"text":"(property) DialogCancelProps.cancelText?: string | undefined","docs":"","start":103,"length":10,"line":5,"character":2,"targetString":"cancelText"},{"text":"(property) DialogProps.confirmText?: string | undefined","docs":"","start":127,"length":11,"line":6,"character":2,"targetString":"confirmText"},{"text":"(property) DialogProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":153,"length":9,"line":7,"character":2,"targetString":"onConfirm"},{"text":"(parameter) data: any","docs":"","start":165,"length":4,"line":7,"character":14,"targetString":"data"},{"text":"var close: () => void","docs":"","start":173,"length":5,"line":7,"character":22,"targetString":"close"},{"text":"var close: () => void","docs":"","start":191,"length":5,"line":8,"character":4,"targetString":"close"}],[{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Dialog"},{"text":"const state: {\n    promptUnControlled: string;\n}","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    promptUnControlled: string;\n}>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    promptUnControlled: string;\n}>(initialState: {\n    promptUnControlled: string;\n} | (() => {\n    promptUnControlled: string;\n})): [{\n    promptUnControlled: string;\n}, React.Dispatch<React.SetStateAction<{\n    promptUnControlled: string;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) promptUnControlled: string","docs":"","start":86,"length":18,"line":3,"character":2,"targetString":"promptUnControlled"},{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":115,"length":6,"line":6,"character":0,"targetString":"Dialog"},{"text":"(property) Dialog.prompt: (option: DialogPromptProps, option2?: DialogElse | undefined) => void","docs":"","start":122,"length":6,"line":6,"character":7,"targetString":"prompt"},{"text":"(property) title: string","docs":"","start":133,"length":5,"line":7,"character":2,"targetString":"title"},{"text":"(property) DialogCancelProps.cancelText?: string | undefined","docs":"","start":174,"length":10,"line":8,"character":2,"targetString":"cancelText"},{"text":"(property) confirmText?: string | undefined","docs":"","start":198,"length":11,"line":9,"character":2,"targetString":"confirmText"},{"text":"(property) TextInputProps.defaultValue?: string | undefined","docs":"Provides an initial value that will change when the user starts typing.\nUseful for simple use-cases where you don't want to deal with listening to events\nand updating the value prop to keep the controlled state in sync.","start":224,"length":12,"line":10,"character":2,"targetString":"defaultValue"},{"text":"const state: {\n    promptUnControlled: string;\n}","docs":"","start":238,"length":5,"line":10,"character":16,"targetString":"state"},{"text":"(property) promptUnControlled: string","docs":"","start":244,"length":18,"line":10,"character":22,"targetString":"promptUnControlled"},{"text":"(property) TextInputProps.placeholder?: string | undefined","docs":"The string that will be rendered before text input has been entered","start":266,"length":11,"line":11,"character":2,"targetString":"placeholder"},{"text":"(property) onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":293,"length":9,"line":12,"character":2,"targetString":"onConfirm"},{"text":"(parameter) text: any","docs":"","start":305,"length":4,"line":12,"character":14,"targetString":"text"},{"text":"var close: () => void","docs":"","start":313,"length":5,"line":12,"character":22,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    promptUnControlled: string;\n}>) => void","docs":"","start":331,"length":8,"line":13,"character":4,"targetString":"setState"},{"text":"(property) promptUnControlled: string","docs":"","start":342,"length":18,"line":13,"character":15,"targetString":"promptUnControlled"},{"text":"(parameter) text: any","docs":"","start":362,"length":4,"line":13,"character":35,"targetString":"text"},{"text":"var close: () => void","docs":"","start":375,"length":5,"line":14,"character":4,"targetString":"close"}],[{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Dialog"},{"text":"const state: {\n    promptControlled: string;\n}","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    promptControlled: string;\n}>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    promptControlled: string;\n}>(initialState: {\n    promptControlled: string;\n} | (() => {\n    promptControlled: string;\n})): [{\n    promptControlled: string;\n}, React.Dispatch<React.SetStateAction<{\n    promptControlled: string;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) promptControlled: string","docs":"","start":86,"length":16,"line":3,"character":2,"targetString":"promptControlled"},{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":113,"length":6,"line":6,"character":0,"targetString":"Dialog"},{"text":"(property) Dialog.prompt: (option: DialogPromptProps, option2?: DialogElse | undefined) => void","docs":"","start":120,"length":6,"line":6,"character":7,"targetString":"prompt"},{"text":"(property) title: string","docs":"","start":131,"length":5,"line":7,"character":2,"targetString":"title"},{"text":"(property) DialogCancelProps.cancelText?: string | undefined","docs":"","start":170,"length":10,"line":8,"character":2,"targetString":"cancelText"},{"text":"(property) confirmText?: string | undefined","docs":"","start":194,"length":11,"line":9,"character":2,"targetString":"confirmText"},{"text":"(property) TextInputProps.value?: string | undefined","docs":"The value to show for the text input. TextInput is a controlled component,\nwhich means the native value will be forced to match this value prop if provided.\nFor most uses this works great, but in some cases this may cause flickering - one common cause is preventing edits by keeping value the same.\nIn addition to simply setting the same value, either set editable={false},\nor set/update maxLength to prevent unwanted edits without flicker.","start":220,"length":5,"line":10,"character":2,"targetString":"value"},{"text":"const state: {\n    promptControlled: string;\n}","docs":"","start":227,"length":5,"line":10,"character":9,"targetString":"state"},{"text":"(property) promptControlled: string","docs":"","start":233,"length":16,"line":10,"character":15,"targetString":"promptControlled"},{"text":"(property) TextInputProps.placeholder?: string | undefined","docs":"The string that will be rendered before text input has been entered","start":253,"length":11,"line":11,"character":2,"targetString":"placeholder"},{"text":"(property) TextInputProps.onChangeText?: ((text: string) => void) | undefined","docs":"Callback that is called when the text input's text changes.\nChanged text is passed as an argument to the callback handler.","start":280,"length":12,"line":12,"character":2,"targetString":"onChangeText"},{"text":"(parameter) text: string","docs":"","start":294,"length":4,"line":12,"character":16,"targetString":"text"},{"text":"const t: number","docs":"","start":416,"length":1,"line":14,"character":10,"targetString":"t"},{"text":"(parameter) text: string","docs":"","start":421,"length":4,"line":14,"character":15,"targetString":"text"},{"text":"const t: number","docs":"","start":442,"length":1,"line":15,"character":15,"targetString":"t"},{"text":"var Number: NumberConstructor","docs":"An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.","start":461,"length":6,"line":15,"character":34,"targetString":"Number"},{"text":"(method) NumberConstructor.isNaN(number: unknown): boolean","docs":"Returns a Boolean value that indicates whether a value is the reserved value NaN (not a\r\nnumber). Unlike the global isNaN(), Number.isNaN() doesn't forcefully convert the parameter\r\nto a number. Only values of the type number, that are also NaN, result in true.","start":468,"length":5,"line":15,"character":41,"targetString":"isNaN"},{"text":"const t: number","docs":"","start":474,"length":1,"line":15,"character":47,"targetString":"t"},{"text":"(parameter) text: string","docs":"","start":493,"length":4,"line":16,"character":13,"targetString":"text"},{"text":"(property) onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":512,"length":9,"line":19,"character":2,"targetString":"onConfirm"},{"text":"(parameter) text: any","docs":"","start":524,"length":4,"line":19,"character":14,"targetString":"text"},{"text":"var close: () => void","docs":"","start":532,"length":5,"line":19,"character":22,"targetString":"close"},{"text":"var console: Console","docs":"","start":550,"length":7,"line":20,"character":4,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":558,"length":3,"line":20,"character":12,"targetString":"log"},{"text":"(parameter) text: any","docs":"","start":583,"length":4,"line":20,"character":37,"targetString":"text"},{"text":"const setState: (value: React.SetStateAction<{\n    promptControlled: string;\n}>) => void","docs":"","start":594,"length":8,"line":21,"character":4,"targetString":"setState"},{"text":"(property) promptControlled: string","docs":"","start":605,"length":16,"line":21,"character":15,"targetString":"promptControlled"},{"text":"(parameter) text: any","docs":"","start":623,"length":4,"line":21,"character":33,"targetString":"text"},{"text":"var close: () => void","docs":"","start":636,"length":5,"line":22,"character":4,"targetString":"close"}],[{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Dialog"},{"text":"const state: {\n    checkValueRadio: string;\n}","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    checkValueRadio: string;\n}>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    checkValueRadio: string;\n}>(initialState: {\n    checkValueRadio: string;\n} | (() => {\n    checkValueRadio: string;\n})): [{\n    checkValueRadio: string;\n}, React.Dispatch<React.SetStateAction<{\n    checkValueRadio: string;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) checkValueRadio: string","docs":"","start":86,"length":15,"line":3,"character":2,"targetString":"checkValueRadio"},{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":117,"length":6,"line":6,"character":0,"targetString":"Dialog"},{"text":"(property) Dialog.checkbox: (option: DialogCheckboxProps, option2?: DialogElse | undefined) => void","docs":"","start":124,"length":8,"line":6,"character":7,"targetString":"checkbox"},{"text":"(property) DialogProps.title: string","docs":"","start":137,"length":5,"line":7,"character":2,"targetString":"title"},{"text":"(property) DialogCancelProps.cancelText?: string | undefined","docs":"","start":158,"length":10,"line":8,"character":2,"targetString":"cancelText"},{"text":"(property) DialogProps.confirmText?: string | undefined","docs":"","start":182,"length":11,"line":9,"character":2,"targetString":"confirmText"},{"text":"(property) DialogCheckboxProps.type?: \"radio\" | \"switch\" | undefined","docs":"","start":208,"length":4,"line":10,"character":2,"targetString":"type"},{"text":"(property) DialogCheckboxProps.value: string | number | string[]","docs":"","start":225,"length":5,"line":11,"character":2,"targetString":"value"},{"text":"const state: {\n    checkValueRadio: string;\n}","docs":"","start":232,"length":5,"line":11,"character":9,"targetString":"state"},{"text":"(property) checkValueRadio: string","docs":"","start":238,"length":15,"line":11,"character":15,"targetString":"checkValueRadio"},{"text":"(property) DialogCheckboxProps.dataSource: DialogCheckbox[]","docs":"","start":257,"length":10,"line":12,"character":2,"targetString":"dataSource"},{"text":"(property) DialogCheckbox.value?: string | number | undefined","docs":"","start":283,"length":5,"line":14,"character":6,"targetString":"value"},{"text":"(property) DialogCheckbox.title?: string | undefined","docs":"","start":305,"length":5,"line":15,"character":6,"targetString":"title"},{"text":"(property) DialogCheckbox.value?: string | number | undefined","docs":"","start":351,"length":5,"line":18,"character":6,"targetString":"value"},{"text":"(property) DialogCheckbox.title?: string | undefined","docs":"","start":373,"length":5,"line":19,"character":6,"targetString":"title"},{"text":"(property) DialogCheckbox.value?: string | number | undefined","docs":"","start":426,"length":5,"line":22,"character":6,"targetString":"value"},{"text":"(property) DialogCheckbox.title?: string | undefined","docs":"","start":448,"length":5,"line":23,"character":6,"targetString":"title"},{"text":"(property) DialogCheckbox.iconSize?: number | undefined","docs":"","start":489,"length":8,"line":24,"character":6,"targetString":"iconSize"},{"text":"(property) DialogCheckbox.Icon?: string | undefined","docs":"","start":509,"length":4,"line":25,"character":6,"targetString":"Icon"},{"text":"(property) DialogCheckbox.reverse?: boolean | undefined","docs":"","start":532,"length":7,"line":26,"character":6,"targetString":"reverse"},{"text":"(property) DialogCheckbox.hideOnUnselect?: boolean | undefined","docs":"","start":553,"length":14,"line":27,"character":6,"targetString":"hideOnUnselect"},{"text":"(property) DialogProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":589,"length":9,"line":30,"character":2,"targetString":"onConfirm"},{"text":"(parameter) value: any","docs":"","start":601,"length":5,"line":30,"character":14,"targetString":"value"},{"text":"var close: () => void","docs":"","start":610,"length":5,"line":30,"character":23,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    checkValueRadio: string;\n}>) => void","docs":"","start":628,"length":8,"line":31,"character":4,"targetString":"setState"},{"text":"(property) checkValueRadio: string","docs":"","start":639,"length":15,"line":31,"character":15,"targetString":"checkValueRadio"},{"text":"(parameter) value: any","docs":"","start":656,"length":5,"line":31,"character":32,"targetString":"value"},{"text":"var close: () => void","docs":"","start":670,"length":5,"line":32,"character":4,"targetString":"close"}],[{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Dialog"},{"text":"const state: {\n    checkValueSwitch: string[];\n}","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    checkValueSwitch: string[];\n}>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    checkValueSwitch: string[];\n}>(initialState: {\n    checkValueSwitch: string[];\n} | (() => {\n    checkValueSwitch: string[];\n})): [{\n    checkValueSwitch: string[];\n}, React.Dispatch<React.SetStateAction<{\n    checkValueSwitch: string[];\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) checkValueSwitch: string[]","docs":"","start":86,"length":16,"line":3,"character":2,"targetString":"checkValueSwitch"},{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":120,"length":6,"line":6,"character":0,"targetString":"Dialog"},{"text":"(property) Dialog.checkbox: (option: DialogCheckboxProps, option2?: DialogElse | undefined) => void","docs":"","start":127,"length":8,"line":6,"character":7,"targetString":"checkbox"},{"text":"(property) DialogProps.title: string","docs":"","start":140,"length":5,"line":7,"character":2,"targetString":"title"},{"text":"(property) DialogCancelProps.cancelText?: string | undefined","docs":"","start":161,"length":10,"line":8,"character":2,"targetString":"cancelText"},{"text":"(property) 'l': any","docs":"","start":183,"length":0,"line":8,"character":24,"targetString":""},{"text":"(property) DialogProps.confirmText?: string | undefined","docs":"","start":187,"length":11,"line":9,"character":2,"targetString":"confirmText"},{"text":"(property) DialogCheckboxProps.type?: \"switch\" | \"radio\" | undefined","docs":"","start":213,"length":4,"line":10,"character":2,"targetString":"type"},{"text":"(property) DialogCheckboxProps.value: string | number | string[]","docs":"","start":231,"length":5,"line":11,"character":2,"targetString":"value"},{"text":"const state: {\n    checkValueSwitch: string[];\n}","docs":"","start":238,"length":5,"line":11,"character":9,"targetString":"state"},{"text":"(property) checkValueSwitch: string[]","docs":"","start":244,"length":16,"line":11,"character":15,"targetString":"checkValueSwitch"},{"text":"(property) DialogCheckboxProps.dataSource: DialogCheckbox[]","docs":"","start":264,"length":10,"line":12,"character":2,"targetString":"dataSource"},{"text":"(property) DialogCheckbox.value?: string | number | undefined","docs":"","start":290,"length":5,"line":14,"character":6,"targetString":"value"},{"text":"(property) DialogCheckbox.title?: string | undefined","docs":"","start":312,"length":5,"line":15,"character":6,"targetString":"title"},{"text":"(property) DialogCheckbox.value?: string | number | undefined","docs":"","start":358,"length":5,"line":18,"character":6,"targetString":"value"},{"text":"(property) DialogCheckbox.title?: string | undefined","docs":"","start":380,"length":5,"line":19,"character":6,"targetString":"title"},{"text":"(property) DialogCheckbox.value?: string | number | undefined","docs":"","start":433,"length":5,"line":22,"character":6,"targetString":"value"},{"text":"(property) DialogCheckbox.title?: string | undefined","docs":"","start":455,"length":5,"line":23,"character":6,"targetString":"title"},{"text":"(property) DialogCheckbox.value?: string | number | undefined","docs":"","start":509,"length":5,"line":26,"character":6,"targetString":"value"},{"text":"(property) DialogCheckbox.title?: string | undefined","docs":"","start":531,"length":5,"line":27,"character":6,"targetString":"title"},{"text":"(property) DialogCheckbox.value?: string | number | undefined","docs":"","start":578,"length":5,"line":30,"character":6,"targetString":"value"},{"text":"(property) DialogCheckbox.title?: string | undefined","docs":"","start":600,"length":5,"line":31,"character":6,"targetString":"title"},{"text":"(property) DialogCheckbox.iconSize?: number | undefined","docs":"","start":642,"length":8,"line":32,"character":6,"targetString":"iconSize"},{"text":"(property) DialogCheckbox.Icon?: string | undefined","docs":"","start":662,"length":4,"line":33,"character":6,"targetString":"Icon"},{"text":"(property) DialogCheckbox.reverse?: boolean | undefined","docs":"","start":685,"length":7,"line":34,"character":6,"targetString":"reverse"},{"text":"(property) DialogCheckbox.hideOnUnselect?: boolean | undefined","docs":"","start":706,"length":14,"line":35,"character":6,"targetString":"hideOnUnselect"},{"text":"(property) DialogCheckbox.value?: string | number | undefined","docs":"","start":747,"length":5,"line":38,"character":6,"targetString":"value"},{"text":"(property) DialogCheckbox.title?: string | undefined","docs":"","start":769,"length":5,"line":39,"character":6,"targetString":"title"},{"text":"(property) DialogCheckbox.reverse?: boolean | undefined","docs":"","start":810,"length":7,"line":40,"character":6,"targetString":"reverse"},{"text":"(property) DialogProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":839,"length":9,"line":43,"character":2,"targetString":"onConfirm"},{"text":"(parameter) value: any","docs":"","start":851,"length":5,"line":43,"character":14,"targetString":"value"},{"text":"var close: () => void","docs":"","start":860,"length":5,"line":43,"character":23,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    checkValueSwitch: string[];\n}>) => void","docs":"","start":878,"length":8,"line":44,"character":4,"targetString":"setState"},{"text":"(property) checkValueSwitch: string[]","docs":"","start":889,"length":16,"line":44,"character":15,"targetString":"checkValueSwitch"},{"text":"(parameter) value: any","docs":"","start":907,"length":5,"line":44,"character":33,"targetString":"value"},{"text":"var close: () => void","docs":"","start":921,"length":5,"line":45,"character":4,"targetString":"close"}],[{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Dialog"},{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":41,"length":6,"line":2,"character":0,"targetString":"Dialog"},{"text":"(property) Dialog.list: (option: DialogListProps, option2?: DialogElse | undefined) => void","docs":"","start":48,"length":4,"line":2,"character":7,"targetString":"list"},{"text":"(property) title: string","docs":"","start":57,"length":5,"line":3,"character":2,"targetString":"title"},{"text":"(property) subTitle?: string | undefined","docs":"","start":75,"length":8,"line":4,"character":2,"targetString":"subTitle"},{"text":"(property) DialogListProps.dataSource: DialogList[]","docs":"","start":98,"length":10,"line":5,"character":2,"targetString":"dataSource"},{"text":"var Array: ArrayConstructor\nnew (arrayLength?: number | undefined) => any[] (+2 overloads)","docs":"","start":114,"length":5,"line":5,"character":18,"targetString":"Array"},{"text":"(method) Array<any>.fill(value: any, start?: number | undefined, end?: number | undefined): any[]","docs":"Returns the this object after filling the section identified by start and end with value","start":123,"length":4,"line":5,"character":27,"targetString":"fill"},{"text":"(method) Array<any>.map<{\n    title: string;\n    onPress: () => void;\n}>(callbackfn: (value: any, index: number, array: any[]) => {\n    title: string;\n    onPress: () => void;\n}, thisArg?: any): {\n    title: string;\n    onPress: () => void;\n}[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":131,"length":3,"line":5,"character":35,"targetString":"map"},{"text":"(parameter) _: any","docs":"","start":136,"length":1,"line":5,"character":40,"targetString":"_"},{"text":"(parameter) idx: number","docs":"","start":139,"length":3,"line":5,"character":43,"targetString":"idx"},{"text":"(property) title: string","docs":"","start":154,"length":5,"line":6,"character":4,"targetString":"title"},{"text":"(parameter) idx: number","docs":"","start":161,"length":3,"line":6,"character":11,"targetString":"idx"},{"text":"(parameter) idx: number","docs":"","start":202,"length":3,"line":6,"character":52,"targetString":"idx"},{"text":"(property) onPress: () => void","docs":"","start":213,"length":7,"line":7,"character":4,"targetString":"onPress"},{"text":"(parameter) idx: number","docs":"","start":236,"length":3,"line":8,"character":6,"targetString":"idx"},{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":249,"length":6,"line":8,"character":19,"targetString":"Dialog"},{"text":"(property) Dialog.close: () => void","docs":"","start":256,"length":5,"line":8,"character":26,"targetString":"close"},{"text":"var console: Console","docs":"","start":271,"length":7,"line":9,"character":6,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":279,"length":3,"line":9,"character":14,"targetString":"log"},{"text":"(parameter) idx: number","docs":"","start":292,"length":3,"line":9,"character":27,"targetString":"idx"},{"text":"(property) DialogCancelProps.cancelText?: string | undefined","docs":"","start":314,"length":10,"line":12,"character":2,"targetString":"cancelText"},{"text":"(property) confirmText?: string | undefined","docs":"","start":338,"length":11,"line":13,"character":2,"targetString":"confirmText"},{"text":"(property) onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":364,"length":9,"line":14,"character":2,"targetString":"onConfirm"},{"text":"(parameter) data: any","docs":"","start":376,"length":4,"line":14,"character":14,"targetString":"data"},{"text":"var close: () => void","docs":"","start":384,"length":5,"line":14,"character":22,"targetString":"close"},{"text":"var close: () => void","docs":"","start":402,"length":5,"line":15,"character":4,"targetString":"close"}],[{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Dialog"},{"text":"(alias) class Dialog\nimport Dialog","docs":"","start":41,"length":6,"line":2,"character":0,"targetString":"Dialog"},{"text":"(property) Dialog.custom: (option: DialogCustomProps, option2?: DialogElse | undefined) => void","docs":"","start":48,"length":6,"line":2,"character":7,"targetString":"custom"},{"text":"(property) DialogProps.title: string","docs":"","start":59,"length":5,"line":3,"character":2,"targetString":"title"},{"text":"(property) DialogCancelProps.cancelText?: string | undefined","docs":"","start":78,"length":10,"line":4,"character":2,"targetString":"cancelText"},{"text":"(property) DialogProps.confirmText?: string | undefined","docs":"","start":102,"length":11,"line":5,"character":2,"targetString":"confirmText"},{"text":"(property) DialogCustomProps.content?: any","docs":"","start":128,"length":7,"line":6,"character":2,"targetString":"content"},{"text":"(JSX attribute) style: {\n    height: number;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":155,"length":5,"line":8,"character":6,"targetString":"style"},{"text":"(property) height: number","docs":"","start":164,"length":6,"line":8,"character":15,"targetString":"height"},{"text":"(property) alignItems: string","docs":"","start":177,"length":10,"line":8,"character":28,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":199,"length":14,"line":8,"character":50,"targetString":"justifyContent"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":240,"length":4,"line":10,"character":7,"targetString":"Text"},{"text":"(JSX attribute) style: {\n    fontSize: number;\n    color: string;\n}","docs":"","start":245,"length":5,"line":10,"character":12,"targetString":"style"},{"text":"(property) fontSize: number","docs":"","start":254,"length":8,"line":10,"character":21,"targetString":"fontSize"},{"text":"(property) color: string","docs":"","start":268,"length":5,"line":10,"character":35,"targetString":"color"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":301,"length":4,"line":10,"character":68,"targetString":"Text"},{"text":"(property) DialogProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":326,"length":9,"line":13,"character":2,"targetString":"onConfirm"},{"text":"(parameter) data: any","docs":"","start":338,"length":4,"line":13,"character":14,"targetString":"data"},{"text":"var close: () => void","docs":"","start":346,"length":5,"line":13,"character":22,"targetString":"close"},{"text":"var close: () => void","docs":"","start":364,"length":5,"line":14,"character":4,"targetString":"close"}]],"/feedback/global-toast":[[{"text":"(alias) const GlobalToast: {\n    show: (option: Omit<GlobalToastProps, 'show' | 'onFinish'>) => void;\n    hide: () => void;\n}\nimport GlobalToast","docs":"","start":9,"length":11,"line":0,"character":9,"targetString":"GlobalToast"},{"text":"(alias) const GlobalToast: {\n    show: (option: Omit<GlobalToastProps, 'show' | 'onFinish'>) => void;\n    hide: () => void;\n}\nimport GlobalToast","docs":"","start":46,"length":11,"line":2,"character":0,"targetString":"GlobalToast"},{"text":"(property) show: (option: Omit<GlobalToastProps, \"show\" | \"onFinish\">) => void","docs":"","start":58,"length":4,"line":2,"character":12,"targetString":"show"},{"text":"(property) text?: string | undefined","docs":"","start":67,"length":4,"line":3,"character":2,"targetString":"text"},{"text":"(property) showIcon?: boolean | undefined","docs":"","start":145,"length":8,"line":4,"character":2,"targetString":"showIcon"},{"text":"(property) contentStyle?: StyleProp<ViewStyle>","docs":"","start":164,"length":12,"line":5,"character":2,"targetString":"contentStyle"},{"text":"(property) onFinish: () => void","docs":"","start":184,"length":8,"line":6,"character":2,"targetString":"onFinish"},{"text":"var console: Console","docs":"","start":206,"length":7,"line":7,"character":4,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":214,"length":3,"line":7,"character":12,"targetString":"log"},{"text":"(alias) const GlobalToast: {\n    show: (option: Omit<GlobalToastProps, 'show' | 'onFinish'>) => void;\n    hide: () => void;\n}\nimport GlobalToast","docs":"","start":241,"length":11,"line":8,"character":4,"targetString":"GlobalToast"},{"text":"(property) hide: () => void","docs":"","start":253,"length":4,"line":8,"character":16,"targetString":"hide"}],[{"text":"(alias) const GlobalToast: {\n    show: (option: Omit<GlobalToastProps, 'show' | 'onFinish'>) => void;\n    hide: () => void;\n}\nimport GlobalToast","docs":"","start":9,"length":11,"line":0,"character":9,"targetString":"GlobalToast"},{"text":"(alias) const GlobalToast: {\n    show: (option: Omit<GlobalToastProps, 'show' | 'onFinish'>) => void;\n    hide: () => void;\n}\nimport GlobalToast","docs":"","start":46,"length":11,"line":2,"character":0,"targetString":"GlobalToast"},{"text":"(property) show: (option: Omit<GlobalToastProps, \"show\" | \"onFinish\">) => void","docs":"","start":58,"length":4,"line":2,"character":12,"targetString":"show"},{"text":"(property) text?: string | undefined","docs":"","start":67,"length":4,"line":3,"character":2,"targetString":"text"},{"text":"(property) onFinish: () => void","docs":"","start":95,"length":8,"line":4,"character":2,"targetString":"onFinish"},{"text":"var console: Console","docs":"","start":117,"length":7,"line":5,"character":4,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":125,"length":3,"line":5,"character":12,"targetString":"log"},{"text":"(alias) const GlobalToast: {\n    show: (option: Omit<GlobalToastProps, 'show' | 'onFinish'>) => void;\n    hide: () => void;\n}\nimport GlobalToast","docs":"","start":152,"length":11,"line":6,"character":4,"targetString":"GlobalToast"},{"text":"(property) hide: () => void","docs":"","start":164,"length":4,"line":6,"character":16,"targetString":"hide"}]],"/feedback/modal":[[{"text":"(alias) class Modal\nimport Modal","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Modal"},{"text":"const state: {\n    basicVisible: boolean;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    basicVisible: boolean;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    basicVisible: boolean;\n}>(initialState: {\n    basicVisible: boolean;\n} | (() => {\n    basicVisible: boolean;\n})): [{\n    basicVisible: boolean;\n}, React.Dispatch<React.SetStateAction<{\n    basicVisible: boolean;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) basicVisible: boolean","docs":"","start":83,"length":12,"line":2,"character":43,"targetString":"basicVisible"},{"text":"const textStyle: {\n    height: number;\n    color: string;\n    justifyContent: string;\n    alignItems: string;\n    textAlign: string;\n    backgroundColor: string;\n}","docs":"","start":113,"length":9,"line":3,"character":6,"targetString":"textStyle"},{"text":"(property) height: number","docs":"","start":129,"length":6,"line":4,"character":2,"targetString":"height"},{"text":"(property) color: string","docs":"","start":143,"length":5,"line":5,"character":2,"targetString":"color"},{"text":"(property) justifyContent: string","docs":"","start":160,"length":14,"line":6,"character":2,"targetString":"justifyContent"},{"text":"(property) alignItems: string","docs":"","start":188,"length":10,"line":7,"character":2,"targetString":"alignItems"},{"text":"(property) textAlign: string","docs":"","start":212,"length":9,"line":8,"character":2,"targetString":"textAlign"},{"text":"(property) backgroundColor: string","docs":"","start":235,"length":15,"line":9,"character":2,"targetString":"backgroundColor"},{"text":"(alias) class Modal\nimport Modal","docs":"","start":265,"length":5,"line":12,"character":1,"targetString":"Modal"},{"text":"(JSX attribute) visible?: boolean | undefined","docs":"The `visible` prop determines whether your modal is visible.","start":273,"length":7,"line":13,"character":2,"targetString":"visible"},{"text":"const state: {\n    basicVisible: boolean;\n}","docs":"","start":282,"length":5,"line":13,"character":11,"targetString":"state"},{"text":"(property) basicVisible: boolean","docs":"","start":288,"length":12,"line":13,"character":17,"targetString":"basicVisible"},{"text":"(JSX attribute) onMaskPress?: (() => void) | undefined","docs":"","start":304,"length":11,"line":14,"character":2,"targetString":"onMaskPress"},{"text":"const setState: (value: React.SetStateAction<{\n    basicVisible: boolean;\n}>) => void","docs":"","start":323,"length":8,"line":14,"character":21,"targetString":"setState"},{"text":"(property) basicVisible: boolean","docs":"","start":334,"length":12,"line":14,"character":32,"targetString":"basicVisible"},{"text":"(JSX attribute) style: {\n    height: number;\n    color: string;\n    justifyContent: string;\n    alignItems: string;\n    textAlign: string;\n    backgroundColor: string;\n}","docs":"","start":370,"length":5,"line":16,"character":10,"targetString":"style"},{"text":"const textStyle: {\n    height: number;\n    color: string;\n    justifyContent: string;\n    alignItems: string;\n    textAlign: string;\n    backgroundColor: string;\n}","docs":"","start":377,"length":9,"line":16,"character":17,"targetString":"textStyle"},{"text":"(JSX attribute) text: string","docs":"","start":388,"length":4,"line":16,"character":28,"targetString":"text"},{"text":"(alias) class Modal\nimport Modal","docs":"","start":411,"length":5,"line":17,"character":2,"targetString":"Modal"}],[{"text":"(alias) class Modal\nimport Modal","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Modal"},{"text":"const state: {\n    countDownVisible: boolean;\n    countdown: number;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    countDownVisible: boolean;\n    countdown: number;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    countDownVisible: boolean;\n    countdown: number;\n}>(initialState: {\n    countDownVisible: boolean;\n    countdown: number;\n} | (() => {\n    countDownVisible: boolean;\n    countdown: number;\n})): [{\n    countDownVisible: boolean;\n    countdown: number;\n}, React.Dispatch<...>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) countDownVisible: boolean","docs":"","start":85,"length":16,"line":3,"character":2,"targetString":"countDownVisible"},{"text":"(property) countdown: number","docs":"","start":112,"length":9,"line":4,"character":2,"targetString":"countdown"},{"text":"const closeCountDownModal: () => void","docs":"","start":136,"length":19,"line":6,"character":6,"targetString":"closeCountDownModal"},{"text":"const setState: (value: React.SetStateAction<{\n    countDownVisible: boolean;\n    countdown: number;\n}>) => void","docs":"","start":164,"length":8,"line":6,"character":34,"targetString":"setState"},{"text":"(property) countDownVisible: boolean","docs":"","start":175,"length":16,"line":6,"character":45,"targetString":"countDownVisible"},{"text":"const handleCountDownConfirm: ({ hour, minute }: {\n    hour: any;\n    minute: any;\n}) => void","docs":"","start":209,"length":22,"line":7,"character":6,"targetString":"handleCountDownConfirm"},{"text":"var hour: any","docs":"","start":237,"length":4,"line":7,"character":34,"targetString":"hour"},{"text":"var minute: any","docs":"","start":243,"length":6,"line":7,"character":40,"targetString":"minute"},{"text":"const setState: (value: React.SetStateAction<{\n    countDownVisible: boolean;\n    countdown: number;\n}>) => void","docs":"","start":258,"length":8,"line":8,"character":2,"targetString":"setState"},{"text":"(property) countDownVisible: boolean","docs":"","start":269,"length":16,"line":8,"character":13,"targetString":"countDownVisible"},{"text":"(property) countdown: number","docs":"","start":294,"length":9,"line":8,"character":38,"targetString":"countdown"},{"text":"var hour: any","docs":"","start":305,"length":4,"line":8,"character":49,"targetString":"hour"},{"text":"var minute: any","docs":"","start":317,"length":6,"line":8,"character":61,"targetString":"minute"},{"text":"(alias) class Modal\nimport Modal","docs":"","start":330,"length":5,"line":10,"character":1,"targetString":"Modal"},{"text":"(property) Modal.Countdown: React.ElementType<PopUpCountdownProps>","docs":"","start":336,"length":9,"line":10,"character":7,"targetString":"Countdown"},{"text":"(JSX attribute) visible?: boolean | undefined","docs":"The `visible` prop determines whether your modal is visible.","start":348,"length":7,"line":11,"character":2,"targetString":"visible"},{"text":"const state: {\n    countDownVisible: boolean;\n    countdown: number;\n}","docs":"","start":357,"length":5,"line":11,"character":11,"targetString":"state"},{"text":"(property) countDownVisible: boolean","docs":"","start":363,"length":16,"line":11,"character":17,"targetString":"countDownVisible"},{"text":"(JSX attribute) PopUpCountdownProps.value: number","docs":"","start":383,"length":5,"line":12,"character":2,"targetString":"value"},{"text":"const state: {\n    countDownVisible: boolean;\n    countdown: number;\n}","docs":"","start":390,"length":5,"line":12,"character":9,"targetString":"state"},{"text":"(property) countdown: number","docs":"","start":396,"length":9,"line":12,"character":15,"targetString":"countdown"},{"text":"(JSX attribute) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":409,"length":11,"line":13,"character":2,"targetString":"onMaskPress"},{"text":"const closeCountDownModal: () => void","docs":"","start":422,"length":19,"line":13,"character":15,"targetString":"closeCountDownModal"},{"text":"(JSX attribute) PopupProps.onCancel?: (() => void) | undefined","docs":"","start":445,"length":8,"line":14,"character":2,"targetString":"onCancel"},{"text":"const closeCountDownModal: () => void","docs":"","start":455,"length":19,"line":14,"character":12,"targetString":"closeCountDownModal"},{"text":"(JSX attribute) PopupProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":478,"length":9,"line":15,"character":2,"targetString":"onConfirm"},{"text":"const handleCountDownConfirm: ({ hour, minute }: {\n    hour: any;\n    minute: any;\n}) => void","docs":"","start":489,"length":22,"line":15,"character":13,"targetString":"handleCountDownConfirm"},{"text":"(JSX attribute) PopupProps.title?: React.ReactNode | string[]","docs":"","start":515,"length":5,"line":16,"character":2,"targetString":"title"},{"text":"(JSX attribute) PopupProps.cancelText?: string | undefined","docs":"","start":535,"length":10,"line":17,"character":2,"targetString":"cancelText"},{"text":"(JSX attribute) PopupProps.confirmText?: string | undefined","docs":"","start":557,"length":11,"line":18,"character":2,"targetString":"confirmText"},{"text":"(JSX attribute) PopUpCountdownProps.hourText?: string | undefined","docs":"","start":581,"length":8,"line":19,"character":2,"targetString":"hourText"},{"text":"(JSX attribute) PopUpCountdownProps.minuteText?: string | undefined","docs":"","start":599,"length":10,"line":20,"character":2,"targetString":"minuteText"}],[{"text":"(alias) class Modal\nimport Modal","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Modal"},{"text":"const state: {\n    datePickerVisible: boolean;\n    date: Date;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    datePickerVisible: boolean;\n    date: Date;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    datePickerVisible: boolean;\n    date: Date;\n}>(initialState: {\n    datePickerVisible: boolean;\n    date: Date;\n} | (() => {\n    datePickerVisible: boolean;\n    date: Date;\n})): [{\n    datePickerVisible: boolean;\n    date: Date;\n}, React.Dispatch<...>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) datePickerVisible: boolean","docs":"","start":85,"length":17,"line":3,"character":2,"targetString":"datePickerVisible"},{"text":"(property) date: Date","docs":"","start":113,"length":4,"line":4,"character":2,"targetString":"date"},{"text":"var Date: DateConstructor\nnew () => Date (+4 overloads)","docs":"","start":123,"length":4,"line":4,"character":12,"targetString":"Date"},{"text":"const closeDatePickerModal: () => void","docs":"","start":141,"length":20,"line":6,"character":6,"targetString":"closeDatePickerModal"},{"text":"const setState: (value: React.SetStateAction<{\n    datePickerVisible: boolean;\n    date: Date;\n}>) => void","docs":"","start":170,"length":8,"line":6,"character":35,"targetString":"setState"},{"text":"(property) datePickerVisible: boolean","docs":"","start":181,"length":17,"line":6,"character":46,"targetString":"datePickerVisible"},{"text":"const handleDatePickerConfirm: (date: any) => void","docs":"","start":216,"length":23,"line":7,"character":6,"targetString":"handleDatePickerConfirm"},{"text":"(parameter) date: any","docs":"","start":242,"length":4,"line":7,"character":32,"targetString":"date"},{"text":"const setState: (value: React.SetStateAction<{\n    datePickerVisible: boolean;\n    date: Date;\n}>) => void","docs":"","start":252,"length":8,"line":8,"character":2,"targetString":"setState"},{"text":"(property) datePickerVisible: boolean","docs":"","start":263,"length":17,"line":8,"character":13,"targetString":"datePickerVisible"},{"text":"(property) date: Date","docs":"","start":289,"length":4,"line":8,"character":39,"targetString":"date"},{"text":"(alias) class Modal\nimport Modal","docs":"","start":300,"length":5,"line":10,"character":1,"targetString":"Modal"},{"text":"(property) Modal.DatePicker: React.ElementType<PopupDatePickerProps>","docs":"","start":306,"length":10,"line":10,"character":7,"targetString":"DatePicker"},{"text":"(JSX attribute) visible?: boolean | undefined","docs":"The `visible` prop determines whether your modal is visible.","start":319,"length":7,"line":11,"character":2,"targetString":"visible"},{"text":"const state: {\n    datePickerVisible: boolean;\n    date: Date;\n}","docs":"","start":328,"length":5,"line":11,"character":11,"targetString":"state"},{"text":"(property) datePickerVisible: boolean","docs":"","start":334,"length":17,"line":11,"character":17,"targetString":"datePickerVisible"},{"text":"(JSX attribute) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":355,"length":11,"line":12,"character":2,"targetString":"onMaskPress"},{"text":"const closeDatePickerModal: () => void","docs":"","start":368,"length":20,"line":12,"character":15,"targetString":"closeDatePickerModal"},{"text":"(JSX attribute) PopupProps.onCancel?: (() => void) | undefined","docs":"","start":392,"length":8,"line":13,"character":2,"targetString":"onCancel"},{"text":"const closeDatePickerModal: () => void","docs":"","start":402,"length":20,"line":13,"character":12,"targetString":"closeDatePickerModal"},{"text":"(JSX attribute) PopupProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":426,"length":9,"line":14,"character":2,"targetString":"onConfirm"},{"text":"const handleDatePickerConfirm: (date: any) => void","docs":"","start":437,"length":23,"line":14,"character":13,"targetString":"handleDatePickerConfirm"},{"text":"(JSX attribute) PopupProps.title?: React.ReactNode | string[]","docs":"","start":464,"length":5,"line":15,"character":2,"targetString":"title"},{"text":"(JSX attribute) PopupProps.cancelText?: string | undefined","docs":"","start":483,"length":10,"line":16,"character":2,"targetString":"cancelText"},{"text":"(JSX attribute) PopupProps.confirmText?: string | undefined","docs":"","start":505,"length":11,"line":17,"character":2,"targetString":"confirmText"},{"text":"(JSX attribute) hourText: string","docs":"","start":529,"length":8,"line":18,"character":2,"targetString":"hourText"},{"text":"(JSX attribute) minuteText: string","docs":"","start":547,"length":10,"line":19,"character":2,"targetString":"minuteText"},{"text":"(JSX attribute) date?: Date | undefined","docs":"","start":569,"length":4,"line":20,"character":2,"targetString":"date"},{"text":"const state: {\n    datePickerVisible: boolean;\n    date: Date;\n}","docs":"","start":575,"length":5,"line":20,"character":8,"targetString":"state"},{"text":"(property) date: Date","docs":"","start":581,"length":4,"line":20,"character":14,"targetString":"date"},{"text":"(JSX attribute) mode?: \"date\" | \"time\" | \"datetime\" | \"month\" | \"year\" | undefined","docs":"","start":589,"length":4,"line":21,"character":2,"targetString":"mode"},{"text":"(JSX attribute) minDate?: Date | undefined","docs":"","start":607,"length":7,"line":22,"character":2,"targetString":"minDate"},{"text":"var Date: DateConstructor\nnew (year: number, month: number, date?: number | undefined, hours?: number | undefined, minutes?: number | undefined, seconds?: number | undefined, ms?: number | undefined) => Date (+4 overloads)","docs":"","start":620,"length":4,"line":22,"character":15,"targetString":"Date"},{"text":"(JSX attribute) maxDate?: Date | undefined","docs":"","start":649,"length":7,"line":23,"character":2,"targetString":"maxDate"},{"text":"var Date: DateConstructor\nnew (year: number, month: number, date?: number | undefined, hours?: number | undefined, minutes?: number | undefined, seconds?: number | undefined, ms?: number | undefined) => Date (+4 overloads)","docs":"","start":662,"length":4,"line":23,"character":15,"targetString":"Date"}],[{"text":"(alias) class Modal\nimport Modal","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Modal"},{"text":"const state: {\n    listOneVisible: boolean;\n    listValue: string;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    listOneVisible: boolean;\n    listValue: string;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    listOneVisible: boolean;\n    listValue: string;\n}>(initialState: {\n    listOneVisible: boolean;\n    listValue: string;\n} | (() => {\n    listOneVisible: boolean;\n    listValue: string;\n})): [{\n    listOneVisible: boolean;\n    listValue: string;\n}, React.Dispatch<...>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) listOneVisible: boolean","docs":"","start":85,"length":14,"line":3,"character":2,"targetString":"listOneVisible"},{"text":"(property) listValue: string","docs":"","start":110,"length":9,"line":4,"character":2,"targetString":"listValue"},{"text":"const handleListOneConfirm: (value: any) => void","docs":"","start":136,"length":20,"line":6,"character":6,"targetString":"handleListOneConfirm"},{"text":"(parameter) value: any","docs":"","start":159,"length":5,"line":6,"character":29,"targetString":"value"},{"text":"const setState: (value: React.SetStateAction<{\n    listOneVisible: boolean;\n    listValue: string;\n}>) => void","docs":"","start":170,"length":8,"line":7,"character":2,"targetString":"setState"},{"text":"(property) listOneVisible: boolean","docs":"","start":181,"length":14,"line":7,"character":13,"targetString":"listOneVisible"},{"text":"(property) value: any","docs":"","start":204,"length":5,"line":7,"character":36,"targetString":"value"},{"text":"const closeListOneModal: () => void","docs":"","start":220,"length":17,"line":8,"character":6,"targetString":"closeListOneModal"},{"text":"const setState: (value: React.SetStateAction<{\n    listOneVisible: boolean;\n    listValue: string;\n}>) => void","docs":"","start":246,"length":8,"line":8,"character":32,"targetString":"setState"},{"text":"(property) listOneVisible: boolean","docs":"","start":257,"length":14,"line":8,"character":43,"targetString":"listOneVisible"},{"text":"(alias) class Modal\nimport Modal","docs":"","start":285,"length":5,"line":10,"character":1,"targetString":"Modal"},{"text":"(property) Modal.List: React.ElementType<PopUpListProps>","docs":"","start":291,"length":4,"line":10,"character":7,"targetString":"List"},{"text":"(JSX attribute) visible?: boolean | undefined","docs":"The `visible` prop determines whether your modal is visible.","start":298,"length":7,"line":11,"character":2,"targetString":"visible"},{"text":"const state: {\n    listOneVisible: boolean;\n    listValue: string;\n}","docs":"","start":307,"length":5,"line":11,"character":11,"targetString":"state"},{"text":"(property) listOneVisible: boolean","docs":"","start":313,"length":14,"line":11,"character":17,"targetString":"listOneVisible"},{"text":"(JSX attribute) PopUpListProps.dataSource?: ListDate[] | undefined","docs":"","start":331,"length":10,"line":12,"character":2,"targetString":"dataSource"},{"text":"(JSX attribute) PopUpListProps.type?: \"switch\" | \"radio\" | \"arrow\" | undefined","docs":"","start":357,"length":4,"line":13,"character":2,"targetString":"type"},{"text":"(JSX attribute) PopUpListProps.value?: string | number | string[] | number[] | undefined","docs":"","start":372,"length":5,"line":14,"character":2,"targetString":"value"},{"text":"const state: {\n    listOneVisible: boolean;\n    listValue: string;\n}","docs":"","start":379,"length":5,"line":14,"character":9,"targetString":"state"},{"text":"(property) listValue: string","docs":"","start":385,"length":9,"line":14,"character":15,"targetString":"listValue"},{"text":"(JSX attribute) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":398,"length":11,"line":15,"character":2,"targetString":"onMaskPress"},{"text":"const closeListOneModal: () => void","docs":"","start":411,"length":17,"line":15,"character":15,"targetString":"closeListOneModal"},{"text":"(JSX attribute) PopupProps.onCancel?: (() => void) | undefined","docs":"","start":432,"length":8,"line":16,"character":2,"targetString":"onCancel"},{"text":"const closeListOneModal: () => void","docs":"","start":442,"length":17,"line":16,"character":12,"targetString":"closeListOneModal"},{"text":"(JSX attribute) PopupProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":463,"length":9,"line":17,"character":2,"targetString":"onConfirm"},{"text":"const handleListOneConfirm: (value: any) => void","docs":"","start":474,"length":20,"line":17,"character":13,"targetString":"handleListOneConfirm"}],[{"text":"(alias) class Modal\nimport Modal","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Modal"},{"text":"const state: {\n    listMoreVisible: boolean;\n    listValues: string[];\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    listMoreVisible: boolean;\n    listValues: string[];\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    listMoreVisible: boolean;\n    listValues: string[];\n}>(initialState: {\n    listMoreVisible: boolean;\n    listValues: string[];\n} | (() => {\n    listMoreVisible: boolean;\n    listValues: string[];\n})): [{\n    listMoreVisible: boolean;\n    listValues: string[];\n}, React.Dispatch<...>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) listMoreVisible: boolean","docs":"","start":85,"length":15,"line":3,"character":2,"targetString":"listMoreVisible"},{"text":"(property) listValues: string[]","docs":"","start":111,"length":10,"line":4,"character":2,"targetString":"listValues"},{"text":"const handleListMoreConfirm: (value: any) => void","docs":"","start":140,"length":21,"line":6,"character":6,"targetString":"handleListMoreConfirm"},{"text":"(parameter) value: any","docs":"","start":164,"length":5,"line":6,"character":30,"targetString":"value"},{"text":"const setState: (value: React.SetStateAction<{\n    listMoreVisible: boolean;\n    listValues: string[];\n}>) => void","docs":"","start":175,"length":8,"line":7,"character":2,"targetString":"setState"},{"text":"(property) listMoreVisible: boolean","docs":"","start":186,"length":15,"line":7,"character":13,"targetString":"listMoreVisible"},{"text":"(property) value: any","docs":"","start":210,"length":5,"line":7,"character":37,"targetString":"value"},{"text":"const closeListMoreModal: () => void","docs":"","start":226,"length":18,"line":8,"character":6,"targetString":"closeListMoreModal"},{"text":"const setState: (value: React.SetStateAction<{\n    listMoreVisible: boolean;\n    listValues: string[];\n}>) => void","docs":"","start":253,"length":8,"line":8,"character":33,"targetString":"setState"},{"text":"(property) listMoreVisible: boolean","docs":"","start":264,"length":15,"line":8,"character":44,"targetString":"listMoreVisible"},{"text":"(alias) class Modal\nimport Modal","docs":"","start":293,"length":5,"line":10,"character":1,"targetString":"Modal"},{"text":"(property) Modal.List: React.ElementType<PopUpListProps>","docs":"","start":299,"length":4,"line":10,"character":7,"targetString":"List"},{"text":"(JSX attribute) visible?: boolean | undefined","docs":"The `visible` prop determines whether your modal is visible.","start":306,"length":7,"line":11,"character":2,"targetString":"visible"},{"text":"const state: {\n    listMoreVisible: boolean;\n    listValues: string[];\n}","docs":"","start":315,"length":5,"line":11,"character":11,"targetString":"state"},{"text":"(property) listMoreVisible: boolean","docs":"","start":321,"length":15,"line":11,"character":17,"targetString":"listMoreVisible"},{"text":"(JSX attribute) PopUpListProps.dataSource?: ListDate[] | undefined","docs":"","start":340,"length":10,"line":12,"character":2,"targetString":"dataSource"},{"text":"(JSX attribute) PopUpListProps.type?: \"switch\" | \"radio\" | \"arrow\" | undefined","docs":"","start":366,"length":4,"line":13,"character":2,"targetString":"type"},{"text":"(JSX attribute) PopUpListProps.value?: string | number | string[] | number[] | undefined","docs":"","start":382,"length":5,"line":14,"character":2,"targetString":"value"},{"text":"const state: {\n    listMoreVisible: boolean;\n    listValues: string[];\n}","docs":"","start":389,"length":5,"line":14,"character":9,"targetString":"state"},{"text":"(property) listValues: string[]","docs":"","start":395,"length":10,"line":14,"character":15,"targetString":"listValues"},{"text":"(JSX attribute) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":409,"length":11,"line":15,"character":2,"targetString":"onMaskPress"},{"text":"const closeListMoreModal: () => void","docs":"","start":422,"length":18,"line":15,"character":15,"targetString":"closeListMoreModal"},{"text":"(JSX attribute) PopupProps.onCancel?: (() => void) | undefined","docs":"","start":444,"length":8,"line":16,"character":2,"targetString":"onCancel"},{"text":"const closeListMoreModal: () => void","docs":"","start":454,"length":18,"line":16,"character":12,"targetString":"closeListMoreModal"},{"text":"(JSX attribute) PopupProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":476,"length":9,"line":17,"character":2,"targetString":"onConfirm"},{"text":"const handleListMoreConfirm: (value: any) => void","docs":"","start":487,"length":21,"line":17,"character":13,"targetString":"handleListMoreConfirm"}],[{"text":"(alias) class Modal\nimport Modal","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Modal"},{"text":"const state: {\n    pickerOneVisible: boolean;\n    pickerValue: string;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    pickerOneVisible: boolean;\n    pickerValue: string;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    pickerOneVisible: boolean;\n    pickerValue: string;\n}>(initialState: {\n    pickerOneVisible: boolean;\n    pickerValue: string;\n} | (() => {\n    pickerOneVisible: boolean;\n    pickerValue: string;\n})): [{\n    pickerOneVisible: boolean;\n    pickerValue: string;\n}, React.Dispatch<...>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) pickerOneVisible: boolean","docs":"","start":85,"length":16,"line":3,"character":2,"targetString":"pickerOneVisible"},{"text":"(property) pickerValue: string","docs":"","start":112,"length":11,"line":4,"character":2,"targetString":"pickerValue"},{"text":"const handlePickerOneConfirm: (value: any) => void","docs":"","start":140,"length":22,"line":6,"character":6,"targetString":"handlePickerOneConfirm"},{"text":"(parameter) value: any","docs":"","start":165,"length":5,"line":6,"character":31,"targetString":"value"},{"text":"const setState: (value: React.SetStateAction<{\n    pickerOneVisible: boolean;\n    pickerValue: string;\n}>) => void","docs":"","start":176,"length":8,"line":7,"character":2,"targetString":"setState"},{"text":"(property) pickerOneVisible: boolean","docs":"","start":187,"length":16,"line":7,"character":13,"targetString":"pickerOneVisible"},{"text":"(property) value: any","docs":"","start":212,"length":5,"line":7,"character":38,"targetString":"value"},{"text":"const closePickerOneModal: () => void","docs":"","start":228,"length":19,"line":8,"character":6,"targetString":"closePickerOneModal"},{"text":"const setState: (value: React.SetStateAction<{\n    pickerOneVisible: boolean;\n    pickerValue: string;\n}>) => void","docs":"","start":256,"length":8,"line":8,"character":34,"targetString":"setState"},{"text":"(property) pickerOneVisible: boolean","docs":"","start":267,"length":16,"line":8,"character":45,"targetString":"pickerOneVisible"},{"text":"(alias) class Modal\nimport Modal","docs":"","start":297,"length":5,"line":10,"character":1,"targetString":"Modal"},{"text":"(property) Modal.Picker: React.ElementType<PopupPickerProps>","docs":"","start":303,"length":6,"line":10,"character":7,"targetString":"Picker"},{"text":"(JSX attribute) visible?: boolean | undefined","docs":"The `visible` prop determines whether your modal is visible.","start":312,"length":7,"line":11,"character":2,"targetString":"visible"},{"text":"const state: {\n    pickerOneVisible: boolean;\n    pickerValue: string;\n}","docs":"","start":321,"length":5,"line":11,"character":11,"targetString":"state"},{"text":"(property) pickerOneVisible: boolean","docs":"","start":327,"length":16,"line":11,"character":17,"targetString":"pickerOneVisible"},{"text":"(JSX attribute) PopupPickerProps.dataSource?: PickerDataProps[] | PickerDataProps[][] | undefined","docs":"","start":347,"length":10,"line":12,"character":2,"targetString":"dataSource"},{"text":"(property) PickerDataProps.label: string","docs":"","start":373,"length":5,"line":14,"character":6,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":391,"length":5,"line":15,"character":6,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":422,"length":5,"line":18,"character":6,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":440,"length":5,"line":19,"character":6,"targetString":"value"},{"text":"(JSX attribute) PopupPickerProps.value?: string | number | boolean | string[] | undefined","docs":"","start":466,"length":5,"line":22,"character":2,"targetString":"value"},{"text":"const state: {\n    pickerOneVisible: boolean;\n    pickerValue: string;\n}","docs":"","start":473,"length":5,"line":22,"character":9,"targetString":"state"},{"text":"(property) pickerValue: string","docs":"","start":479,"length":11,"line":22,"character":15,"targetString":"pickerValue"},{"text":"(JSX attribute) PopupPickerProps.label?: string | string[] | undefined","docs":"","start":494,"length":5,"line":23,"character":2,"targetString":"label"},{"text":"(JSX attribute) onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":509,"length":11,"line":24,"character":2,"targetString":"onMaskPress"},{"text":"const closePickerOneModal: () => void","docs":"","start":522,"length":19,"line":24,"character":15,"targetString":"closePickerOneModal"},{"text":"(JSX attribute) onCancel?: (() => void) | undefined","docs":"","start":545,"length":8,"line":25,"character":2,"targetString":"onCancel"},{"text":"const closePickerOneModal: () => void","docs":"","start":555,"length":19,"line":25,"character":12,"targetString":"closePickerOneModal"},{"text":"(JSX attribute) PopupPickerProps.onConfirm?: ((data: any, idx: number, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":578,"length":9,"line":26,"character":2,"targetString":"onConfirm"},{"text":"const handlePickerOneConfirm: (value: any) => void","docs":"","start":589,"length":22,"line":26,"character":13,"targetString":"handlePickerOneConfirm"},{"text":"(JSX attribute) PopupPickerProps.onValueChange?: ((newValue: string | number, idx: number) => void) | undefined","docs":"Callback for when an item is selected. This is called with the\nfollowing parameters:\n- itemValue: the value prop of the item that was selected\n- itemPosition: the index of the selected item in this picker","start":615,"length":13,"line":27,"character":2,"targetString":"onValueChange"},{"text":"(parameter) value: string | number","docs":"","start":630,"length":5,"line":27,"character":17,"targetString":"value"},{"text":"var console: Console","docs":"","start":639,"length":7,"line":27,"character":26,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":647,"length":3,"line":27,"character":34,"targetString":"log"},{"text":"(parameter) value: string | number","docs":"","start":668,"length":5,"line":27,"character":55,"targetString":"value"}]],"/feedback/notification":[[{"text":"(alias) class Notification\nimport Notification","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"Notification"},{"text":"(alias) class Notification\nimport Notification","docs":"","start":47,"length":12,"line":2,"character":0,"targetString":"Notification"},{"text":"(property) Notification.show: (option: NotificationProps) => void","docs":"","start":60,"length":4,"line":2,"character":13,"targetString":"show"},{"text":"(property) NotificationProps.message: string","docs":"","start":69,"length":7,"line":3,"character":2,"targetString":"message"},{"text":"(property) NotificationProps.onClose?: (() => void) | undefined","docs":"","start":104,"length":7,"line":4,"character":2,"targetString":"onClose"},{"text":"(alias) class Notification\nimport Notification","docs":"","start":125,"length":12,"line":5,"character":4,"targetString":"Notification"},{"text":"(property) Notification.hide: () => void","docs":"","start":138,"length":4,"line":5,"character":17,"targetString":"hide"},{"text":"(property) NotificationProps.theme?: {\n    background?: string | undefined;\n    text?: string | undefined;\n    iconColor?: string | undefined;\n    successIcon?: string | undefined;\n    warningIcon?: string | undefined;\n    errorIcon?: string | undefined;\n    closeIcon?: string | undefined;\n    radius?: number | undefined;\n} | undefined","docs":"","start":153,"length":5,"line":7,"character":2,"targetString":"theme"},{"text":"(property) successIcon?: string | undefined","docs":"","start":166,"length":11,"line":8,"character":4,"targetString":"successIcon"},{"text":"(property) errorIcon?: string | undefined","docs":"","start":190,"length":9,"line":9,"character":4,"targetString":"errorIcon"},{"text":"(property) warningIcon?: string | undefined","docs":"","start":215,"length":11,"line":10,"character":4,"targetString":"warningIcon"}]],"/feedback/notification-legacy":[[{"text":"(alias) class NotificationLegacy\nimport NotificationLegacy","docs":"","start":9,"length":18,"line":0,"character":9,"targetString":"NotificationLegacy"},{"text":"(alias) class NotificationLegacy\nimport NotificationLegacy","docs":"","start":54,"length":18,"line":2,"character":1,"targetString":"NotificationLegacy"},{"text":"(JSX attribute) message?: string | undefined","docs":"","start":73,"length":7,"line":2,"character":20,"targetString":"message"}]],"/feedback/popup":[[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"const state: {\n    countdown: number;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    countdown: number;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    countdown: number;\n}>(initialState: {\n    countdown: number;\n} | (() => {\n    countdown: number;\n})): [{\n    countdown: number;\n}, React.Dispatch<React.SetStateAction<{\n    countdown: number;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) countdown: number","docs":"","start":85,"length":9,"line":3,"character":2,"targetString":"countdown"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":104,"length":5,"line":6,"character":0,"targetString":"Popup"},{"text":"(property) Popup.countdown: (option: PopUpCountdownProps, option2?: DialogElse | undefined) => void","docs":"","start":110,"length":9,"line":6,"character":6,"targetString":"countdown"},{"text":"(property) PopupProps.title?: string[] | React.ReactNode","docs":"","start":124,"length":5,"line":7,"character":2,"targetString":"title"},{"text":"(property) PopupProps.cancelText?: string | undefined","docs":"","start":146,"length":10,"line":8,"character":2,"targetString":"cancelText"},{"text":"(property) PopupProps.confirmText?: string | undefined","docs":"","start":170,"length":11,"line":9,"character":2,"targetString":"confirmText"},{"text":"(property) PopUpCountdownProps.hourText?: string | undefined","docs":"","start":196,"length":8,"line":10,"character":2,"targetString":"hourText"},{"text":"(property) PopUpCountdownProps.minuteText?: string | undefined","docs":"","start":216,"length":10,"line":11,"character":2,"targetString":"minuteText"},{"text":"(property) PopUpCountdownProps.value: number","docs":"","start":240,"length":5,"line":12,"character":2,"targetString":"value"},{"text":"const state: {\n    countdown: number;\n}","docs":"","start":247,"length":5,"line":12,"character":9,"targetString":"state"},{"text":"(property) countdown: number","docs":"","start":253,"length":9,"line":12,"character":15,"targetString":"countdown"},{"text":"(property) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":266,"length":11,"line":13,"character":2,"targetString":"onMaskPress"},{"text":"var close: () => void","docs":"","start":282,"length":5,"line":13,"character":18,"targetString":"close"},{"text":"var close: () => void","docs":"","start":294,"length":5,"line":13,"character":30,"targetString":"close"},{"text":"(property) PopupProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":305,"length":9,"line":14,"character":2,"targetString":"onConfirm"},{"text":"(parameter) data: any","docs":"","start":317,"length":4,"line":14,"character":14,"targetString":"data"},{"text":"var close: () => void","docs":"","start":325,"length":5,"line":14,"character":22,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    countdown: number;\n}>) => void","docs":"","start":343,"length":8,"line":15,"character":4,"targetString":"setState"},{"text":"(property) countdown: number","docs":"","start":354,"length":9,"line":15,"character":15,"targetString":"countdown"},{"text":"(parameter) data: any","docs":"","start":365,"length":4,"line":15,"character":26,"targetString":"data"},{"text":"(parameter) data: any","docs":"","start":382,"length":4,"line":15,"character":43,"targetString":"data"},{"text":"var close: () => void","docs":"","start":402,"length":5,"line":16,"character":4,"targetString":"close"}],[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"const state: {\n    date: Date;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    date: Date;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    date: Date;\n}>(initialState: {\n    date: Date;\n} | (() => {\n    date: Date;\n})): [{\n    date: Date;\n}, React.Dispatch<React.SetStateAction<{\n    date: Date;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) date: Date","docs":"","start":85,"length":4,"line":3,"character":2,"targetString":"date"},{"text":"var Date: DateConstructor\nnew () => Date (+4 overloads)","docs":"","start":95,"length":4,"line":3,"character":12,"targetString":"Date"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":108,"length":5,"line":6,"character":0,"targetString":"Popup"},{"text":"(property) Popup.datePicker: (option: PopupDatePickerProps, option2?: DialogElse | undefined) => void","docs":"","start":114,"length":10,"line":6,"character":6,"targetString":"datePicker"},{"text":"(property) PopupProps.title?: string[] | React.ReactNode","docs":"","start":129,"length":5,"line":7,"character":2,"targetString":"title"},{"text":"(property) PopupProps.cancelText?: string | undefined","docs":"","start":150,"length":10,"line":8,"character":2,"targetString":"cancelText"},{"text":"(property) PopupProps.confirmText?: string | undefined","docs":"","start":174,"length":11,"line":9,"character":2,"targetString":"confirmText"},{"text":"(property) hourText: string","docs":"","start":200,"length":8,"line":10,"character":2,"targetString":"hourText"},{"text":"(property) minuteText: string","docs":"","start":220,"length":10,"line":11,"character":2,"targetString":"minuteText"},{"text":"(property) defaultDate?: Date | undefined","docs":"","start":244,"length":11,"line":12,"character":2,"targetString":"defaultDate"},{"text":"const state: {\n    date: Date;\n}","docs":"","start":257,"length":5,"line":12,"character":15,"targetString":"state"},{"text":"(property) date: Date","docs":"","start":263,"length":4,"line":12,"character":21,"targetString":"date"},{"text":"(property) mode?: \"date\" | \"datetime\" | \"time\" | \"month\" | \"year\" | undefined","docs":"","start":271,"length":4,"line":13,"character":2,"targetString":"mode"},{"text":"(property) minDate?: Date | undefined","docs":"","start":291,"length":7,"line":14,"character":2,"targetString":"minDate"},{"text":"var Date: DateConstructor\nnew (year: number, month: number, date?: number | undefined, hours?: number | undefined, minutes?: number | undefined, seconds?: number | undefined, ms?: number | undefined) => Date (+4 overloads)","docs":"","start":304,"length":4,"line":14,"character":15,"targetString":"Date"},{"text":"(property) maxDate?: Date | undefined","docs":"","start":333,"length":7,"line":15,"character":2,"targetString":"maxDate"},{"text":"var Date: DateConstructor\nnew (year: number, month: number, date?: number | undefined, hours?: number | undefined, minutes?: number | undefined, seconds?: number | undefined, ms?: number | undefined) => Date (+4 overloads)","docs":"","start":346,"length":4,"line":15,"character":15,"targetString":"Date"},{"text":"(property) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":380,"length":11,"line":16,"character":2,"targetString":"onMaskPress"},{"text":"var close: () => void","docs":"","start":396,"length":5,"line":16,"character":18,"targetString":"close"},{"text":"var close: () => void","docs":"","start":408,"length":5,"line":16,"character":30,"targetString":"close"},{"text":"(property) PopupProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":419,"length":9,"line":17,"character":2,"targetString":"onConfirm"},{"text":"(parameter) date: any","docs":"","start":431,"length":4,"line":17,"character":14,"targetString":"date"},{"text":"var close: () => void","docs":"","start":439,"length":5,"line":17,"character":22,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    date: Date;\n}>) => void","docs":"","start":457,"length":8,"line":18,"character":4,"targetString":"setState"},{"text":"(property) date: Date","docs":"","start":468,"length":4,"line":18,"character":15,"targetString":"date"},{"text":"var close: () => void","docs":"","start":481,"length":5,"line":19,"character":4,"targetString":"close"}],[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"const state: {\n    timerPickerValue: number[];\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    timerPickerValue: number[];\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    timerPickerValue: number[];\n}>(initialState: {\n    timerPickerValue: number[];\n} | (() => {\n    timerPickerValue: number[];\n})): [{\n    timerPickerValue: number[];\n}, React.Dispatch<React.SetStateAction<{\n    timerPickerValue: number[];\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) timerPickerValue: number[]","docs":"","start":85,"length":16,"line":3,"character":2,"targetString":"timerPickerValue"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":116,"length":5,"line":6,"character":0,"targetString":"Popup"},{"text":"(property) Popup.timerPicker: (option: PopupTimerPickerProps, option2?: DialogElse | undefined) => void","docs":"","start":122,"length":11,"line":6,"character":6,"targetString":"timerPicker"},{"text":"(property) PopupProps.title?: string[] | React.ReactNode","docs":"","start":138,"length":5,"line":7,"character":2,"targetString":"title"},{"text":"(property) PopupProps.cancelText?: string | undefined","docs":"","start":185,"length":10,"line":8,"character":2,"targetString":"cancelText"},{"text":"(property) PopupProps.confirmText?: string | undefined","docs":"","start":209,"length":11,"line":9,"character":2,"targetString":"confirmText"},{"text":"(property) startTime?: number | undefined","docs":"","start":235,"length":9,"line":10,"character":2,"targetString":"startTime"},{"text":"const state: {\n    timerPickerValue: number[];\n}","docs":"","start":246,"length":5,"line":10,"character":13,"targetString":"state"},{"text":"(property) timerPickerValue: number[]","docs":"","start":252,"length":16,"line":10,"character":19,"targetString":"timerPickerValue"},{"text":"(property) endTime?: number | undefined","docs":"","start":275,"length":7,"line":11,"character":2,"targetString":"endTime"},{"text":"const state: {\n    timerPickerValue: number[];\n}","docs":"","start":284,"length":5,"line":11,"character":11,"targetString":"state"},{"text":"(property) timerPickerValue: number[]","docs":"","start":290,"length":16,"line":11,"character":17,"targetString":"timerPickerValue"},{"text":"(property) is12Hours?: boolean | undefined","docs":"","start":313,"length":9,"line":12,"character":2,"targetString":"is12Hours"},{"text":"(property) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":332,"length":11,"line":13,"character":2,"targetString":"onMaskPress"},{"text":"var close: () => void","docs":"","start":348,"length":5,"line":13,"character":18,"targetString":"close"},{"text":"var close: () => void","docs":"","start":360,"length":5,"line":13,"character":30,"targetString":"close"},{"text":"(property) PopupProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":371,"length":9,"line":14,"character":2,"targetString":"onConfirm"},{"text":"var startTime: any","docs":"","start":385,"length":9,"line":14,"character":16,"targetString":"startTime"},{"text":"var endTime: any","docs":"","start":396,"length":7,"line":14,"character":27,"targetString":"endTime"},{"text":"var close: () => void","docs":"","start":409,"length":5,"line":14,"character":40,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    timerPickerValue: number[];\n}>) => void","docs":"","start":427,"length":8,"line":15,"character":4,"targetString":"setState"},{"text":"(property) timerPickerValue: number[]","docs":"","start":438,"length":16,"line":15,"character":15,"targetString":"timerPickerValue"},{"text":"var startTime: any","docs":"","start":457,"length":9,"line":15,"character":34,"targetString":"startTime"},{"text":"var endTime: any","docs":"","start":468,"length":7,"line":15,"character":45,"targetString":"endTime"},{"text":"var close: () => void","docs":"","start":485,"length":5,"line":16,"character":4,"targetString":"close"}],[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"const state: {\n    numberValue: number;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    numberValue: number;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    numberValue: number;\n}>(initialState: {\n    numberValue: number;\n} | (() => {\n    numberValue: number;\n})): [{\n    numberValue: number;\n}, React.Dispatch<React.SetStateAction<{\n    numberValue: number;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) numberValue: number","docs":"","start":85,"length":11,"line":3,"character":2,"targetString":"numberValue"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":106,"length":5,"line":6,"character":0,"targetString":"Popup"},{"text":"(property) Popup.numberSelector: (option: PopupNumberSelectorProps, option2?: DialogElse | undefined) => void","docs":"","start":112,"length":14,"line":6,"character":6,"targetString":"numberSelector"},{"text":"(property) title?: string[] | React.ReactNode","docs":"","start":131,"length":5,"line":7,"character":2,"targetString":"title"},{"text":"(property) cancelText?: string | undefined","docs":"","start":170,"length":10,"line":8,"character":2,"targetString":"cancelText"},{"text":"(property) confirmText?: string | undefined","docs":"","start":194,"length":11,"line":9,"character":2,"targetString":"confirmText"},{"text":"(property) PopupNumberSelectorProps.value: number","docs":"","start":220,"length":5,"line":10,"character":2,"targetString":"value"},{"text":"const state: {\n    numberValue: number;\n}","docs":"","start":227,"length":5,"line":10,"character":9,"targetString":"state"},{"text":"(property) numberValue: number","docs":"","start":233,"length":11,"line":10,"character":15,"targetString":"numberValue"},{"text":"(property) PopupNumberSelectorProps.min?: number | undefined","docs":"","start":248,"length":3,"line":11,"character":2,"targetString":"min"},{"text":"(property) PopupNumberSelectorProps.max?: number | undefined","docs":"","start":258,"length":3,"line":12,"character":2,"targetString":"max"},{"text":"(property) onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":269,"length":11,"line":13,"character":2,"targetString":"onMaskPress"},{"text":"var close: () => void","docs":"","start":285,"length":5,"line":13,"character":18,"targetString":"close"},{"text":"var close: () => void","docs":"","start":297,"length":5,"line":13,"character":30,"targetString":"close"},{"text":"(property) onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":308,"length":9,"line":14,"character":2,"targetString":"onConfirm"},{"text":"(parameter) value: any","docs":"","start":320,"length":5,"line":14,"character":14,"targetString":"value"},{"text":"var close: () => void","docs":"","start":329,"length":5,"line":14,"character":23,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    numberValue: number;\n}>) => void","docs":"","start":347,"length":8,"line":15,"character":4,"targetString":"setState"},{"text":"(property) numberValue: number","docs":"","start":358,"length":11,"line":15,"character":15,"targetString":"numberValue"},{"text":"(parameter) value: any","docs":"","start":371,"length":5,"line":15,"character":28,"targetString":"value"},{"text":"var close: () => void","docs":"","start":385,"length":5,"line":16,"character":4,"targetString":"close"}],[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"const state: {\n    listValue: string;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    listValue: string;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    listValue: string;\n}>(initialState: {\n    listValue: string;\n} | (() => {\n    listValue: string;\n})): [{\n    listValue: string;\n}, React.Dispatch<React.SetStateAction<{\n    listValue: string;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) listValue: string","docs":"","start":85,"length":9,"line":3,"character":2,"targetString":"listValue"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":106,"length":5,"line":6,"character":0,"targetString":"Popup"},{"text":"(property) Popup.list: (option: PopUpListProps, option2?: DialogElse | undefined) => void","docs":"","start":112,"length":4,"line":6,"character":6,"targetString":"list"},{"text":"(property) PopUpListProps.type?: \"radio\" | \"switch\" | \"arrow\" | undefined","docs":"","start":121,"length":4,"line":7,"character":2,"targetString":"type"},{"text":"(property) PopUpListProps.maxItemNum?: number | undefined","docs":"","start":138,"length":10,"line":8,"character":2,"targetString":"maxItemNum"},{"text":"(property) PopUpListProps.dataSource?: ListDate[] | undefined","docs":"","start":155,"length":10,"line":9,"character":2,"targetString":"dataSource"},{"text":"(property) TYFlatListData.key?: string | number | undefined","docs":"","start":181,"length":3,"line":11,"character":6,"targetString":"key"},{"text":"(property) ListDate.title?: string | undefined","docs":"","start":197,"length":5,"line":12,"character":6,"targetString":"title"},{"text":"(property) ListDate.value: any","docs":"","start":215,"length":5,"line":13,"character":6,"targetString":"value"},{"text":"(property) TYFlatListData.key?: string | number | undefined","docs":"","start":246,"length":3,"line":16,"character":6,"targetString":"key"},{"text":"(property) ListDate.title?: string | undefined","docs":"","start":262,"length":5,"line":17,"character":6,"targetString":"title"},{"text":"(property) ListDate.value: any","docs":"","start":280,"length":5,"line":18,"character":6,"targetString":"value"},{"text":"(property) TYFlatListData.key?: string | number | undefined","docs":"","start":311,"length":3,"line":21,"character":6,"targetString":"key"},{"text":"(property) ListDate.title?: string | undefined","docs":"","start":327,"length":5,"line":22,"character":6,"targetString":"title"},{"text":"(property) ListDate.value: any","docs":"","start":345,"length":5,"line":23,"character":6,"targetString":"value"},{"text":"(property) TYFlatListData.key?: string | number | undefined","docs":"","start":376,"length":3,"line":26,"character":6,"targetString":"key"},{"text":"(property) ListDate.title?: string | undefined","docs":"","start":392,"length":5,"line":27,"character":6,"targetString":"title"},{"text":"(property) ListDate.value: any","docs":"","start":410,"length":5,"line":28,"character":6,"targetString":"value"},{"text":"(property) PopupProps.title?: string[] | React.ReactNode","docs":"","start":436,"length":5,"line":31,"character":2,"targetString":"title"},{"text":"(property) PopUpListProps.subTitle?: string | undefined","docs":"","start":465,"length":8,"line":32,"character":2,"targetString":"subTitle"},{"text":"(property) PopupProps.cancelText?: string | undefined","docs":"","start":490,"length":10,"line":33,"character":2,"targetString":"cancelText"},{"text":"(property) PopUpListProps.value?: string | number | string[] | number[] | undefined","docs":"","start":514,"length":5,"line":34,"character":2,"targetString":"value"},{"text":"const state: {\n    listValue: string;\n}","docs":"","start":521,"length":5,"line":34,"character":9,"targetString":"state"},{"text":"(property) listValue: string","docs":"","start":527,"length":9,"line":34,"character":15,"targetString":"listValue"},{"text":"(property) PopupProps.footerType?: \"singleCancel\" | \"both\" | \"singleConfirm\" | undefined","docs":"","start":540,"length":10,"line":35,"character":2,"targetString":"footerType"},{"text":"(property) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":570,"length":11,"line":36,"character":2,"targetString":"onMaskPress"},{"text":"var close: () => void","docs":"","start":586,"length":5,"line":36,"character":18,"targetString":"close"},{"text":"var close: () => void","docs":"","start":598,"length":5,"line":36,"character":30,"targetString":"close"},{"text":"(property) PopUpListProps.onSelect?: ((value: string | number, params?: {\n    close: () => void;\n} | undefined) => void) | undefined","docs":"","start":609,"length":8,"line":37,"character":2,"targetString":"onSelect"},{"text":"(parameter) value: string | number","docs":"","start":620,"length":5,"line":37,"character":13,"targetString":"value"},{"text":"var close: any","docs":"","start":629,"length":5,"line":37,"character":22,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    listValue: string;\n}>) => void","docs":"","start":647,"length":8,"line":38,"character":4,"targetString":"setState"},{"text":"(property) listValue: string","docs":"","start":658,"length":9,"line":38,"character":15,"targetString":"listValue"},{"text":"(parameter) value: string | number","docs":"","start":669,"length":5,"line":38,"character":26,"targetString":"value"},{"text":"var close: any","docs":"","start":683,"length":5,"line":39,"character":4,"targetString":"close"}],[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"const state: {\n    listValues: string[];\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    listValues: string[];\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    listValues: string[];\n}>(initialState: {\n    listValues: string[];\n} | (() => {\n    listValues: string[];\n})): [{\n    listValues: string[];\n}, React.Dispatch<React.SetStateAction<{\n    listValues: string[];\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) listValues: string[]","docs":"","start":85,"length":10,"line":3,"character":2,"targetString":"listValues"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":109,"length":5,"line":6,"character":0,"targetString":"Popup"},{"text":"(property) Popup.list: (option: PopUpListProps, option2?: DialogElse | undefined) => void","docs":"","start":115,"length":4,"line":6,"character":6,"targetString":"list"},{"text":"(property) PopUpListProps.type?: \"switch\" | \"radio\" | \"arrow\" | undefined","docs":"","start":124,"length":4,"line":7,"character":2,"targetString":"type"},{"text":"(property) PopUpListProps.dataSource?: ListDate[] | undefined","docs":"","start":142,"length":10,"line":8,"character":2,"targetString":"dataSource"},{"text":"(property) TYFlatListData.key?: string | number | undefined","docs":"","start":168,"length":3,"line":10,"character":6,"targetString":"key"},{"text":"(property) ListDate.title?: string | undefined","docs":"","start":184,"length":5,"line":11,"character":6,"targetString":"title"},{"text":"(property) ListDate.value: any","docs":"","start":202,"length":5,"line":12,"character":6,"targetString":"value"},{"text":"(property) TYFlatListData.key?: string | number | undefined","docs":"","start":233,"length":3,"line":15,"character":6,"targetString":"key"},{"text":"(property) ListDate.title?: string | undefined","docs":"","start":249,"length":5,"line":16,"character":6,"targetString":"title"},{"text":"(property) ListDate.value: any","docs":"","start":267,"length":5,"line":17,"character":6,"targetString":"value"},{"text":"(property) PopupProps.title?: string[] | React.ReactNode","docs":"","start":293,"length":5,"line":20,"character":2,"targetString":"title"},{"text":"(property) PopUpListProps.subTitle?: string | undefined","docs":"","start":324,"length":8,"line":21,"character":2,"targetString":"subTitle"},{"text":"(property) PopupProps.cancelText?: string | undefined","docs":"","start":349,"length":10,"line":22,"character":2,"targetString":"cancelText"},{"text":"(property) PopupProps.confirmText?: string | undefined","docs":"","start":373,"length":11,"line":23,"character":2,"targetString":"confirmText"},{"text":"(property) PopUpListProps.value?: string | number | string[] | number[] | undefined","docs":"","start":399,"length":5,"line":24,"character":2,"targetString":"value"},{"text":"const state: {\n    listValues: string[];\n}","docs":"","start":406,"length":5,"line":24,"character":9,"targetString":"state"},{"text":"(property) listValues: string[]","docs":"","start":412,"length":10,"line":24,"character":15,"targetString":"listValues"},{"text":"(property) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":426,"length":11,"line":25,"character":2,"targetString":"onMaskPress"},{"text":"var close: () => void","docs":"","start":442,"length":5,"line":25,"character":18,"targetString":"close"},{"text":"var close: () => void","docs":"","start":454,"length":5,"line":25,"character":30,"targetString":"close"},{"text":"(property) PopupProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":465,"length":9,"line":26,"character":2,"targetString":"onConfirm"},{"text":"(parameter) value: any","docs":"","start":477,"length":5,"line":26,"character":14,"targetString":"value"},{"text":"var close: () => void","docs":"","start":486,"length":5,"line":26,"character":23,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    listValues: string[];\n}>) => void","docs":"","start":504,"length":8,"line":27,"character":4,"targetString":"setState"},{"text":"(property) listValues: string[]","docs":"","start":515,"length":10,"line":27,"character":15,"targetString":"listValues"},{"text":"(parameter) value: any","docs":"","start":527,"length":5,"line":27,"character":27,"targetString":"value"},{"text":"var close: () => void","docs":"","start":541,"length":5,"line":28,"character":4,"targetString":"close"}],[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"const state: {\n    pickerValue: string;\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    pickerValue: string;\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    pickerValue: string;\n}>(initialState: {\n    pickerValue: string;\n} | (() => {\n    pickerValue: string;\n})): [{\n    pickerValue: string;\n}, React.Dispatch<React.SetStateAction<{\n    pickerValue: string;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) pickerValue: string","docs":"","start":85,"length":11,"line":3,"character":2,"targetString":"pickerValue"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":108,"length":5,"line":6,"character":0,"targetString":"Popup"},{"text":"(property) Popup.picker: (option: PopupPickerProps, option2?: DialogElse | undefined) => void","docs":"","start":114,"length":6,"line":6,"character":6,"targetString":"picker"},{"text":"(property) PopupPickerProps.dataSource?: PickerDataProps[] | PickerDataProps[][] | undefined","docs":"","start":125,"length":10,"line":7,"character":2,"targetString":"dataSource"},{"text":"(property) PickerDataProps.label: string","docs":"","start":151,"length":5,"line":9,"character":6,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":169,"length":5,"line":10,"character":6,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":200,"length":5,"line":13,"character":6,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":218,"length":5,"line":14,"character":6,"targetString":"value"},{"text":"(property) title?: string[] | React.ReactNode","docs":"","start":244,"length":5,"line":17,"character":2,"targetString":"title"},{"text":"(property) cancelText?: string | undefined","docs":"","start":263,"length":10,"line":18,"character":2,"targetString":"cancelText"},{"text":"(property) confirmText?: string | undefined","docs":"","start":287,"length":11,"line":19,"character":2,"targetString":"confirmText"},{"text":"(property) PopupPickerProps.value?: string | number | boolean | string[] | undefined","docs":"","start":313,"length":5,"line":20,"character":2,"targetString":"value"},{"text":"const state: {\n    pickerValue: string;\n}","docs":"","start":320,"length":5,"line":20,"character":9,"targetString":"state"},{"text":"(property) pickerValue: string","docs":"","start":326,"length":11,"line":20,"character":15,"targetString":"pickerValue"},{"text":"(property) PopupPickerProps.label?: string | string[] | undefined","docs":"","start":341,"length":5,"line":21,"character":2,"targetString":"label"},{"text":"(property) onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":358,"length":11,"line":22,"character":2,"targetString":"onMaskPress"},{"text":"var close: () => void","docs":"","start":374,"length":5,"line":22,"character":18,"targetString":"close"},{"text":"var close: () => void","docs":"","start":386,"length":5,"line":22,"character":30,"targetString":"close"},{"text":"(property) PopupPickerProps.onConfirm?: ((data: any, idx: number, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":397,"length":9,"line":23,"character":2,"targetString":"onConfirm"},{"text":"(parameter) value: any","docs":"","start":409,"length":5,"line":23,"character":14,"targetString":"value"},{"text":"(parameter) idx: number","docs":"","start":416,"length":3,"line":23,"character":21,"targetString":"idx"},{"text":"var close: () => void","docs":"","start":423,"length":5,"line":23,"character":28,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    pickerValue: string;\n}>) => void","docs":"","start":441,"length":8,"line":24,"character":4,"targetString":"setState"},{"text":"(property) pickerValue: string","docs":"","start":452,"length":11,"line":24,"character":15,"targetString":"pickerValue"},{"text":"(parameter) value: any","docs":"","start":465,"length":5,"line":24,"character":28,"targetString":"value"},{"text":"var close: () => void","docs":"","start":479,"length":5,"line":25,"character":4,"targetString":"close"}],[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"const state: {\n    pickerValues: string[];\n}","docs":"","start":47,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    pickerValues: string[];\n}>>","docs":"","start":54,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":66,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    pickerValues: string[];\n}>(initialState: {\n    pickerValues: string[];\n} | (() => {\n    pickerValues: string[];\n})): [{\n    pickerValues: string[];\n}, React.Dispatch<React.SetStateAction<{\n    pickerValues: string[];\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":72,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) pickerValues: string[]","docs":"","start":85,"length":12,"line":3,"character":2,"targetString":"pickerValues"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":121,"length":5,"line":6,"character":0,"targetString":"Popup"},{"text":"(property) Popup.picker: (option: PopupPickerProps, option2?: DialogElse | undefined) => void","docs":"","start":127,"length":6,"line":6,"character":6,"targetString":"picker"},{"text":"(property) PopupPickerProps.dataSource?: PickerDataProps[] | PickerDataProps[][] | undefined","docs":"","start":138,"length":10,"line":7,"character":2,"targetString":"dataSource"},{"text":"(property) PickerDataProps.label: string","docs":"","start":174,"length":5,"line":10,"character":8,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":194,"length":5,"line":11,"character":8,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":231,"length":5,"line":14,"character":8,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":251,"length":5,"line":15,"character":8,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":288,"length":5,"line":18,"character":8,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":308,"length":5,"line":19,"character":8,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":358,"length":5,"line":24,"character":8,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":378,"length":5,"line":25,"character":8,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":415,"length":5,"line":28,"character":8,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":435,"length":5,"line":29,"character":8,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":472,"length":5,"line":32,"character":8,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":492,"length":5,"line":33,"character":8,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":542,"length":5,"line":38,"character":8,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":562,"length":5,"line":39,"character":8,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":599,"length":5,"line":42,"character":8,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":619,"length":5,"line":43,"character":8,"targetString":"value"},{"text":"(property) PickerDataProps.label: string","docs":"","start":656,"length":5,"line":46,"character":8,"targetString":"label"},{"text":"(property) PickerDataProps.value: string","docs":"","start":676,"length":5,"line":47,"character":8,"targetString":"value"},{"text":"(property) PopupPickerProps.singlePicker?: boolean | undefined","docs":"","start":711,"length":12,"line":51,"character":2,"targetString":"singlePicker"},{"text":"(property) title?: string[] | React.ReactNode","docs":"","start":734,"length":5,"line":52,"character":2,"targetString":"title"},{"text":"(property) cancelText?: string | undefined","docs":"","start":753,"length":10,"line":53,"character":2,"targetString":"cancelText"},{"text":"(property) confirmText?: string | undefined","docs":"","start":777,"length":11,"line":54,"character":2,"targetString":"confirmText"},{"text":"(property) PopupPickerProps.value?: string | number | boolean | string[] | undefined","docs":"","start":803,"length":5,"line":55,"character":2,"targetString":"value"},{"text":"const state: {\n    pickerValues: string[];\n}","docs":"","start":810,"length":5,"line":55,"character":9,"targetString":"state"},{"text":"(property) pickerValues: string[]","docs":"","start":816,"length":12,"line":55,"character":15,"targetString":"pickerValues"},{"text":"(property) PopupPickerProps.label?: string | string[] | undefined","docs":"","start":832,"length":5,"line":56,"character":2,"targetString":"label"},{"text":"(property) onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":853,"length":11,"line":57,"character":2,"targetString":"onMaskPress"},{"text":"var close: () => void","docs":"","start":869,"length":5,"line":57,"character":18,"targetString":"close"},{"text":"var close: () => void","docs":"","start":881,"length":5,"line":57,"character":30,"targetString":"close"},{"text":"(property) PopupPickerProps.onConfirm?: ((data: any, idx: number, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":892,"length":9,"line":58,"character":2,"targetString":"onConfirm"},{"text":"(parameter) value: any","docs":"","start":904,"length":5,"line":58,"character":14,"targetString":"value"},{"text":"(parameter) idx: number","docs":"","start":911,"length":3,"line":58,"character":21,"targetString":"idx"},{"text":"var close: () => void","docs":"","start":918,"length":5,"line":58,"character":28,"targetString":"close"},{"text":"const setState: (value: React.SetStateAction<{\n    pickerValues: string[];\n}>) => void","docs":"","start":936,"length":8,"line":59,"character":4,"targetString":"setState"},{"text":"(property) pickerValues: string[]","docs":"","start":947,"length":12,"line":59,"character":15,"targetString":"pickerValues"},{"text":"(parameter) value: any","docs":"","start":961,"length":5,"line":59,"character":29,"targetString":"value"},{"text":"var close: () => void","docs":"","start":975,"length":5,"line":60,"character":4,"targetString":"close"}],[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":40,"length":5,"line":2,"character":0,"targetString":"Popup"},{"text":"(property) Popup.custom: (option: PopupCustomProps, option2?: DialogElse | undefined) => void","docs":"","start":46,"length":6,"line":2,"character":6,"targetString":"custom"},{"text":"(property) PopupCustomProps.content: React.ReactNode","docs":"","start":57,"length":7,"line":3,"character":2,"targetString":"content"},{"text":"(JSX attribute) style: {\n    height: number;\n    alignItems: string;\n    justifyContent: string;\n    backgroundColor: string;\n}","docs":"","start":84,"length":5,"line":5,"character":6,"targetString":"style"},{"text":"(property) height: number","docs":"","start":101,"length":6,"line":6,"character":8,"targetString":"height"},{"text":"(property) alignItems: string","docs":"","start":122,"length":10,"line":7,"character":8,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":152,"length":14,"line":8,"character":8,"targetString":"justifyContent"},{"text":"(property) backgroundColor: string","docs":"","start":186,"length":15,"line":9,"character":8,"targetString":"backgroundColor"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":233,"length":4,"line":12,"character":7,"targetString":"Text"},{"text":"(JSX attribute) style: {\n    fontSize: number;\n    color: string;\n}","docs":"","start":238,"length":5,"line":12,"character":12,"targetString":"style"},{"text":"(property) fontSize: number","docs":"","start":247,"length":8,"line":12,"character":21,"targetString":"fontSize"},{"text":"(property) color: string","docs":"","start":261,"length":5,"line":12,"character":35,"targetString":"color"},{"text":"var Text: {\n    new (data?: string | undefined): Text;\n    prototype: Text;\n}","docs":"The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.","start":294,"length":4,"line":12,"character":68,"targetString":"Text"},{"text":"(property) PopupProps.title?: React.ReactNode | string[]","docs":"","start":319,"length":5,"line":15,"character":2,"targetString":"title"},{"text":"(property) PopupProps.cancelText?: string | undefined","docs":"","start":338,"length":10,"line":16,"character":2,"targetString":"cancelText"},{"text":"(property) PopupProps.confirmText?: string | undefined","docs":"","start":362,"length":11,"line":17,"character":2,"targetString":"confirmText"},{"text":"(property) PopupProps.onMaskPress?: ((args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":388,"length":11,"line":18,"character":2,"targetString":"onMaskPress"},{"text":"var close: () => void","docs":"","start":404,"length":5,"line":18,"character":18,"targetString":"close"},{"text":"var close: () => void","docs":"","start":416,"length":5,"line":18,"character":30,"targetString":"close"},{"text":"(property) PopupProps.onConfirm?: ((data: any, args: {\n    close: () => void;\n}) => void) | undefined","docs":"","start":427,"length":9,"line":19,"character":2,"targetString":"onConfirm"},{"text":"(parameter) data: any","docs":"","start":439,"length":4,"line":19,"character":14,"targetString":"data"},{"text":"var close: () => void","docs":"","start":447,"length":5,"line":19,"character":22,"targetString":"close"},{"text":"var close: () => void","docs":"","start":465,"length":5,"line":20,"character":4,"targetString":"close"}],[{"text":"(alias) class Popup\nimport Popup","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Popup"},{"text":"(alias) class Popup\nimport Popup","docs":"","start":40,"length":5,"line":2,"character":0,"targetString":"Popup"},{"text":"(property) Popup.toast: (option: PopupToastProps) => void","docs":"","start":46,"length":5,"line":2,"character":6,"targetString":"toast"},{"text":"(property) PopupToastProps.message?: string | undefined","docs":"","start":56,"length":7,"line":3,"character":2,"targetString":"message"}]],"/feedback/swipeout":[[{"text":"(alias) class Swipeout\nimport Swipeout","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Swipeout"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":19,"length":8,"line":0,"character":19,"targetString":"IconFont"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":29,"length":5,"line":0,"character":29,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":68,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":78,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":85,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":91,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"const Icons: {\n    Heart: JSX.Element;\n}","docs":"","start":117,"length":5,"line":4,"character":13,"targetString":"Icons"},{"text":"(property) Heart: JSX.Element","docs":"","start":129,"length":5,"line":5,"character":2,"targetString":"Heart"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":143,"length":8,"line":6,"character":5,"targetString":"IconFont"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":158,"length":5,"line":7,"character":6,"targetString":"style"},{"text":"(property) FlexStyle.position?: \"absolute\" | \"relative\" | undefined","docs":"","start":175,"length":8,"line":8,"character":8,"targetString":"position"},{"text":"(property) FlexStyle.left?: string | number | undefined","docs":"","start":205,"length":4,"line":9,"character":8,"targetString":"left"},{"text":"(property) FlexStyle.top?: string | number | undefined","docs":"","start":226,"length":3,"line":10,"character":8,"targetString":"top"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":246,"length":9,"line":11,"character":8,"targetString":"marginTop"},{"text":"const cx: (d: number) => number","docs":"","start":258,"length":2,"line":11,"character":20,"targetString":"cx"},{"text":"(property) FlexStyle.marginLeft?: string | number | undefined","docs":"","start":273,"length":10,"line":12,"character":8,"targetString":"marginLeft"},{"text":"const cx: (d: number) => number","docs":"","start":286,"length":2,"line":12,"character":21,"targetString":"cx"},{"text":"(JSX attribute) color?: any","docs":"","start":308,"length":5,"line":14,"character":6,"targetString":"color"},{"text":"(JSX attribute) d?: string | undefined","docs":"","start":328,"length":1,"line":15,"character":6,"targetString":"d"},{"text":"(alias) class Swipeout\nimport Swipeout","docs":"","start":1044,"length":8,"line":20,"character":1,"targetString":"Swipeout"},{"text":"(JSX attribute) autoClose?: boolean | undefined","docs":"","start":1055,"length":9,"line":21,"character":2,"targetString":"autoClose"},{"text":"(JSX attribute) left?: SwipeoutAction[] | undefined","docs":"","start":1074,"length":4,"line":22,"character":2,"targetString":"left"},{"text":"(property) SwipeoutAction.text?: string | undefined","docs":"","start":1094,"length":4,"line":24,"character":6,"targetString":"text"},{"text":"(property) SwipeoutAction.type?: \"primary\" | \"delete\" | \"secondary\" | undefined","docs":"","start":1116,"length":4,"line":25,"character":6,"targetString":"type"},{"text":"(property) SwipeoutAction.backgroundColor?: string | undefined","docs":"","start":1139,"length":15,"line":26,"character":6,"targetString":"backgroundColor"},{"text":"(property) fontStyle: {\n    color: string;\n    fontSize: number;\n}","docs":"","start":1193,"length":9,"line":28,"character":6,"targetString":"fontStyle"},{"text":"(property) color: string","docs":"","start":1206,"length":5,"line":28,"character":19,"targetString":"color"},{"text":"(property) fontSize: number","docs":"","start":1221,"length":8,"line":28,"character":34,"targetString":"fontSize"},{"text":"(property) SwipeoutAction.content?: React.ReactNode","docs":"","start":1243,"length":7,"line":29,"character":6,"targetString":"content"},{"text":"const Icons: {\n    Heart: JSX.Element;\n}","docs":"","start":1252,"length":5,"line":29,"character":15,"targetString":"Icons"},{"text":"(property) Heart: JSX.Element","docs":"","start":1258,"length":5,"line":29,"character":21,"targetString":"Heart"},{"text":"(JSX attribute) style: {\n    height: number;\n    backgroundColor: string;\n    justifyContent: string;\n    alignItems: string;\n    paddingHorizontal: number;\n}","docs":"","start":1291,"length":5,"line":34,"character":4,"targetString":"style"},{"text":"(property) height: number","docs":"","start":1306,"length":6,"line":35,"character":6,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":1324,"length":15,"line":36,"character":6,"targetString":"backgroundColor"},{"text":"(property) justifyContent: string","docs":"","start":1355,"length":14,"line":37,"character":6,"targetString":"justifyContent"},{"text":"(property) alignItems: string","docs":"","start":1387,"length":10,"line":38,"character":6,"targetString":"alignItems"},{"text":"(property) paddingHorizontal: number","docs":"","start":1415,"length":17,"line":39,"character":6,"targetString":"paddingHorizontal"},{"text":"(JSX attribute) style: {\n    color: string;\n}","docs":"","start":1461,"length":5,"line":42,"character":12,"targetString":"style"},{"text":"(property) color: string","docs":"","start":1470,"length":5,"line":42,"character":21,"targetString":"color"},{"text":"(alias) class Swipeout\nimport Swipeout","docs":"","start":1537,"length":8,"line":46,"character":2,"targetString":"Swipeout"}],[{"text":"(alias) class Swipeout\nimport Swipeout","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Swipeout"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":19,"length":8,"line":0,"character":19,"targetString":"IconFont"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":29,"length":5,"line":0,"character":29,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":68,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":78,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":85,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":91,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"const Icons: {\n    DeleteIcon: JSX.Element;\n}","docs":"","start":117,"length":5,"line":4,"character":13,"targetString":"Icons"},{"text":"(property) DeleteIcon: JSX.Element","docs":"","start":129,"length":10,"line":5,"character":2,"targetString":"DeleteIcon"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":148,"length":8,"line":6,"character":5,"targetString":"IconFont"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":163,"length":5,"line":7,"character":6,"targetString":"style"},{"text":"(property) FlexStyle.position?: \"absolute\" | \"relative\" | undefined","docs":"","start":180,"length":8,"line":8,"character":8,"targetString":"position"},{"text":"(property) FlexStyle.left?: string | number | undefined","docs":"","start":210,"length":4,"line":9,"character":8,"targetString":"left"},{"text":"(property) FlexStyle.top?: string | number | undefined","docs":"","start":231,"length":3,"line":10,"character":8,"targetString":"top"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":251,"length":9,"line":11,"character":8,"targetString":"marginTop"},{"text":"const cx: (d: number) => number","docs":"","start":263,"length":2,"line":11,"character":20,"targetString":"cx"},{"text":"(property) FlexStyle.marginLeft?: string | number | undefined","docs":"","start":278,"length":10,"line":12,"character":8,"targetString":"marginLeft"},{"text":"const cx: (d: number) => number","docs":"","start":291,"length":2,"line":12,"character":21,"targetString":"cx"},{"text":"(JSX attribute) color?: any","docs":"","start":313,"length":5,"line":14,"character":6,"targetString":"color"},{"text":"(JSX attribute) d?: string | undefined","docs":"","start":333,"length":1,"line":15,"character":6,"targetString":"d"},{"text":"(alias) class Swipeout\nimport Swipeout","docs":"","start":2127,"length":8,"line":20,"character":1,"targetString":"Swipeout"},{"text":"(JSX attribute) autoClose?: boolean | undefined","docs":"","start":2138,"length":9,"line":21,"character":2,"targetString":"autoClose"},{"text":"(JSX attribute) right?: SwipeoutAction[] | undefined","docs":"","start":2157,"length":5,"line":22,"character":2,"targetString":"right"},{"text":"(property) SwipeoutAction.text?: string | undefined","docs":"","start":2178,"length":4,"line":24,"character":6,"targetString":"text"},{"text":"(property) SwipeoutAction.type?: \"delete\" | \"primary\" | \"secondary\" | undefined","docs":"","start":2200,"length":4,"line":25,"character":6,"targetString":"type"},{"text":"(property) fontStyle: {\n    color: string;\n    fontSize: number;\n}","docs":"","start":2242,"length":9,"line":27,"character":6,"targetString":"fontStyle"},{"text":"(property) color: string","docs":"","start":2255,"length":5,"line":27,"character":19,"targetString":"color"},{"text":"(property) fontSize: number","docs":"","start":2270,"length":8,"line":27,"character":34,"targetString":"fontSize"},{"text":"(property) SwipeoutAction.content?: React.ReactNode","docs":"","start":2292,"length":7,"line":28,"character":6,"targetString":"content"},{"text":"const Icons: {\n    DeleteIcon: JSX.Element;\n}","docs":"","start":2301,"length":5,"line":28,"character":15,"targetString":"Icons"},{"text":"(property) DeleteIcon: JSX.Element","docs":"","start":2307,"length":10,"line":28,"character":21,"targetString":"DeleteIcon"},{"text":"(JSX attribute) style: {\n    height: number;\n    backgroundColor: string;\n    justifyContent: string;\n    alignItems: string;\n    paddingHorizontal: number;\n}","docs":"","start":2345,"length":5,"line":33,"character":4,"targetString":"style"},{"text":"(property) height: number","docs":"","start":2360,"length":6,"line":34,"character":6,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":2378,"length":15,"line":35,"character":6,"targetString":"backgroundColor"},{"text":"(property) justifyContent: string","docs":"","start":2409,"length":14,"line":36,"character":6,"targetString":"justifyContent"},{"text":"(property) alignItems: string","docs":"","start":2441,"length":10,"line":37,"character":6,"targetString":"alignItems"},{"text":"(property) paddingHorizontal: number","docs":"","start":2469,"length":17,"line":38,"character":6,"targetString":"paddingHorizontal"},{"text":"(JSX attribute) style: {\n    color: string;\n}","docs":"","start":2515,"length":5,"line":41,"character":12,"targetString":"style"},{"text":"(property) color: string","docs":"","start":2524,"length":5,"line":41,"character":21,"targetString":"color"},{"text":"(alias) class Swipeout\nimport Swipeout","docs":"","start":2592,"length":8,"line":45,"character":2,"targetString":"Swipeout"}],[{"text":"(alias) class Swipeout\nimport Swipeout","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Swipeout"},{"text":"(alias) class Swipeout\nimport Swipeout","docs":"","start":44,"length":8,"line":2,"character":1,"targetString":"Swipeout"},{"text":"(JSX attribute) autoClose?: boolean | undefined","docs":"","start":55,"length":9,"line":3,"character":2,"targetString":"autoClose"},{"text":"(JSX attribute) disabled?: boolean | undefined","docs":"","start":74,"length":8,"line":4,"character":2,"targetString":"disabled"},{"text":"(JSX attribute) right?: SwipeoutAction[] | undefined","docs":"","start":92,"length":5,"line":5,"character":2,"targetString":"right"},{"text":"(property) SwipeoutAction.text?: string | undefined","docs":"","start":113,"length":4,"line":7,"character":6,"targetString":"text"},{"text":"(property) SwipeoutAction.type?: \"delete\" | \"primary\" | \"secondary\" | undefined","docs":"","start":135,"length":4,"line":8,"character":6,"targetString":"type"},{"text":"(property) fontStyle: {\n    color: string;\n    fontSize: number;\n}","docs":"","start":177,"length":9,"line":10,"character":6,"targetString":"fontStyle"},{"text":"(property) color: string","docs":"","start":190,"length":5,"line":10,"character":19,"targetString":"color"},{"text":"(property) fontSize: number","docs":"","start":205,"length":8,"line":10,"character":34,"targetString":"fontSize"},{"text":"(JSX attribute) style: {\n    height: number;\n    backgroundColor: string;\n    justifyContent: string;\n    alignItems: string;\n    paddingHorizontal: number;\n}","docs":"","start":247,"length":5,"line":15,"character":4,"targetString":"style"},{"text":"(property) height: number","docs":"","start":262,"length":6,"line":16,"character":6,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":280,"length":15,"line":17,"character":6,"targetString":"backgroundColor"},{"text":"(property) justifyContent: string","docs":"","start":312,"length":14,"line":18,"character":6,"targetString":"justifyContent"},{"text":"(property) alignItems: string","docs":"","start":344,"length":10,"line":19,"character":6,"targetString":"alignItems"},{"text":"(property) paddingHorizontal: number","docs":"","start":372,"length":17,"line":20,"character":6,"targetString":"paddingHorizontal"},{"text":"(JSX attribute) style: {\n    color: string;\n}","docs":"","start":418,"length":5,"line":23,"character":12,"targetString":"style"},{"text":"(property) color: string","docs":"","start":427,"length":5,"line":23,"character":21,"targetString":"color"},{"text":"(alias) class Swipeout\nimport Swipeout","docs":"","start":485,"length":8,"line":25,"character":2,"targetString":"Swipeout"}]],"/feedback/tips":[[{"text":"(alias) class Tips\nimport Tips","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tips"},{"text":"const state: {\n    topLeft: boolean;\n    topCenter: boolean;\n    topRight: boolean;\n    bottomLeft: boolean;\n    bottomCenter: boolean;\n    bottomRight: boolean;\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    topLeft: boolean;\n    topCenter: boolean;\n    topRight: boolean;\n    bottomLeft: boolean;\n    bottomCenter: boolean;\n    bottomRight: boolean;\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    topLeft: boolean;\n    topCenter: boolean;\n    topRight: boolean;\n    bottomLeft: boolean;\n    bottomCenter: boolean;\n    bottomRight: boolean;\n}>(initialState: {\n    topLeft: boolean;\n    topCenter: boolean;\n    topRight: boolean;\n    bottomLeft: boolean;\n    bottomCenter: boolean;\n    bottomRight: boolean;\n} | (() => {\n    ...;\n})): [...] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) topLeft: boolean","docs":"","start":84,"length":7,"line":3,"character":2,"targetString":"topLeft"},{"text":"(property) topCenter: boolean","docs":"","start":102,"length":9,"line":4,"character":2,"targetString":"topCenter"},{"text":"(property) topRight: boolean","docs":"","start":122,"length":8,"line":5,"character":2,"targetString":"topRight"},{"text":"(property) bottomLeft: boolean","docs":"","start":141,"length":10,"line":6,"character":2,"targetString":"bottomLeft"},{"text":"(property) bottomCenter: boolean","docs":"","start":162,"length":12,"line":7,"character":2,"targetString":"bottomCenter"},{"text":"(property) bottomRight: boolean","docs":"","start":185,"length":11,"line":8,"character":2,"targetString":"bottomRight"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":215,"length":7,"line":10,"character":6,"targetString":"bigTips"},{"text":"(property) width: number","docs":"","start":229,"length":5,"line":11,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":243,"length":6,"line":12,"character":2,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":257,"length":12,"line":13,"character":2,"targetString":"borderRadius"},{"text":"(alias) class Tips\nimport Tips","docs":"","start":280,"length":4,"line":16,"character":1,"targetString":"Tips"},{"text":"(JSX attribute) show?: boolean | undefined","docs":"","start":287,"length":4,"line":17,"character":2,"targetString":"show"},{"text":"const state: {\n    topLeft: boolean;\n    topCenter: boolean;\n    topRight: boolean;\n    bottomLeft: boolean;\n    bottomCenter: boolean;\n    bottomRight: boolean;\n}","docs":"","start":293,"length":5,"line":17,"character":8,"targetString":"state"},{"text":"(property) topLeft: boolean","docs":"","start":299,"length":7,"line":17,"character":14,"targetString":"topLeft"},{"text":"(JSX attribute) contentStyle?: StyleProp<ViewStyle>","docs":"","start":310,"length":12,"line":18,"character":2,"targetString":"contentStyle"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":324,"length":7,"line":18,"character":16,"targetString":"bigTips"},{"text":"(JSX attribute) bgColor?: string | undefined","docs":"","start":335,"length":7,"line":19,"character":2,"targetString":"bgColor"},{"text":"(JSX attribute) cornerPosition?: \"topLeft\" | \"topCenter\" | \"topRight\" | \"bottomLeft\" | \"bottomCenter\" | \"bottomRight\" | undefined","docs":"","start":355,"length":14,"line":20,"character":2,"targetString":"cornerPosition"}],[{"text":"(alias) class Tips\nimport Tips","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tips"},{"text":"const state: {\n    topCenter: boolean;\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    topCenter: boolean;\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    topCenter: boolean;\n}>(initialState: {\n    topCenter: boolean;\n} | (() => {\n    topCenter: boolean;\n})): [{\n    topCenter: boolean;\n}, React.Dispatch<React.SetStateAction<{\n    topCenter: boolean;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) topCenter: boolean","docs":"","start":84,"length":9,"line":3,"character":2,"targetString":"topCenter"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":112,"length":7,"line":5,"character":6,"targetString":"bigTips"},{"text":"(property) width: number","docs":"","start":126,"length":5,"line":6,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":140,"length":6,"line":7,"character":2,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":154,"length":12,"line":8,"character":2,"targetString":"borderRadius"},{"text":"(alias) class Tips\nimport Tips","docs":"","start":177,"length":4,"line":11,"character":1,"targetString":"Tips"},{"text":"(JSX attribute) show?: boolean | undefined","docs":"","start":184,"length":4,"line":12,"character":2,"targetString":"show"},{"text":"const state: {\n    topCenter: boolean;\n}","docs":"","start":190,"length":5,"line":12,"character":8,"targetString":"state"},{"text":"(property) topCenter: boolean","docs":"","start":196,"length":9,"line":12,"character":14,"targetString":"topCenter"},{"text":"(JSX attribute) contentStyle?: StyleProp<ViewStyle>","docs":"","start":209,"length":12,"line":13,"character":2,"targetString":"contentStyle"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":223,"length":7,"line":13,"character":16,"targetString":"bigTips"},{"text":"(JSX attribute) bgColor?: string | undefined","docs":"","start":234,"length":7,"line":14,"character":2,"targetString":"bgColor"},{"text":"(JSX attribute) cornerPosition?: \"topCenter\" | \"topLeft\" | \"topRight\" | \"bottomLeft\" | \"bottomCenter\" | \"bottomRight\" | undefined","docs":"","start":254,"length":14,"line":15,"character":2,"targetString":"cornerPosition"}],[{"text":"(alias) class Tips\nimport Tips","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tips"},{"text":"const state: {\n    topRight: boolean;\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    topRight: boolean;\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    topRight: boolean;\n}>(initialState: {\n    topRight: boolean;\n} | (() => {\n    topRight: boolean;\n})): [{\n    topRight: boolean;\n}, React.Dispatch<React.SetStateAction<{\n    topRight: boolean;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) topRight: boolean","docs":"","start":84,"length":8,"line":3,"character":2,"targetString":"topRight"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":111,"length":7,"line":5,"character":6,"targetString":"bigTips"},{"text":"(property) width: number","docs":"","start":125,"length":5,"line":6,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":139,"length":6,"line":7,"character":2,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":153,"length":12,"line":8,"character":2,"targetString":"borderRadius"},{"text":"(alias) class Tips\nimport Tips","docs":"","start":176,"length":4,"line":11,"character":1,"targetString":"Tips"},{"text":"(JSX attribute) show?: boolean | undefined","docs":"","start":183,"length":4,"line":12,"character":2,"targetString":"show"},{"text":"const state: {\n    topRight: boolean;\n}","docs":"","start":189,"length":5,"line":12,"character":8,"targetString":"state"},{"text":"(property) topRight: boolean","docs":"","start":195,"length":8,"line":12,"character":14,"targetString":"topRight"},{"text":"(JSX attribute) contentStyle?: StyleProp<ViewStyle>","docs":"","start":207,"length":12,"line":13,"character":2,"targetString":"contentStyle"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":221,"length":7,"line":13,"character":16,"targetString":"bigTips"},{"text":"(JSX attribute) bgColor?: string | undefined","docs":"","start":232,"length":7,"line":14,"character":2,"targetString":"bgColor"},{"text":"(JSX attribute) cornerPosition?: \"topRight\" | \"topLeft\" | \"topCenter\" | \"bottomLeft\" | \"bottomCenter\" | \"bottomRight\" | undefined","docs":"","start":252,"length":14,"line":15,"character":2,"targetString":"cornerPosition"}],[{"text":"(alias) class Tips\nimport Tips","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tips"},{"text":"const state: {\n    bottomLeft: boolean;\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    bottomLeft: boolean;\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    bottomLeft: boolean;\n}>(initialState: {\n    bottomLeft: boolean;\n} | (() => {\n    bottomLeft: boolean;\n})): [{\n    bottomLeft: boolean;\n}, React.Dispatch<React.SetStateAction<{\n    bottomLeft: boolean;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) bottomLeft: boolean","docs":"","start":84,"length":10,"line":3,"character":2,"targetString":"bottomLeft"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":113,"length":7,"line":5,"character":6,"targetString":"bigTips"},{"text":"(property) width: number","docs":"","start":127,"length":5,"line":6,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":141,"length":6,"line":7,"character":2,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":155,"length":12,"line":8,"character":2,"targetString":"borderRadius"},{"text":"(alias) class Tips\nimport Tips","docs":"","start":178,"length":4,"line":11,"character":1,"targetString":"Tips"},{"text":"(JSX attribute) show?: boolean | undefined","docs":"","start":185,"length":4,"line":12,"character":2,"targetString":"show"},{"text":"const state: {\n    bottomLeft: boolean;\n}","docs":"","start":191,"length":5,"line":12,"character":8,"targetString":"state"},{"text":"(property) bottomLeft: boolean","docs":"","start":197,"length":10,"line":12,"character":14,"targetString":"bottomLeft"},{"text":"(JSX attribute) contentStyle?: StyleProp<ViewStyle>","docs":"","start":211,"length":12,"line":13,"character":2,"targetString":"contentStyle"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":225,"length":7,"line":13,"character":16,"targetString":"bigTips"},{"text":"(JSX attribute) bgColor?: string | undefined","docs":"","start":236,"length":7,"line":14,"character":2,"targetString":"bgColor"},{"text":"(JSX attribute) cornerPosition?: \"bottomLeft\" | \"topLeft\" | \"topCenter\" | \"topRight\" | \"bottomCenter\" | \"bottomRight\" | undefined","docs":"","start":256,"length":14,"line":15,"character":2,"targetString":"cornerPosition"}],[{"text":"(alias) class Tips\nimport Tips","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tips"},{"text":"const state: {\n    bottomCenter: boolean;\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    bottomCenter: boolean;\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    bottomCenter: boolean;\n}>(initialState: {\n    bottomCenter: boolean;\n} | (() => {\n    bottomCenter: boolean;\n})): [{\n    bottomCenter: boolean;\n}, React.Dispatch<React.SetStateAction<{\n    bottomCenter: boolean;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) bottomCenter: boolean","docs":"","start":84,"length":12,"line":3,"character":2,"targetString":"bottomCenter"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":115,"length":7,"line":5,"character":6,"targetString":"bigTips"},{"text":"(property) width: number","docs":"","start":129,"length":5,"line":6,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":143,"length":6,"line":7,"character":2,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":157,"length":12,"line":8,"character":2,"targetString":"borderRadius"},{"text":"(alias) class Tips\nimport Tips","docs":"","start":180,"length":4,"line":11,"character":1,"targetString":"Tips"},{"text":"(JSX attribute) show?: boolean | undefined","docs":"","start":187,"length":4,"line":12,"character":2,"targetString":"show"},{"text":"const state: {\n    bottomCenter: boolean;\n}","docs":"","start":193,"length":5,"line":12,"character":8,"targetString":"state"},{"text":"(property) bottomCenter: boolean","docs":"","start":199,"length":12,"line":12,"character":14,"targetString":"bottomCenter"},{"text":"(JSX attribute) contentStyle?: StyleProp<ViewStyle>","docs":"","start":215,"length":12,"line":13,"character":2,"targetString":"contentStyle"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":229,"length":7,"line":13,"character":16,"targetString":"bigTips"},{"text":"(JSX attribute) bgColor?: string | undefined","docs":"","start":240,"length":7,"line":14,"character":2,"targetString":"bgColor"},{"text":"(JSX attribute) cornerPosition?: \"bottomCenter\" | \"topLeft\" | \"topCenter\" | \"topRight\" | \"bottomLeft\" | \"bottomRight\" | undefined","docs":"","start":260,"length":14,"line":15,"character":2,"targetString":"cornerPosition"}],[{"text":"(alias) class Tips\nimport Tips","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tips"},{"text":"const state: {\n    bottomRight: boolean;\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    bottomRight: boolean;\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    bottomRight: boolean;\n}>(initialState: {\n    bottomRight: boolean;\n} | (() => {\n    bottomRight: boolean;\n})): [{\n    bottomRight: boolean;\n}, React.Dispatch<React.SetStateAction<{\n    bottomRight: boolean;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) bottomRight: boolean","docs":"","start":84,"length":11,"line":3,"character":2,"targetString":"bottomRight"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":114,"length":7,"line":5,"character":6,"targetString":"bigTips"},{"text":"(property) width: number","docs":"","start":128,"length":5,"line":6,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":142,"length":6,"line":7,"character":2,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":156,"length":12,"line":8,"character":2,"targetString":"borderRadius"},{"text":"(alias) class Tips\nimport Tips","docs":"","start":179,"length":4,"line":11,"character":1,"targetString":"Tips"},{"text":"(JSX attribute) show?: boolean | undefined","docs":"","start":186,"length":4,"line":12,"character":2,"targetString":"show"},{"text":"const state: {\n    bottomRight: boolean;\n}","docs":"","start":192,"length":5,"line":12,"character":8,"targetString":"state"},{"text":"(property) bottomRight: boolean","docs":"","start":198,"length":11,"line":12,"character":14,"targetString":"bottomRight"},{"text":"(JSX attribute) contentStyle?: StyleProp<ViewStyle>","docs":"","start":213,"length":12,"line":13,"character":2,"targetString":"contentStyle"},{"text":"const bigTips: {\n    width: number;\n    height: number;\n    borderRadius: number;\n}","docs":"","start":227,"length":7,"line":13,"character":16,"targetString":"bigTips"},{"text":"(JSX attribute) bgColor?: string | undefined","docs":"","start":238,"length":7,"line":14,"character":2,"targetString":"bgColor"},{"text":"(JSX attribute) cornerPosition?: \"bottomRight\" | \"topLeft\" | \"topCenter\" | \"topRight\" | \"bottomLeft\" | \"bottomCenter\" | undefined","docs":"","start":258,"length":14,"line":15,"character":2,"targetString":"cornerPosition"}]],"/feedback/toast-view":[[{"text":"(alias) class Toast\nimport Toast","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Toast"},{"text":"const successShow: boolean","docs":"","start":47,"length":11,"line":2,"character":7,"targetString":"successShow"},{"text":"const setSuccessShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":60,"length":14,"line":2,"character":20,"targetString":"setSuccessShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":78,"length":5,"line":2,"character":38,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":84,"length":8,"line":2,"character":44,"targetString":"useState"},{"text":"(alias) class Toast\nimport Toast","docs":"","start":103,"length":5,"line":4,"character":1,"targetString":"Toast"},{"text":"(property) Toast.Success: React.ElementType<ToastSuccessProps>","docs":"","start":109,"length":7,"line":4,"character":7,"targetString":"Success"},{"text":"(JSX attribute) ToastProps.show: boolean","docs":"","start":119,"length":4,"line":5,"character":2,"targetString":"show"},{"text":"const successShow: boolean","docs":"","start":125,"length":11,"line":5,"character":8,"targetString":"successShow"},{"text":"(JSX attribute) ToastProps.text?: string | undefined","docs":"","start":140,"length":4,"line":6,"character":2,"targetString":"text"},{"text":"(JSX attribute) ToastProps.onFinish: () => void","docs":"","start":165,"length":8,"line":7,"character":2,"targetString":"onFinish"},{"text":"const setSuccessShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":181,"length":14,"line":7,"character":18,"targetString":"setSuccessShow"}],[{"text":"(alias) class Toast\nimport Toast","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Toast"},{"text":"const warningShow: boolean","docs":"","start":47,"length":11,"line":2,"character":7,"targetString":"warningShow"},{"text":"const setWarningShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":60,"length":14,"line":2,"character":20,"targetString":"setWarningShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":78,"length":5,"line":2,"character":38,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":84,"length":8,"line":2,"character":44,"targetString":"useState"},{"text":"(alias) class Toast\nimport Toast","docs":"","start":103,"length":5,"line":4,"character":1,"targetString":"Toast"},{"text":"(property) Toast.Warning: React.ElementType<ToastWarningProps>","docs":"","start":109,"length":7,"line":4,"character":7,"targetString":"Warning"},{"text":"(JSX attribute) ToastProps.show: boolean","docs":"","start":119,"length":4,"line":5,"character":2,"targetString":"show"},{"text":"const warningShow: boolean","docs":"","start":125,"length":11,"line":5,"character":8,"targetString":"warningShow"},{"text":"(JSX attribute) ToastProps.text?: string | undefined","docs":"","start":140,"length":4,"line":6,"character":2,"targetString":"text"},{"text":"(JSX attribute) ToastProps.onFinish: () => void","docs":"","start":162,"length":8,"line":7,"character":2,"targetString":"onFinish"},{"text":"const setWarningShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":178,"length":14,"line":7,"character":18,"targetString":"setWarningShow"}],[{"text":"(alias) class Toast\nimport Toast","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Toast"},{"text":"const errorShow: boolean","docs":"","start":47,"length":9,"line":2,"character":7,"targetString":"errorShow"},{"text":"const setErrorShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":58,"length":12,"line":2,"character":18,"targetString":"setErrorShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":74,"length":5,"line":2,"character":34,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":80,"length":8,"line":2,"character":40,"targetString":"useState"},{"text":"(alias) class Toast\nimport Toast","docs":"","start":99,"length":5,"line":4,"character":1,"targetString":"Toast"},{"text":"(property) Toast.Error: React.ElementType<ToastErrorProps>","docs":"","start":105,"length":5,"line":4,"character":7,"targetString":"Error"},{"text":"(JSX attribute) ToastProps.show: boolean","docs":"","start":113,"length":4,"line":5,"character":2,"targetString":"show"},{"text":"const errorShow: boolean","docs":"","start":119,"length":9,"line":5,"character":8,"targetString":"errorShow"},{"text":"(JSX attribute) ToastProps.text?: string | undefined","docs":"","start":132,"length":4,"line":6,"character":2,"targetString":"text"},{"text":"(JSX attribute) ToastProps.onFinish: () => void","docs":"","start":152,"length":8,"line":7,"character":2,"targetString":"onFinish"},{"text":"const setErrorShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":168,"length":12,"line":7,"character":18,"targetString":"setErrorShow"}],[{"text":"(alias) class Toast\nimport Toast","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Toast"},{"text":"const loadingShow: boolean","docs":"","start":47,"length":11,"line":2,"character":7,"targetString":"loadingShow"},{"text":"const setLoadingShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":60,"length":14,"line":2,"character":20,"targetString":"setLoadingShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":78,"length":5,"line":2,"character":38,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":84,"length":8,"line":2,"character":44,"targetString":"useState"},{"text":"(alias) class Toast\nimport Toast","docs":"","start":103,"length":5,"line":4,"character":1,"targetString":"Toast"},{"text":"(property) Toast.Loading: React.ElementType<ToastLoadingProps>","docs":"","start":109,"length":7,"line":4,"character":7,"targetString":"Loading"},{"text":"(JSX attribute) ToastProps.show: boolean","docs":"","start":117,"length":4,"line":4,"character":15,"targetString":"show"},{"text":"const loadingShow: boolean","docs":"","start":123,"length":11,"line":4,"character":21,"targetString":"loadingShow"},{"text":"(JSX attribute) ToastProps.onFinish: () => void","docs":"","start":136,"length":8,"line":4,"character":34,"targetString":"onFinish"},{"text":"const setLoadingShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":152,"length":14,"line":4,"character":50,"targetString":"setLoadingShow"}],[{"text":"(alias) class Toast\nimport Toast","docs":"","start":9,"length":5,"line":0,"character":9,"targetString":"Toast"},{"text":"const show: boolean","docs":"","start":47,"length":4,"line":2,"character":7,"targetString":"show"},{"text":"const setShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":53,"length":7,"line":2,"character":13,"targetString":"setShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":64,"length":5,"line":2,"character":24,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":70,"length":8,"line":2,"character":30,"targetString":"useState"},{"text":"(alias) class Toast\nimport Toast","docs":"","start":89,"length":5,"line":4,"character":1,"targetString":"Toast"},{"text":"(JSX attribute) show: boolean","docs":"","start":95,"length":4,"line":4,"character":7,"targetString":"show"},{"text":"const show: boolean","docs":"","start":101,"length":4,"line":4,"character":13,"targetString":"show"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":107,"length":4,"line":4,"character":19,"targetString":"text"},{"text":"(JSX attribute) onFinish: () => void","docs":"","start":131,"length":8,"line":4,"character":43,"targetString":"onFinish"},{"text":"const setShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":147,"length":7,"line":4,"character":59,"targetString":"setShow"}]],"/":[],"/navigation/controller-bar":[[{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":9,"length":13,"line":0,"character":9,"targetString":"ControllerBar"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":49,"length":13,"line":2,"character":1,"targetString":"ControllerBar"},{"text":"(JSX attribute) size?: number | \"large\" | \"normal\" | \"small\" | undefined","docs":"","start":65,"length":4,"line":3,"character":2,"targetString":"size"},{"text":"(JSX attribute) button: ButtonProps[]","docs":"","start":77,"length":6,"line":4,"character":2,"targetString":"button"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":93,"length":4,"line":5,"character":6,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":104,"length":4,"line":5,"character":17,"targetString":"type"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":129,"length":4,"line":6,"character":6,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":140,"length":4,"line":6,"character":17,"targetString":"type"}],[{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":9,"length":13,"line":0,"character":9,"targetString":"ControllerBar"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":49,"length":13,"line":2,"character":1,"targetString":"ControllerBar"},{"text":"(property) ControllerBar.Group: React.ElementType<BarGroupProps>","docs":"","start":63,"length":5,"line":2,"character":15,"targetString":"Group"},{"text":"(JSX attribute) BarGroupProps.style?: StyleProp<ViewStyle>","docs":"","start":69,"length":5,"line":2,"character":21,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":78,"length":9,"line":2,"character":30,"targetString":"marginTop"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":99,"length":13,"line":3,"character":3,"targetString":"ControllerBar"},{"text":"(JSX attribute) size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":117,"length":4,"line":4,"character":4,"targetString":"size"},{"text":"(JSX attribute) button: ButtonProps[]","docs":"","start":131,"length":6,"line":5,"character":4,"targetString":"button"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":149,"length":4,"line":6,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":160,"length":4,"line":6,"character":19,"targetString":"type"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":187,"length":4,"line":7,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":198,"length":4,"line":7,"character":19,"targetString":"type"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":232,"length":13,"line":10,"character":3,"targetString":"ControllerBar"},{"text":"(JSX attribute) size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":250,"length":4,"line":11,"character":4,"targetString":"size"},{"text":"(JSX attribute) button: ButtonProps[]","docs":"","start":264,"length":6,"line":12,"character":4,"targetString":"button"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":282,"length":4,"line":13,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":293,"length":4,"line":13,"character":19,"targetString":"type"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":320,"length":4,"line":14,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":331,"length":4,"line":14,"character":19,"targetString":"type"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":364,"length":13,"line":17,"character":2,"targetString":"ControllerBar"},{"text":"(property) ControllerBar.Group: React.ElementType<BarGroupProps>","docs":"","start":378,"length":5,"line":17,"character":16,"targetString":"Group"}],[{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":9,"length":13,"line":0,"character":9,"targetString":"ControllerBar"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":49,"length":13,"line":2,"character":1,"targetString":"ControllerBar"},{"text":"(property) ControllerBar.Group: React.ElementType<BarGroupProps>","docs":"","start":63,"length":5,"line":2,"character":15,"targetString":"Group"},{"text":"(JSX attribute) BarGroupProps.type?: \"warp\" | \"swiper\" | \"divide\" | undefined","docs":"","start":71,"length":4,"line":3,"character":2,"targetString":"type"},{"text":"(JSX attribute) BarGroupProps.style?: StyleProp<ViewStyle>","docs":"","start":87,"length":5,"line":4,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":96,"length":9,"line":4,"character":11,"targetString":"marginTop"},{"text":"(JSX attribute) BarGroupProps.swiperConfig?: CarouselProps | undefined","docs":"","start":115,"length":12,"line":5,"character":2,"targetString":"swiperConfig"},{"text":"(property) CarouselProps.style?: StyleProp<ViewStyle>","docs":"","start":135,"length":5,"line":6,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":144,"length":6,"line":6,"character":13,"targetString":"height"},{"text":"(property) CarouselProps.dotActiveStyle?: StyleProp<ViewStyle>","docs":"","start":162,"length":14,"line":7,"character":4,"targetString":"dotActiveStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":180,"length":15,"line":7,"character":22,"targetString":"backgroundColor"},{"text":"(property) CarouselProps.dotStyle?: StyleProp<ViewStyle>","docs":"","start":210,"length":8,"line":8,"character":4,"targetString":"dotStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":222,"length":15,"line":8,"character":16,"targetString":"backgroundColor"},{"text":"(JSX attribute) BarGroupProps.size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":256,"length":4,"line":10,"character":2,"targetString":"size"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":271,"length":13,"line":12,"character":3,"targetString":"ControllerBar"},{"text":"(JSX attribute) size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":289,"length":4,"line":13,"character":4,"targetString":"size"},{"text":"(JSX attribute) button: ButtonProps[]","docs":"","start":303,"length":6,"line":14,"character":4,"targetString":"button"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":321,"length":4,"line":15,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":332,"length":4,"line":15,"character":19,"targetString":"type"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":359,"length":4,"line":16,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":370,"length":4,"line":16,"character":19,"targetString":"type"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":404,"length":13,"line":19,"character":3,"targetString":"ControllerBar"},{"text":"(JSX attribute) size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":422,"length":4,"line":20,"character":4,"targetString":"size"},{"text":"(JSX attribute) button: ButtonProps[]","docs":"","start":436,"length":6,"line":21,"character":4,"targetString":"button"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":454,"length":4,"line":22,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":465,"length":4,"line":22,"character":19,"targetString":"type"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":492,"length":4,"line":23,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":503,"length":4,"line":23,"character":19,"targetString":"type"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":536,"length":13,"line":26,"character":2,"targetString":"ControllerBar"},{"text":"(property) ControllerBar.Group: React.ElementType<BarGroupProps>","docs":"","start":550,"length":5,"line":26,"character":16,"targetString":"Group"}],[{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":9,"length":13,"line":0,"character":9,"targetString":"ControllerBar"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":49,"length":13,"line":2,"character":1,"targetString":"ControllerBar"},{"text":"(property) ControllerBar.Group: React.ElementType<BarGroupProps>","docs":"","start":63,"length":5,"line":2,"character":15,"targetString":"Group"},{"text":"(JSX attribute) BarGroupProps.type?: \"warp\" | \"swiper\" | \"divide\" | undefined","docs":"","start":69,"length":4,"line":2,"character":21,"targetString":"type"},{"text":"(JSX attribute) BarGroupProps.style?: StyleProp<ViewStyle>","docs":"","start":83,"length":5,"line":2,"character":35,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":92,"length":9,"line":2,"character":44,"targetString":"marginTop"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":113,"length":13,"line":3,"character":3,"targetString":"ControllerBar"},{"text":"(JSX attribute) size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":131,"length":4,"line":4,"character":4,"targetString":"size"},{"text":"(JSX attribute) button: ButtonProps[]","docs":"","start":145,"length":6,"line":5,"character":4,"targetString":"button"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":163,"length":4,"line":6,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":174,"length":4,"line":6,"character":19,"targetString":"type"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":201,"length":4,"line":7,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":212,"length":4,"line":7,"character":19,"targetString":"type"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":246,"length":13,"line":10,"character":3,"targetString":"ControllerBar"},{"text":"(JSX attribute) size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":264,"length":4,"line":11,"character":4,"targetString":"size"},{"text":"(JSX attribute) button: ButtonProps[]","docs":"","start":278,"length":6,"line":12,"character":4,"targetString":"button"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":296,"length":4,"line":13,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":307,"length":4,"line":13,"character":19,"targetString":"type"},{"text":"(property) ButtonProps.text?: string | undefined","docs":"","start":334,"length":4,"line":14,"character":8,"targetString":"text"},{"text":"(property) ButtonProps.type?: \"normal\" | \"primary\" | undefined","docs":"","start":345,"length":4,"line":14,"character":19,"targetString":"type"},{"text":"(alias) class ControllerBar\nimport ControllerBar","docs":"","start":378,"length":13,"line":17,"character":2,"targetString":"ControllerBar"},{"text":"(property) ControllerBar.Group: React.ElementType<BarGroupProps>","docs":"","start":392,"length":5,"line":17,"character":16,"targetString":"Group"}]],"/navigation/tab":[[{"text":"(alias) class Tab\nimport Tab","docs":"","start":9,"length":3,"line":0,"character":9,"targetString":"Tab"},{"text":"const state: {\n    tab: string;\n}","docs":"","start":45,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const set: React.Dispatch<React.SetStateAction<{\n    tab: string;\n}>>","docs":"","start":52,"length":3,"line":2,"character":14,"targetString":"set"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":59,"length":5,"line":2,"character":21,"targetString":"React"},{"text":"function React.useState<{\n    tab: string;\n}>(initialState: {\n    tab: string;\n} | (() => {\n    tab: string;\n})): [{\n    tab: string;\n}, React.Dispatch<React.SetStateAction<{\n    tab: string;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":65,"length":8,"line":2,"character":27,"targetString":"useState"},{"text":"(property) tab: string","docs":"","start":76,"length":3,"line":2,"character":38,"targetString":"tab"},{"text":"const setState: (value: any) => void","docs":"","start":98,"length":8,"line":3,"character":6,"targetString":"setState"},{"text":"(parameter) value: any","docs":"","start":109,"length":5,"line":3,"character":17,"targetString":"value"},{"text":"const set: (value: React.SetStateAction<{\n    tab: string;\n}>) => void","docs":"","start":118,"length":3,"line":3,"character":26,"targetString":"set"},{"text":"const state: {\n    tab: string;\n}","docs":"","start":127,"length":5,"line":3,"character":35,"targetString":"state"},{"text":"(parameter) value: any","docs":"","start":137,"length":5,"line":3,"character":45,"targetString":"value"},{"text":"const tabPaneArr: string[]","docs":"","start":152,"length":10,"line":4,"character":6,"targetString":"tabPaneArr"},{"text":"const contentStyle: {\n    height: number;\n    backgroundColor: string;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":208,"length":12,"line":5,"character":6,"targetString":"contentStyle"},{"text":"(property) height: number","docs":"","start":227,"length":6,"line":6,"character":2,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":242,"length":15,"line":7,"character":2,"targetString":"backgroundColor"},{"text":"(property) alignItems: string","docs":"","start":269,"length":10,"line":8,"character":2,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":293,"length":14,"line":9,"character":2,"targetString":"justifyContent"},{"text":"const textArr: string[]","docs":"","start":327,"length":7,"line":11,"character":6,"targetString":"textArr"},{"text":"const tabPanes: boolean","docs":"","start":474,"length":8,"line":12,"character":6,"targetString":"tabPanes"},{"text":"const tabPaneArr: string[]","docs":"","start":485,"length":10,"line":12,"character":17,"targetString":"tabPaneArr"},{"text":"(method) Array<string>.map<JSX.Element>(callbackfn: (value: string, index: number, array: string[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":496,"length":3,"line":12,"character":28,"targetString":"map"},{"text":"(parameter) item: string","docs":"","start":501,"length":4,"line":12,"character":33,"targetString":"item"},{"text":"(parameter) idx: number","docs":"","start":507,"length":3,"line":12,"character":39,"targetString":"idx"},{"text":"(alias) class Tab\nimport Tab","docs":"","start":520,"length":3,"line":13,"character":3,"targetString":"Tab"},{"text":"(property) Tab.TabPane: React.ElementType<TabPaneProps>","docs":"","start":524,"length":7,"line":13,"character":7,"targetString":"TabPane"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":532,"length":3,"line":13,"character":15,"targetString":"key"},{"text":"(parameter) item: string","docs":"","start":540,"length":4,"line":13,"character":23,"targetString":"item"},{"text":"(JSX attribute) TabPaneProps.tab?: React.ReactNode","docs":"","start":548,"length":3,"line":13,"character":31,"targetString":"tab"},{"text":"(parameter) item: string","docs":"","start":556,"length":4,"line":13,"character":39,"targetString":"item"},{"text":"(JSX attribute) style: {\n    height: number;\n    backgroundColor: string;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":575,"length":5,"line":14,"character":10,"targetString":"style"},{"text":"const contentStyle: {\n    height: number;\n    backgroundColor: string;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":582,"length":12,"line":14,"character":17,"targetString":"contentStyle"},{"text":"(parameter) item: string","docs":"","start":623,"length":4,"line":15,"character":26,"targetString":"item"},{"text":"const textArr: string[]","docs":"","start":632,"length":7,"line":15,"character":35,"targetString":"textArr"},{"text":"(parameter) idx: number","docs":"","start":640,"length":3,"line":15,"character":43,"targetString":"idx"},{"text":"(alias) class Tab\nimport Tab","docs":"","start":673,"length":3,"line":17,"character":4,"targetString":"Tab"},{"text":"(property) Tab.TabPane: React.ElementType<TabPaneProps>","docs":"","start":677,"length":7,"line":17,"character":8,"targetString":"TabPane"},{"text":"(alias) class Tab\nimport Tab","docs":"","start":691,"length":3,"line":20,"character":1,"targetString":"Tab"},{"text":"(property) state: {\n    tab: string;\n}","docs":"","start":708,"length":5,"line":21,"character":13,"targetString":"state"},{"text":"(property) state: {\n    tab: string;\n}","docs":"","start":713,"length":0,"line":21,"character":18,"targetString":""},{"text":"(property) state: {\n    tab: string;\n}","docs":"","start":713,"length":0,"line":21,"character":18,"targetString":""},{"text":"(property) true: any","docs":"","start":731,"length":4,"line":22,"character":12,"targetString":"true"},{"text":"(property) true: any","docs":"","start":735,"length":0,"line":22,"character":16,"targetString":""},{"text":"(property) value: any","docs":"","start":749,"length":5,"line":23,"character":12,"targetString":"value"},{"text":"(method) setState({ tab: value }: {\n    tab: any;\n}): any","docs":"","start":758,"length":8,"line":23,"character":21,"targetString":"setState"},{"text":"(property) tab: any","docs":"","start":769,"length":3,"line":23,"character":32,"targetString":"tab"},{"text":"var value: any","docs":"","start":774,"length":5,"line":23,"character":37,"targetString":"value"},{"text":"(property) tabPanes: boolean","docs":"","start":1271,"length":8,"line":47,"character":3,"targetString":"tabPanes"},{"text":"(alias) class Tab\nimport Tab","docs":"","start":1283,"length":3,"line":48,"character":2,"targetString":"Tab"}]],"/navigation/tab-bar":[[{"text":"(alias) class TabBar\nimport TabBar","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TabBar"},{"text":"const tab: string","docs":"","start":48,"length":3,"line":2,"character":7,"targetString":"tab"},{"text":"const setTab: React.Dispatch<React.SetStateAction<string>>","docs":"","start":53,"length":6,"line":2,"character":12,"targetString":"setTab"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":63,"length":5,"line":2,"character":22,"targetString":"React"},{"text":"function React.useState<string>(initialState: string | (() => string)): [string, React.Dispatch<React.SetStateAction<string>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":69,"length":8,"line":2,"character":28,"targetString":"useState"},{"text":"const tabs: {\n    key: string;\n    title: string;\n}[]","docs":"","start":91,"length":4,"line":4,"character":6,"targetString":"tabs"},{"text":"var Array: ArrayConstructor","docs":"","start":98,"length":5,"line":4,"character":13,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<any, number>(iterable: Iterable<any> | ArrayLike<any>, mapfn: (v: any, k: number) => number, thisArg?: any): number[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":104,"length":4,"line":4,"character":19,"targetString":"from"},{"text":"var Array: ArrayConstructor\n(arrayLength?: number | undefined) => any[] (+2 overloads)","docs":"","start":109,"length":5,"line":4,"character":24,"targetString":"Array"},{"text":"(parameter) v: any","docs":"","start":121,"length":1,"line":4,"character":36,"targetString":"v"},{"text":"(parameter) k: number","docs":"","start":124,"length":1,"line":4,"character":39,"targetString":"k"},{"text":"(parameter) k: number","docs":"","start":130,"length":1,"line":4,"character":45,"targetString":"k"},{"text":"(method) Array<number>.map<{\n    key: string;\n    title: string;\n}>(callbackfn: (value: number, index: number, array: number[]) => {\n    key: string;\n    title: string;\n}, thisArg?: any): {\n    key: string;\n    title: string;\n}[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":137,"length":3,"line":4,"character":52,"targetString":"map"},{"text":"(parameter) v: number","docs":"","start":141,"length":1,"line":4,"character":56,"targetString":"v"},{"text":"(property) key: string","docs":"","start":159,"length":3,"line":5,"character":11,"targetString":"key"},{"text":"(parameter) v: number","docs":"","start":167,"length":1,"line":5,"character":19,"targetString":"v"},{"text":"(property) title: string","docs":"","start":172,"length":5,"line":5,"character":24,"targetString":"title"},{"text":"(parameter) v: number","docs":"","start":185,"length":1,"line":5,"character":37,"targetString":"v"},{"text":"(alias) class TabBar\nimport TabBar","docs":"","start":198,"length":6,"line":8,"character":1,"targetString":"TabBar"},{"text":"(JSX attribute) tabs: TabBarArr[]","docs":"","start":207,"length":4,"line":9,"character":2,"targetString":"tabs"},{"text":"const tabs: {\n    key: string;\n    title: string;\n}[]","docs":"","start":213,"length":4,"line":9,"character":8,"targetString":"tabs"},{"text":"(JSX attribute) activeKey?: string | number | undefined","docs":"","start":221,"length":9,"line":10,"character":2,"targetString":"activeKey"},{"text":"const tab: string","docs":"","start":232,"length":3,"line":10,"character":13,"targetString":"tab"},{"text":"(JSX attribute) onChange?: ((index: string) => void) | undefined","docs":"","start":239,"length":8,"line":11,"character":2,"targetString":"onChange"},{"text":"(parameter) value: string","docs":"","start":249,"length":5,"line":11,"character":12,"targetString":"value"},{"text":"const setTab: (value: React.SetStateAction<string>) => void","docs":"","start":258,"length":6,"line":11,"character":21,"targetString":"setTab"},{"text":"(parameter) value: string","docs":"","start":265,"length":5,"line":11,"character":28,"targetString":"value"},{"text":"(JSX attribute) underlineStyle?: StyleProp<ViewStyle>","docs":"","start":275,"length":14,"line":12,"character":2,"targetString":"underlineStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":293,"length":5,"line":12,"character":20,"targetString":"width"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":304,"length":15,"line":12,"character":31,"targetString":"backgroundColor"},{"text":"(JSX attribute) tabActiveTextStyle?: StyleProp<TextStyle>","docs":"","start":336,"length":18,"line":13,"character":2,"targetString":"tabActiveTextStyle"},{"text":"(property) TextStyle.color?: ColorValue | undefined","docs":"","start":362,"length":5,"line":14,"character":4,"targetString":"color"},{"text":"(JSX attribute) tabTextStyle?: StyleProp<TextStyle>","docs":"","start":387,"length":12,"line":16,"character":2,"targetString":"tabTextStyle"},{"text":"(property) TextStyle.color?: ColorValue | undefined","docs":"","start":403,"length":5,"line":16,"character":18,"targetString":"color"}],[{"text":"(alias) class TabBar\nimport TabBar","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TabBar"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":17,"length":5,"line":0,"character":17,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":56,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":66,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":73,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":79,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"const tabRadio: string","docs":"","start":99,"length":8,"line":4,"character":7,"targetString":"tabRadio"},{"text":"const setTabRadio: React.Dispatch<React.SetStateAction<string>>","docs":"","start":109,"length":11,"line":4,"character":17,"targetString":"setTabRadio"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":124,"length":5,"line":4,"character":32,"targetString":"React"},{"text":"function React.useState<string>(initialState: string | (() => string)): [string, React.Dispatch<React.SetStateAction<string>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":130,"length":8,"line":4,"character":38,"targetString":"useState"},{"text":"const tabRadios: {\n    key: string;\n    title: string;\n    tabStyle: {\n        alignItems: string;\n        justifyContent: string;\n    };\n    textStyle: {\n        fontSize: number;\n    };\n}[]","docs":"","start":152,"length":9,"line":6,"character":6,"targetString":"tabRadios"},{"text":"var Array: ArrayConstructor","docs":"","start":164,"length":5,"line":6,"character":18,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<any, number>(iterable: Iterable<any> | ArrayLike<any>, mapfn: (v: any, k: number) => number, thisArg?: any): number[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":170,"length":4,"line":6,"character":24,"targetString":"from"},{"text":"var Array: ArrayConstructor\n(arrayLength?: number | undefined) => any[] (+2 overloads)","docs":"","start":175,"length":5,"line":6,"character":29,"targetString":"Array"},{"text":"(parameter) v: any","docs":"","start":186,"length":1,"line":6,"character":40,"targetString":"v"},{"text":"(parameter) k: number","docs":"","start":189,"length":1,"line":6,"character":43,"targetString":"k"},{"text":"(parameter) k: number","docs":"","start":195,"length":1,"line":6,"character":49,"targetString":"k"},{"text":"(method) Array<number>.map<{\n    key: string;\n    title: string;\n    tabStyle: {\n        alignItems: string;\n        justifyContent: string;\n    };\n    textStyle: {\n        fontSize: number;\n    };\n}>(callbackfn: (value: number, index: number, array: number[]) => {\n    key: string;\n    title: string;\n    tabStyle: {\n        ...;\n    };\n    textStyle: {\n        ...;\n    };\n}, thisArg?: any): {\n    ...;\n}[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":202,"length":3,"line":6,"character":56,"targetString":"map"},{"text":"(parameter) v: number","docs":"","start":206,"length":1,"line":6,"character":60,"targetString":"v"},{"text":"(property) key: string","docs":"","start":228,"length":3,"line":8,"character":4,"targetString":"key"},{"text":"(parameter) v: number","docs":"","start":236,"length":1,"line":8,"character":12,"targetString":"v"},{"text":"(property) title: string","docs":"","start":245,"length":5,"line":9,"character":4,"targetString":"title"},{"text":"(parameter) v: number","docs":"","start":258,"length":1,"line":9,"character":17,"targetString":"v"},{"text":"(property) tabStyle: {\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":267,"length":8,"line":10,"character":4,"targetString":"tabStyle"},{"text":"(property) alignItems: string","docs":"","start":279,"length":10,"line":10,"character":16,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":301,"length":14,"line":10,"character":38,"targetString":"justifyContent"},{"text":"(property) textStyle: {\n    fontSize: number;\n}","docs":"","start":333,"length":9,"line":11,"character":4,"targetString":"textStyle"},{"text":"(property) fontSize: number","docs":"","start":346,"length":8,"line":11,"character":17,"targetString":"fontSize"},{"text":"(alias) class TabBar\nimport TabBar","docs":"","start":373,"length":6,"line":15,"character":1,"targetString":"TabBar"},{"text":"(JSX attribute) type?: string | undefined","docs":"","start":382,"length":4,"line":16,"character":2,"targetString":"type"},{"text":"(JSX attribute) tabs: TabBarArr[]","docs":"","start":397,"length":4,"line":17,"character":2,"targetString":"tabs"},{"text":"const tabRadios: {\n    key: string;\n    title: string;\n    tabStyle: {\n        alignItems: string;\n        justifyContent: string;\n    };\n    textStyle: {\n        fontSize: number;\n    };\n}[]","docs":"","start":403,"length":9,"line":17,"character":8,"targetString":"tabRadios"},{"text":"(JSX attribute) activeKey?: string | number | undefined","docs":"","start":416,"length":9,"line":18,"character":2,"targetString":"activeKey"},{"text":"const tabRadio: string","docs":"","start":427,"length":8,"line":18,"character":13,"targetString":"tabRadio"},{"text":"(JSX attribute) onChange?: ((index: string) => void) | undefined","docs":"","start":439,"length":8,"line":19,"character":2,"targetString":"onChange"},{"text":"(parameter) value: string","docs":"","start":449,"length":5,"line":19,"character":12,"targetString":"value"},{"text":"const setTabRadio: (value: React.SetStateAction<string>) => void","docs":"","start":458,"length":11,"line":19,"character":21,"targetString":"setTabRadio"},{"text":"(parameter) value: string","docs":"","start":470,"length":5,"line":19,"character":33,"targetString":"value"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":480,"length":5,"line":20,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":493,"length":9,"line":21,"character":4,"targetString":"marginTop"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":512,"length":6,"line":22,"character":4,"targetString":"height"},{"text":"const cx: (d: number) => number","docs":"","start":520,"length":2,"line":22,"character":12,"targetString":"cx"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":532,"length":12,"line":23,"character":4,"targetString":"borderRadius"},{"text":"const cx: (d: number) => number","docs":"","start":546,"length":2,"line":23,"character":18,"targetString":"cx"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":558,"length":15,"line":24,"character":4,"targetString":"backgroundColor"},{"text":"(JSX attribute) tabActiveTextStyle?: StyleProp<TextStyle>","docs":"","start":593,"length":18,"line":26,"character":2,"targetString":"tabActiveTextStyle"},{"text":"(property) TextStyle.color?: ColorValue | undefined","docs":"","start":619,"length":5,"line":27,"character":4,"targetString":"color"}],[{"text":"(alias) class TabBar\nimport TabBar","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TabBar"},{"text":"const tabRadioCircle: string","docs":"","start":48,"length":14,"line":2,"character":7,"targetString":"tabRadioCircle"},{"text":"const setTabRadioCircle: React.Dispatch<React.SetStateAction<string>>","docs":"","start":64,"length":17,"line":2,"character":23,"targetString":"setTabRadioCircle"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":85,"length":5,"line":2,"character":44,"targetString":"React"},{"text":"function React.useState<string>(initialState: string | (() => string)): [string, React.Dispatch<React.SetStateAction<string>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":91,"length":8,"line":2,"character":50,"targetString":"useState"},{"text":"const tabRadiosCircle: {\n    key: string;\n    title: string;\n    activeTextStyle: {\n        color: string;\n    };\n}[]","docs":"","start":112,"length":15,"line":3,"character":6,"targetString":"tabRadiosCircle"},{"text":"var Array: ArrayConstructor","docs":"","start":130,"length":5,"line":3,"character":24,"targetString":"Array"},{"text":"(method) ArrayConstructor.from<any, number>(iterable: Iterable<any> | ArrayLike<any>, mapfn: (v: any, k: number) => number, thisArg?: any): number[] (+3 overloads)","docs":"Creates an array from an iterable object.","start":136,"length":4,"line":3,"character":30,"targetString":"from"},{"text":"var Array: ArrayConstructor\n(arrayLength?: number | undefined) => any[] (+2 overloads)","docs":"","start":141,"length":5,"line":3,"character":35,"targetString":"Array"},{"text":"(parameter) v: any","docs":"","start":152,"length":1,"line":3,"character":46,"targetString":"v"},{"text":"(parameter) k: number","docs":"","start":155,"length":1,"line":3,"character":49,"targetString":"k"},{"text":"(parameter) k: number","docs":"","start":161,"length":1,"line":3,"character":55,"targetString":"k"},{"text":"(method) Array<number>.map<{\n    key: string;\n    title: string;\n    activeTextStyle: {\n        color: string;\n    };\n}>(callbackfn: (value: number, index: number, array: number[]) => {\n    key: string;\n    title: string;\n    activeTextStyle: {\n        color: string;\n    };\n}, thisArg?: any): {\n    ...;\n}[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":168,"length":3,"line":3,"character":62,"targetString":"map"},{"text":"(parameter) v: number","docs":"","start":172,"length":1,"line":3,"character":66,"targetString":"v"},{"text":"(property) key: string","docs":"","start":194,"length":3,"line":5,"character":4,"targetString":"key"},{"text":"(parameter) v: number","docs":"","start":202,"length":1,"line":5,"character":12,"targetString":"v"},{"text":"(property) title: string","docs":"","start":211,"length":5,"line":6,"character":4,"targetString":"title"},{"text":"(parameter) v: number","docs":"","start":224,"length":1,"line":6,"character":17,"targetString":"v"},{"text":"(property) activeTextStyle: {\n    color: string;\n}","docs":"","start":233,"length":15,"line":7,"character":4,"targetString":"activeTextStyle"},{"text":"(property) color: string","docs":"","start":252,"length":5,"line":7,"character":23,"targetString":"color"},{"text":"(alias) class TabBar\nimport TabBar","docs":"","start":280,"length":6,"line":11,"character":1,"targetString":"TabBar"},{"text":"(JSX attribute) type?: string | undefined","docs":"","start":289,"length":4,"line":12,"character":2,"targetString":"type"},{"text":"(JSX attribute) tabs: TabBarArr[]","docs":"","start":310,"length":4,"line":13,"character":2,"targetString":"tabs"},{"text":"const tabRadiosCircle: {\n    key: string;\n    title: string;\n    activeTextStyle: {\n        color: string;\n    };\n}[]","docs":"","start":316,"length":15,"line":13,"character":8,"targetString":"tabRadiosCircle"},{"text":"(JSX attribute) activeKey?: string | number | undefined","docs":"","start":335,"length":9,"line":14,"character":2,"targetString":"activeKey"},{"text":"const tabRadioCircle: string","docs":"","start":346,"length":14,"line":14,"character":13,"targetString":"tabRadioCircle"},{"text":"(JSX attribute) onChange?: ((index: string) => void) | undefined","docs":"","start":364,"length":8,"line":15,"character":2,"targetString":"onChange"},{"text":"(parameter) value: string","docs":"","start":374,"length":5,"line":15,"character":12,"targetString":"value"},{"text":"const setTabRadioCircle: (value: React.SetStateAction<string>) => void","docs":"","start":383,"length":17,"line":15,"character":21,"targetString":"setTabRadioCircle"},{"text":"(parameter) value: string","docs":"","start":401,"length":5,"line":15,"character":39,"targetString":"value"},{"text":"(JSX attribute) activeColor?: string | undefined","docs":"","start":411,"length":11,"line":16,"character":2,"targetString":"activeColor"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":435,"length":5,"line":17,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":444,"length":9,"line":17,"character":11,"targetString":"marginTop"}]],"/navigation/tabs":[[{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tabs"},{"text":"const state: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>(initialState: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n} | (() => {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n})): [...] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) activeKey1: string","docs":"","start":84,"length":10,"line":3,"character":2,"targetString":"activeKey1"},{"text":"(property) d1: {\n    value: string;\n    label: string;\n}[]","docs":"","start":103,"length":2,"line":4,"character":2,"targetString":"d1"},{"text":"(property) value: string","docs":"","start":115,"length":5,"line":5,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":127,"length":5,"line":5,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":154,"length":5,"line":6,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":166,"length":5,"line":6,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":199,"length":5,"line":7,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":211,"length":5,"line":7,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":238,"length":5,"line":8,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":250,"length":5,"line":8,"character":18,"targetString":"label"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":290,"length":4,"line":12,"character":1,"targetString":"Tabs"},{"text":"(JSX attribute) activeKey?: string | number | undefined","docs":"","start":297,"length":9,"line":13,"character":2,"targetString":"activeKey"},{"text":"const state: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":308,"length":5,"line":13,"character":13,"targetString":"state"},{"text":"(property) activeKey1: string","docs":"","start":314,"length":10,"line":13,"character":19,"targetString":"activeKey1"},{"text":"(JSX attribute) dataSource: TabDataSource[]","docs":"","start":328,"length":10,"line":14,"character":2,"targetString":"dataSource"},{"text":"const state: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":340,"length":5,"line":14,"character":14,"targetString":"state"},{"text":"(property) d1: {\n    value: string;\n    label: string;\n}[]","docs":"","start":346,"length":2,"line":14,"character":20,"targetString":"d1"},{"text":"(JSX attribute) onChange?: ((tab: TabDataSource, idx: number) => void) | undefined","docs":"","start":352,"length":8,"line":15,"character":2,"targetString":"onChange"},{"text":"(parameter) tab: TabDataSource","docs":"","start":362,"length":3,"line":15,"character":12,"targetString":"tab"},{"text":"const setState: (value: React.SetStateAction<{\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>) => void","docs":"","start":369,"length":8,"line":15,"character":19,"targetString":"setState"},{"text":"const state: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":383,"length":5,"line":15,"character":33,"targetString":"state"},{"text":"(property) activeKey1: string","docs":"","start":390,"length":10,"line":15,"character":40,"targetString":"activeKey1"},{"text":"(parameter) tab: TabDataSource","docs":"","start":402,"length":3,"line":15,"character":52,"targetString":"tab"},{"text":"(property) TabDataSource.value: string","docs":"","start":406,"length":5,"line":15,"character":56,"targetString":"value"}],[{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tabs"},{"text":"const state: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}>(initialState: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n} | (() => {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n})): [...] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) activeKey2: string","docs":"","start":84,"length":10,"line":3,"character":2,"targetString":"activeKey2"},{"text":"(property) d2: {\n    value: string;\n    label: string;\n}[]","docs":"","start":103,"length":2,"line":4,"character":2,"targetString":"d2"},{"text":"(property) value: string","docs":"","start":115,"length":5,"line":5,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":127,"length":5,"line":5,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":150,"length":5,"line":6,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":162,"length":5,"line":6,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":184,"length":5,"line":7,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":196,"length":5,"line":7,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":227,"length":5,"line":8,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":239,"length":5,"line":8,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":262,"length":5,"line":9,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":274,"length":5,"line":9,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":302,"length":5,"line":10,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":314,"length":5,"line":10,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":337,"length":5,"line":11,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":349,"length":5,"line":11,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":384,"length":5,"line":12,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":396,"length":5,"line":12,"character":18,"targetString":"label"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":428,"length":4,"line":16,"character":1,"targetString":"Tabs"},{"text":"(JSX attribute) activeKey?: string | number | undefined","docs":"","start":435,"length":9,"line":17,"character":2,"targetString":"activeKey"},{"text":"const state: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":446,"length":5,"line":17,"character":13,"targetString":"state"},{"text":"(property) activeKey2: string","docs":"","start":452,"length":10,"line":17,"character":19,"targetString":"activeKey2"},{"text":"(JSX attribute) dataSource: TabDataSource[]","docs":"","start":466,"length":10,"line":18,"character":2,"targetString":"dataSource"},{"text":"const state: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":478,"length":5,"line":18,"character":14,"targetString":"state"},{"text":"(property) d2: {\n    value: string;\n    label: string;\n}[]","docs":"","start":484,"length":2,"line":18,"character":20,"targetString":"d2"},{"text":"(JSX attribute) onChange?: ((tab: TabDataSource, idx: number) => void) | undefined","docs":"","start":490,"length":8,"line":19,"character":2,"targetString":"onChange"},{"text":"(parameter) tab: TabDataSource","docs":"","start":500,"length":3,"line":19,"character":12,"targetString":"tab"},{"text":"const setState: (value: React.SetStateAction<{\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}>) => void","docs":"","start":507,"length":8,"line":19,"character":19,"targetString":"setState"},{"text":"const state: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":521,"length":5,"line":19,"character":33,"targetString":"state"},{"text":"(property) activeKey2: string","docs":"","start":528,"length":10,"line":19,"character":40,"targetString":"activeKey2"},{"text":"(parameter) tab: TabDataSource","docs":"","start":540,"length":3,"line":19,"character":52,"targetString":"tab"},{"text":"(property) TabDataSource.value: string","docs":"","start":544,"length":5,"line":19,"character":56,"targetString":"value"}],[{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tabs"},{"text":"const state: {\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}>(initialState: {\n    d2: {\n        value: string;\n        label: string;\n    }[];\n} | (() => {\n    d2: {\n        value: string;\n        label: string;\n    }[];\n})): [{\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}, React.Dispatch<React.SetStateAction<{\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) d2: {\n    value: string;\n    label: string;\n}[]","docs":"","start":84,"length":2,"line":3,"character":2,"targetString":"d2"},{"text":"(property) value: string","docs":"","start":96,"length":5,"line":4,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":108,"length":5,"line":4,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":131,"length":5,"line":5,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":143,"length":5,"line":5,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":165,"length":5,"line":6,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":177,"length":5,"line":6,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":208,"length":5,"line":7,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":220,"length":5,"line":7,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":243,"length":5,"line":8,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":255,"length":5,"line":8,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":283,"length":5,"line":9,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":295,"length":5,"line":9,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":318,"length":5,"line":10,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":330,"length":5,"line":10,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":365,"length":5,"line":11,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":377,"length":5,"line":11,"character":18,"targetString":"label"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":408,"length":4,"line":15,"character":1,"targetString":"Tabs"},{"text":"(JSX attribute) dataSource: TabDataSource[]","docs":"","start":413,"length":10,"line":15,"character":6,"targetString":"dataSource"},{"text":"const state: {\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":425,"length":5,"line":15,"character":18,"targetString":"state"},{"text":"(property) d2: {\n    value: string;\n    label: string;\n}[]","docs":"","start":431,"length":2,"line":15,"character":24,"targetString":"d2"}],[{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tabs"},{"text":"const state: {\n    activeIndex: number;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    activeIndex: number;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    activeIndex: number;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>(initialState: {\n    activeIndex: number;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n} | (() => {\n    activeIndex: number;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n})): [...] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) activeIndex: number","docs":"","start":84,"length":11,"line":3,"character":2,"targetString":"activeIndex"},{"text":"(property) d1: {\n    value: string;\n    label: string;\n}[]","docs":"","start":102,"length":2,"line":4,"character":2,"targetString":"d1"},{"text":"(property) value: string","docs":"","start":114,"length":5,"line":5,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":126,"length":5,"line":5,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":153,"length":5,"line":6,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":165,"length":5,"line":6,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":198,"length":5,"line":7,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":210,"length":5,"line":7,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":237,"length":5,"line":8,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":249,"length":5,"line":8,"character":18,"targetString":"label"},{"text":"const handleRelease: (gestureState: any, index: any) => void","docs":"","start":293,"length":13,"line":11,"character":6,"targetString":"handleRelease"},{"text":"(parameter) gestureState: any","docs":"","start":310,"length":12,"line":11,"character":23,"targetString":"gestureState"},{"text":"(parameter) index: any","docs":"","start":324,"length":5,"line":11,"character":37,"targetString":"index"},{"text":"const setState: (value: React.SetStateAction<{\n    activeIndex: number;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>) => void","docs":"","start":336,"length":8,"line":12,"character":2,"targetString":"setState"},{"text":"const state: {\n    activeIndex: number;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":350,"length":5,"line":12,"character":16,"targetString":"state"},{"text":"(property) activeIndex: number","docs":"","start":357,"length":11,"line":12,"character":23,"targetString":"activeIndex"},{"text":"(parameter) index: any","docs":"","start":370,"length":5,"line":12,"character":36,"targetString":"index"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":382,"length":4,"line":14,"character":1,"targetString":"Tabs"},{"text":"(property) Tabs.TabContent: React.ElementType<TabContentProps>","docs":"","start":387,"length":10,"line":14,"character":6,"targetString":"TabContent"},{"text":"(JSX attribute) TabContentProps.preload?: boolean | undefined","docs":"","start":400,"length":7,"line":15,"character":2,"targetString":"preload"},{"text":"(JSX attribute) TabContentProps.activeIndex: number","docs":"","start":418,"length":11,"line":16,"character":2,"targetString":"activeIndex"},{"text":"const state: {\n    activeIndex: number;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":431,"length":5,"line":16,"character":15,"targetString":"state"},{"text":"(property) activeIndex: number","docs":"","start":437,"length":11,"line":16,"character":21,"targetString":"activeIndex"},{"text":"(JSX attribute) TabContentProps.onRelease?: ((gestureState: {}, index: number, percent: number) => void) | undefined","docs":"","start":452,"length":9,"line":17,"character":2,"targetString":"onRelease"},{"text":"const handleRelease: (gestureState: any, index: any) => void","docs":"","start":463,"length":13,"line":17,"character":13,"targetString":"handleRelease"},{"text":"const state: {\n    activeIndex: number;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":483,"length":5,"line":19,"character":3,"targetString":"state"},{"text":"(property) d1: {\n    value: string;\n    label: string;\n}[]","docs":"","start":489,"length":2,"line":19,"character":9,"targetString":"d1"},{"text":"(method) Array<{ value: string; label: string; }>.map<JSX.Element>(callbackfn: (value: {\n    value: string;\n    label: string;\n}, index: number, array: {\n    value: string;\n    label: string;\n}[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":492,"length":3,"line":19,"character":12,"targetString":"map"},{"text":"(parameter) data: {\n    value: string;\n    label: string;\n}","docs":"","start":497,"length":4,"line":19,"character":17,"targetString":"data"},{"text":"(parameter) idx: number","docs":"","start":503,"length":3,"line":19,"character":23,"targetString":"idx"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":524,"length":3,"line":20,"character":11,"targetString":"key"},{"text":"(parameter) idx: number","docs":"","start":529,"length":3,"line":20,"character":16,"targetString":"idx"},{"text":"(JSX attribute) title: string","docs":"","start":534,"length":5,"line":20,"character":21,"targetString":"title"},{"text":"(parameter) idx: number","docs":"","start":548,"length":3,"line":20,"character":35,"targetString":"idx"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":571,"length":4,"line":22,"character":2,"targetString":"Tabs"},{"text":"(property) Tabs.TabContent: React.ElementType<TabContentProps>","docs":"","start":576,"length":10,"line":22,"character":7,"targetString":"TabContent"}],[{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tabs"},{"text":"const state: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>(initialState: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n} | (() => {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n})): [...] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) activeKey1: string","docs":"","start":84,"length":10,"line":3,"character":2,"targetString":"activeKey1"},{"text":"(property) d1: {\n    value: string;\n    label: string;\n}[]","docs":"","start":103,"length":2,"line":4,"character":2,"targetString":"d1"},{"text":"(property) value: string","docs":"","start":115,"length":5,"line":5,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":127,"length":5,"line":5,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":154,"length":5,"line":6,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":166,"length":5,"line":6,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":199,"length":5,"line":7,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":211,"length":5,"line":7,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":238,"length":5,"line":8,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":250,"length":5,"line":8,"character":18,"targetString":"label"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":290,"length":4,"line":12,"character":1,"targetString":"Tabs"},{"text":"(JSX attribute) activeKey?: string | number | undefined","docs":"","start":297,"length":9,"line":13,"character":2,"targetString":"activeKey"},{"text":"const state: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":308,"length":5,"line":13,"character":13,"targetString":"state"},{"text":"(property) activeKey1: string","docs":"","start":314,"length":10,"line":13,"character":19,"targetString":"activeKey1"},{"text":"(JSX attribute) dataSource: TabDataSource[]","docs":"","start":328,"length":10,"line":14,"character":2,"targetString":"dataSource"},{"text":"const state: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":340,"length":5,"line":14,"character":14,"targetString":"state"},{"text":"(property) d1: {\n    value: string;\n    label: string;\n}[]","docs":"","start":346,"length":2,"line":14,"character":20,"targetString":"d1"},{"text":"(JSX attribute) swipeable?: boolean | undefined","docs":"","start":352,"length":9,"line":15,"character":2,"targetString":"swipeable"},{"text":"(JSX attribute) onChange?: ((tab: TabDataSource, idx: number) => void) | undefined","docs":"","start":371,"length":8,"line":16,"character":2,"targetString":"onChange"},{"text":"(parameter) tab: TabDataSource","docs":"","start":381,"length":3,"line":16,"character":12,"targetString":"tab"},{"text":"const setState: (value: React.SetStateAction<{\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>) => void","docs":"","start":388,"length":8,"line":16,"character":19,"targetString":"setState"},{"text":"const state: {\n    activeKey1: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":402,"length":5,"line":16,"character":33,"targetString":"state"},{"text":"(property) activeKey1: string","docs":"","start":409,"length":10,"line":16,"character":40,"targetString":"activeKey1"},{"text":"(parameter) tab: TabDataSource","docs":"","start":421,"length":3,"line":16,"character":52,"targetString":"tab"},{"text":"(property) TabDataSource.value: string","docs":"","start":425,"length":5,"line":16,"character":56,"targetString":"value"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":440,"length":4,"line":18,"character":3,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":445,"length":8,"line":18,"character":8,"targetString":"TabPanel"},{"text":"var Array: ArrayConstructor\nnew (arrayLength?: number | undefined) => any[] (+2 overloads)","docs":"","start":464,"length":5,"line":19,"character":9,"targetString":"Array"},{"text":"(method) Array<any>.fill(value: any, start?: number | undefined, end?: number | undefined): any[]","docs":"Returns the this object after filling the section identified by start and end with value","start":473,"length":4,"line":19,"character":18,"targetString":"fill"},{"text":"(method) Array<any>.map<JSX.Element>(callbackfn: (value: any, index: number, array: any[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":481,"length":3,"line":19,"character":26,"targetString":"map"},{"text":"(parameter) _: any","docs":"","start":486,"length":1,"line":19,"character":31,"targetString":"_"},{"text":"(parameter) n: number","docs":"","start":489,"length":1,"line":19,"character":34,"targetString":"n"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":515,"length":3,"line":20,"character":18,"targetString":"key"},{"text":"(parameter) n: number","docs":"","start":520,"length":1,"line":20,"character":23,"targetString":"n"},{"text":"(JSX attribute) title: string","docs":"","start":523,"length":5,"line":20,"character":26,"targetString":"title"},{"text":"(parameter) n: number","docs":"","start":542,"length":1,"line":20,"character":45,"targetString":"n"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":562,"length":4,"line":22,"character":4,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":567,"length":8,"line":22,"character":9,"targetString":"TabPanel"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":580,"length":4,"line":23,"character":3,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":585,"length":8,"line":23,"character":8,"targetString":"TabPanel"},{"text":"var Array: ArrayConstructor\nnew (arrayLength?: number | undefined) => any[] (+2 overloads)","docs":"","start":604,"length":5,"line":24,"character":9,"targetString":"Array"},{"text":"(method) Array<any>.fill(value: any, start?: number | undefined, end?: number | undefined): any[]","docs":"Returns the this object after filling the section identified by start and end with value","start":613,"length":4,"line":24,"character":18,"targetString":"fill"},{"text":"(method) Array<any>.map<JSX.Element>(callbackfn: (value: any, index: number, array: any[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":621,"length":3,"line":24,"character":26,"targetString":"map"},{"text":"(parameter) _: any","docs":"","start":626,"length":1,"line":24,"character":31,"targetString":"_"},{"text":"(parameter) n: number","docs":"","start":629,"length":1,"line":24,"character":34,"targetString":"n"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":655,"length":3,"line":25,"character":18,"targetString":"key"},{"text":"(parameter) n: number","docs":"","start":660,"length":1,"line":25,"character":23,"targetString":"n"},{"text":"(JSX attribute) title: string","docs":"","start":663,"length":5,"line":25,"character":26,"targetString":"title"},{"text":"(parameter) n: number","docs":"","start":678,"length":1,"line":25,"character":41,"targetString":"n"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":698,"length":4,"line":27,"character":4,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":703,"length":8,"line":27,"character":9,"targetString":"TabPanel"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":716,"length":4,"line":28,"character":3,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":721,"length":8,"line":28,"character":8,"targetString":"TabPanel"},{"text":"var Array: ArrayConstructor\nnew (arrayLength?: number | undefined) => any[] (+2 overloads)","docs":"","start":740,"length":5,"line":29,"character":9,"targetString":"Array"},{"text":"(method) Array<any>.fill(value: any, start?: number | undefined, end?: number | undefined): any[]","docs":"Returns the this object after filling the section identified by start and end with value","start":749,"length":4,"line":29,"character":18,"targetString":"fill"},{"text":"(method) Array<any>.map<JSX.Element>(callbackfn: (value: any, index: number, array: any[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":757,"length":3,"line":29,"character":26,"targetString":"map"},{"text":"(parameter) _: any","docs":"","start":762,"length":1,"line":29,"character":31,"targetString":"_"},{"text":"(parameter) n: number","docs":"","start":765,"length":1,"line":29,"character":34,"targetString":"n"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":791,"length":3,"line":30,"character":18,"targetString":"key"},{"text":"(parameter) n: number","docs":"","start":796,"length":1,"line":30,"character":23,"targetString":"n"},{"text":"(JSX attribute) title: string","docs":"","start":799,"length":5,"line":30,"character":26,"targetString":"title"},{"text":"(parameter) n: number","docs":"","start":825,"length":1,"line":30,"character":52,"targetString":"n"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":845,"length":4,"line":32,"character":4,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":850,"length":8,"line":32,"character":9,"targetString":"TabPanel"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":863,"length":4,"line":33,"character":3,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":868,"length":8,"line":33,"character":8,"targetString":"TabPanel"},{"text":"var Array: ArrayConstructor\nnew (arrayLength?: number | undefined) => any[] (+2 overloads)","docs":"","start":887,"length":5,"line":34,"character":9,"targetString":"Array"},{"text":"(method) Array<any>.fill(value: any, start?: number | undefined, end?: number | undefined): any[]","docs":"Returns the this object after filling the section identified by start and end with value","start":896,"length":4,"line":34,"character":18,"targetString":"fill"},{"text":"(method) Array<any>.map<JSX.Element>(callbackfn: (value: any, index: number, array: any[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":904,"length":3,"line":34,"character":26,"targetString":"map"},{"text":"(parameter) _: any","docs":"","start":909,"length":1,"line":34,"character":31,"targetString":"_"},{"text":"(parameter) n: number","docs":"","start":912,"length":1,"line":34,"character":34,"targetString":"n"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":938,"length":3,"line":35,"character":18,"targetString":"key"},{"text":"(parameter) n: number","docs":"","start":943,"length":1,"line":35,"character":23,"targetString":"n"},{"text":"(JSX attribute) title: string","docs":"","start":946,"length":5,"line":35,"character":26,"targetString":"title"},{"text":"(parameter) n: number","docs":"","start":964,"length":1,"line":35,"character":44,"targetString":"n"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":984,"length":4,"line":37,"character":4,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":989,"length":8,"line":37,"character":9,"targetString":"TabPanel"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":1001,"length":4,"line":38,"character":2,"targetString":"Tabs"}],[{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tabs"},{"text":"const state: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}>(initialState: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n} | (() => {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n})): [...] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) activeKey2: string","docs":"","start":84,"length":10,"line":3,"character":2,"targetString":"activeKey2"},{"text":"(property) d2: {\n    value: string;\n    label: string;\n}[]","docs":"","start":103,"length":2,"line":4,"character":2,"targetString":"d2"},{"text":"(property) value: string","docs":"","start":115,"length":5,"line":5,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":127,"length":5,"line":5,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":150,"length":5,"line":6,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":162,"length":5,"line":6,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":184,"length":5,"line":7,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":196,"length":5,"line":7,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":227,"length":5,"line":8,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":239,"length":5,"line":8,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":262,"length":5,"line":9,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":274,"length":5,"line":9,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":302,"length":5,"line":10,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":314,"length":5,"line":10,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":337,"length":5,"line":11,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":349,"length":5,"line":11,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":384,"length":5,"line":12,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":396,"length":5,"line":12,"character":18,"targetString":"label"},{"text":"const Panel: ({ title, largeData, ...rest }: {\n    [x: string]: any;\n    title: any;\n    largeData: any;\n}) => JSX.Element","docs":"","start":432,"length":5,"line":15,"character":6,"targetString":"Panel"},{"text":"var title: any","docs":"","start":443,"length":5,"line":15,"character":17,"targetString":"title"},{"text":"var largeData: any","docs":"","start":450,"length":9,"line":15,"character":24,"targetString":"largeData"},{"text":"var rest: {\n    [x: string]: any;\n}","docs":"","start":464,"length":4,"line":15,"character":38,"targetString":"rest"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":493,"length":4,"line":17,"character":5,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":498,"length":8,"line":17,"character":10,"targetString":"TabPanel"},{"text":"var rest: {\n    [x: string]: any;\n}","docs":"","start":511,"length":4,"line":17,"character":23,"targetString":"rest"},{"text":"var largeData: any","docs":"","start":525,"length":9,"line":18,"character":7,"targetString":"largeData"},{"text":"var Array: ArrayConstructor\nnew (arrayLength?: number | undefined) => any[] (+2 overloads)","docs":"","start":551,"length":5,"line":19,"character":12,"targetString":"Array"},{"text":"(method) Array<any>.fill(value: any, start?: number | undefined, end?: number | undefined): any[]","docs":"Returns the this object after filling the section identified by start and end with value","start":572,"length":4,"line":20,"character":11,"targetString":"fill"},{"text":"(method) Array<any>.map<JSX.Element>(callbackfn: (value: any, index: number, array: any[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":591,"length":3,"line":21,"character":11,"targetString":"map"},{"text":"(parameter) _: any","docs":"","start":596,"length":1,"line":21,"character":16,"targetString":"_"},{"text":"(parameter) idx: number","docs":"","start":599,"length":3,"line":21,"character":19,"targetString":"idx"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":619,"length":3,"line":21,"character":39,"targetString":"key"},{"text":"(parameter) idx: number","docs":"","start":624,"length":3,"line":21,"character":44,"targetString":"idx"},{"text":"(JSX attribute) title: string","docs":"","start":629,"length":5,"line":21,"character":49,"targetString":"title"},{"text":"var title: any","docs":"","start":639,"length":5,"line":21,"character":59,"targetString":"title"},{"text":"(parameter) idx: number","docs":"","start":648,"length":3,"line":21,"character":68,"targetString":"idx"},{"text":"(JSX attribute) title: any","docs":"","start":691,"length":5,"line":23,"character":20,"targetString":"title"},{"text":"var title: any","docs":"","start":698,"length":5,"line":23,"character":27,"targetString":"title"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":723,"length":4,"line":25,"character":6,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":728,"length":8,"line":25,"character":11,"targetString":"TabPanel"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":748,"length":4,"line":29,"character":1,"targetString":"Tabs"},{"text":"(JSX attribute) activeKey?: string | number | undefined","docs":"","start":755,"length":9,"line":30,"character":2,"targetString":"activeKey"},{"text":"const state: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":766,"length":5,"line":30,"character":13,"targetString":"state"},{"text":"(property) activeKey2: string","docs":"","start":772,"length":10,"line":30,"character":19,"targetString":"activeKey2"},{"text":"(JSX attribute) dataSource: TabDataSource[]","docs":"","start":786,"length":10,"line":31,"character":2,"targetString":"dataSource"},{"text":"const state: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":798,"length":5,"line":31,"character":14,"targetString":"state"},{"text":"(property) d2: {\n    value: string;\n    label: string;\n}[]","docs":"","start":804,"length":2,"line":31,"character":20,"targetString":"d2"},{"text":"(JSX attribute) onChange?: ((tab: TabDataSource, idx: number) => void) | undefined","docs":"","start":810,"length":8,"line":32,"character":2,"targetString":"onChange"},{"text":"(parameter) tab: TabDataSource","docs":"","start":820,"length":3,"line":32,"character":12,"targetString":"tab"},{"text":"const setState: (value: React.SetStateAction<{\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}>) => void","docs":"","start":827,"length":8,"line":32,"character":19,"targetString":"setState"},{"text":"const state: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":841,"length":5,"line":32,"character":33,"targetString":"state"},{"text":"(property) activeKey2: string","docs":"","start":848,"length":10,"line":32,"character":40,"targetString":"activeKey2"},{"text":"(parameter) tab: TabDataSource","docs":"","start":860,"length":3,"line":32,"character":52,"targetString":"tab"},{"text":"(property) TabDataSource.value: string","docs":"","start":864,"length":5,"line":32,"character":56,"targetString":"value"},{"text":"const state: {\n    activeKey2: string;\n    d2: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":879,"length":5,"line":34,"character":3,"targetString":"state"},{"text":"(property) d2: {\n    value: string;\n    label: string;\n}[]","docs":"","start":885,"length":2,"line":34,"character":9,"targetString":"d2"},{"text":"(method) Array<{ value: string; label: string; }>.map<JSX.Element>(callbackfn: (value: {\n    value: string;\n    label: string;\n}, index: number, array: {\n    value: string;\n    label: string;\n}[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":888,"length":3,"line":34,"character":12,"targetString":"map"},{"text":"(parameter) data: {\n    value: string;\n    label: string;\n}","docs":"","start":893,"length":4,"line":34,"character":17,"targetString":"data"},{"text":"(parameter) idx: number","docs":"","start":899,"length":3,"line":34,"character":23,"targetString":"idx"},{"text":"const Panel: ({ title, largeData, ...rest }: {\n    [x: string]: any;\n    title: any;\n    largeData: any;\n}) => JSX.Element","docs":"","start":914,"length":5,"line":35,"character":5,"targetString":"Panel"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":920,"length":3,"line":35,"character":11,"targetString":"key"},{"text":"(parameter) idx: number","docs":"","start":925,"length":3,"line":35,"character":16,"targetString":"idx"},{"text":"(JSX attribute) title: any","docs":"","start":930,"length":5,"line":35,"character":21,"targetString":"title"},{"text":"(parameter) data: {\n    value: string;\n    label: string;\n}","docs":"","start":937,"length":4,"line":35,"character":28,"targetString":"data"},{"text":"(property) label: string","docs":"","start":942,"length":5,"line":35,"character":33,"targetString":"label"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":960,"length":4,"line":37,"character":2,"targetString":"Tabs"}],[{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":9,"length":4,"line":0,"character":9,"targetString":"Tabs"},{"text":"const state: {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":46,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const setState: React.Dispatch<React.SetStateAction<{\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>>","docs":"","start":53,"length":8,"line":2,"character":14,"targetString":"setState"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":65,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<{\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>(initialState: {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n} | (() => {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        ...;\n    }[];\n})): [...] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":71,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(property) activeKey1: string","docs":"","start":84,"length":10,"line":3,"character":2,"targetString":"activeKey1"},{"text":"(property) activeKey2: string","docs":"","start":103,"length":10,"line":4,"character":2,"targetString":"activeKey2"},{"text":"(property) d1: {\n    value: string;\n    label: string;\n}[]","docs":"","start":122,"length":2,"line":5,"character":2,"targetString":"d1"},{"text":"(property) value: string","docs":"","start":134,"length":5,"line":6,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":146,"length":5,"line":6,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":173,"length":5,"line":7,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":185,"length":5,"line":7,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":218,"length":5,"line":8,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":230,"length":5,"line":8,"character":18,"targetString":"label"},{"text":"(property) value: string","docs":"","start":257,"length":5,"line":9,"character":6,"targetString":"value"},{"text":"(property) label: string","docs":"","start":269,"length":5,"line":9,"character":18,"targetString":"label"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":309,"length":4,"line":13,"character":1,"targetString":"Tabs"},{"text":"(JSX attribute) tabPosition?: \"bottom\" | \"top\" | undefined","docs":"","start":316,"length":11,"line":14,"character":2,"targetString":"tabPosition"},{"text":"(JSX attribute) underlineStyle?: StyleProp<ViewStyle>","docs":"","start":339,"length":14,"line":15,"character":2,"targetString":"underlineStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":357,"length":15,"line":15,"character":20,"targetString":"backgroundColor"},{"text":"(JSX attribute) activeKey?: string | number | undefined","docs":"","start":393,"length":9,"line":16,"character":2,"targetString":"activeKey"},{"text":"const state: {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":404,"length":5,"line":16,"character":13,"targetString":"state"},{"text":"(property) activeKey1: string","docs":"","start":410,"length":10,"line":16,"character":19,"targetString":"activeKey1"},{"text":"(JSX attribute) dataSource: TabDataSource[]","docs":"","start":424,"length":10,"line":17,"character":2,"targetString":"dataSource"},{"text":"const state: {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":436,"length":5,"line":17,"character":14,"targetString":"state"},{"text":"(property) d1: {\n    value: string;\n    label: string;\n}[]","docs":"","start":442,"length":2,"line":17,"character":20,"targetString":"d1"},{"text":"(JSX attribute) swipeable?: boolean | undefined","docs":"","start":448,"length":9,"line":18,"character":2,"targetString":"swipeable"},{"text":"(JSX attribute) onChange?: ((tab: TabDataSource, idx: number) => void) | undefined","docs":"","start":468,"length":8,"line":19,"character":2,"targetString":"onChange"},{"text":"(parameter) tab: TabDataSource","docs":"","start":478,"length":3,"line":19,"character":12,"targetString":"tab"},{"text":"const setState: (value: React.SetStateAction<{\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>) => void","docs":"","start":485,"length":8,"line":19,"character":19,"targetString":"setState"},{"text":"const state: {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":499,"length":5,"line":19,"character":33,"targetString":"state"},{"text":"(property) activeKey1: string","docs":"","start":506,"length":10,"line":19,"character":40,"targetString":"activeKey1"},{"text":"(parameter) tab: TabDataSource","docs":"","start":518,"length":3,"line":19,"character":52,"targetString":"tab"},{"text":"(property) TabDataSource.value: string","docs":"","start":522,"length":5,"line":19,"character":56,"targetString":"value"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":537,"length":4,"line":21,"character":3,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":542,"length":8,"line":21,"character":8,"targetString":"TabPanel"},{"text":"(JSX attribute) TabPanelProps.background?: string | undefined","docs":"","start":551,"length":10,"line":21,"character":17,"targetString":"background"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":575,"length":4,"line":22,"character":5,"targetString":"Tabs"},{"text":"(JSX attribute) activeKey?: string | number | undefined","docs":"","start":586,"length":9,"line":23,"character":6,"targetString":"activeKey"},{"text":"const state: {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":597,"length":5,"line":23,"character":17,"targetString":"state"},{"text":"(property) activeKey2: string","docs":"","start":603,"length":10,"line":23,"character":23,"targetString":"activeKey2"},{"text":"(JSX attribute) dataSource: TabDataSource[]","docs":"","start":621,"length":10,"line":24,"character":6,"targetString":"dataSource"},{"text":"const state: {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":633,"length":5,"line":24,"character":18,"targetString":"state"},{"text":"(JSX attribute) onChange?: ((tab: TabDataSource, idx: number) => void) | undefined","docs":"","start":649,"length":8,"line":25,"character":6,"targetString":"onChange"},{"text":"(parameter) tab: TabDataSource","docs":"","start":659,"length":3,"line":25,"character":16,"targetString":"tab"},{"text":"const setState: (value: React.SetStateAction<{\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}>) => void","docs":"","start":666,"length":8,"line":25,"character":23,"targetString":"setState"},{"text":"const state: {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":680,"length":5,"line":25,"character":37,"targetString":"state"},{"text":"(property) activeKey2: string","docs":"","start":687,"length":10,"line":25,"character":44,"targetString":"activeKey2"},{"text":"(parameter) tab: TabDataSource","docs":"","start":699,"length":3,"line":25,"character":56,"targetString":"tab"},{"text":"(property) TabDataSource.value: string","docs":"","start":703,"length":5,"line":25,"character":60,"targetString":"value"},{"text":"const state: {\n    activeKey1: string;\n    activeKey2: string;\n    d1: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":726,"length":5,"line":27,"character":7,"targetString":"state"},{"text":"(parameter) data: any","docs":"","start":740,"length":4,"line":27,"character":21,"targetString":"data"},{"text":"(parameter) idx: any","docs":"","start":746,"length":3,"line":27,"character":27,"targetString":"idx"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":771,"length":3,"line":28,"character":15,"targetString":"key"},{"text":"(parameter) idx: any","docs":"","start":776,"length":3,"line":28,"character":20,"targetString":"idx"},{"text":"(JSX attribute) title: any","docs":"","start":781,"length":5,"line":28,"character":25,"targetString":"title"},{"text":"(parameter) data: any","docs":"","start":788,"length":4,"line":28,"character":32,"targetString":"data"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":819,"length":4,"line":30,"character":6,"targetString":"Tabs"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":829,"length":4,"line":31,"character":4,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":834,"length":8,"line":31,"character":9,"targetString":"TabPanel"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":847,"length":4,"line":32,"character":3,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":852,"length":8,"line":32,"character":8,"targetString":"TabPanel"},{"text":"(JSX attribute) TabPanelProps.background?: string | undefined","docs":"","start":861,"length":10,"line":32,"character":17,"targetString":"background"},{"text":"(JSX attribute) title: string","docs":"","start":896,"length":5,"line":33,"character":16,"targetString":"title"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":926,"length":4,"line":34,"character":4,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":931,"length":8,"line":34,"character":9,"targetString":"TabPanel"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":944,"length":4,"line":35,"character":3,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":949,"length":8,"line":35,"character":8,"targetString":"TabPanel"},{"text":"(JSX attribute) TabPanelProps.background?: string | undefined","docs":"","start":958,"length":10,"line":35,"character":17,"targetString":"background"},{"text":"(JSX attribute) title: string","docs":"","start":993,"length":5,"line":36,"character":16,"targetString":"title"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":1017,"length":4,"line":37,"character":4,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":1022,"length":8,"line":37,"character":9,"targetString":"TabPanel"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":1035,"length":4,"line":38,"character":3,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":1040,"length":8,"line":38,"character":8,"targetString":"TabPanel"},{"text":"(JSX attribute) TabPanelProps.background?: string | undefined","docs":"","start":1049,"length":10,"line":38,"character":17,"targetString":"background"},{"text":"(JSX attribute) title: string","docs":"","start":1084,"length":5,"line":39,"character":16,"targetString":"title"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":1116,"length":4,"line":40,"character":4,"targetString":"Tabs"},{"text":"(property) Tabs.TabPanel: React.ElementType<TabPanelProps>","docs":"","start":1121,"length":8,"line":40,"character":9,"targetString":"TabPanel"},{"text":"(alias) class Tabs\nimport Tabs","docs":"","start":1133,"length":4,"line":41,"character":2,"targetString":"Tabs"}]],"/navigation/top-bar":[[{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TopBar"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":42,"length":6,"line":2,"character":1,"targetString":"TopBar"},{"text":"(property) TopBar.Container: React.ElementType<TopBarContainerProps>","docs":"","start":49,"length":9,"line":2,"character":8,"targetString":"Container"},{"text":"(JSX attribute) TopBarContainerProps.background?: BackgroundProps | undefined","docs":"","start":61,"length":10,"line":3,"character":2,"targetString":"background"},{"text":"(JSX attribute) TopBarContainerProps.style?: StyleProp<ViewStyle>","docs":"","start":81,"length":5,"line":4,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.flex?: number | undefined","docs":"","start":90,"length":4,"line":4,"character":11,"targetString":"flex"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":99,"length":6,"line":4,"character":20,"targetString":"height"},{"text":"(JSX attribute) TopBarContainerProps.contentStyle?: StyleProp<ViewStyle>","docs":"","start":115,"length":12,"line":5,"character":2,"targetString":"contentStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":131,"length":6,"line":5,"character":18,"targetString":"height"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":143,"length":9,"line":5,"character":30,"targetString":"marginTop"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":164,"length":6,"line":7,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Action: React.ElementType<TopBarActionProps>","docs":"","start":171,"length":6,"line":7,"character":10,"targetString":"Action"},{"text":"(JSX attribute) IconFontProps.name?: IconFontName | undefined","docs":"","start":178,"length":4,"line":7,"character":17,"targetString":"name"},{"text":"(JSX attribute) TopBarActionProps.color?: string | undefined","docs":"","start":193,"length":5,"line":7,"character":32,"targetString":"color"},{"text":"(JSX attribute) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":209,"length":7,"line":7,"character":48,"targetString":"onPress"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":248,"length":6,"line":8,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Content: React.ElementType<TopBarContentProps>","docs":"","start":255,"length":7,"line":8,"character":10,"targetString":"Content"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":269,"length":6,"line":9,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Action: React.ElementType<TopBarActionProps>","docs":"","start":276,"length":6,"line":9,"character":10,"targetString":"Action"},{"text":"(JSX attribute) IconFontProps.name?: IconFontName | undefined","docs":"","start":287,"length":4,"line":10,"character":4,"targetString":"name"},{"text":"(JSX attribute) TopBarActionProps.color?: string | undefined","docs":"","start":302,"length":5,"line":11,"character":4,"targetString":"color"},{"text":"(JSX attribute) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":322,"length":7,"line":12,"character":4,"targetString":"onPress"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":375,"length":6,"line":14,"character":2,"targetString":"TopBar"},{"text":"(property) TopBar.Container: React.ElementType<TopBarContainerProps>","docs":"","start":382,"length":9,"line":14,"character":9,"targetString":"Container"}],[{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TopBar"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":42,"length":6,"line":2,"character":1,"targetString":"TopBar"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":51,"length":5,"line":3,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.flex?: number | undefined","docs":"","start":60,"length":4,"line":3,"character":11,"targetString":"flex"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":69,"length":6,"line":3,"character":20,"targetString":"height"},{"text":"(JSX attribute) contentStyle?: StyleProp<ViewStyle>","docs":"","start":85,"length":12,"line":4,"character":2,"targetString":"contentStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":101,"length":6,"line":4,"character":18,"targetString":"height"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":113,"length":9,"line":4,"character":30,"targetString":"marginTop"},{"text":"(JSX attribute) background?: BackgroundProps | undefined","docs":"","start":131,"length":10,"line":5,"character":2,"targetString":"background"},{"text":"(JSX attribute) title?: string | undefined","docs":"","start":151,"length":5,"line":6,"character":2,"targetString":"title"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":170,"length":5,"line":7,"character":2,"targetString":"color"},{"text":"(JSX attribute) titleStyle?: StyleProp<TextStyle>","docs":"","start":184,"length":10,"line":8,"character":2,"targetString":"titleStyle"},{"text":"(property) TextStyle.color?: ColorValue | undefined","docs":"","start":202,"length":5,"line":9,"character":4,"targetString":"color"},{"text":"(JSX attribute) leftActions?: TopBarActionProps[] | undefined","docs":"","start":227,"length":11,"line":11,"character":2,"targetString":"leftActions"},{"text":"(property) IconFontProps.name?: IconFontName | undefined","docs":"","start":254,"length":4,"line":13,"character":6,"targetString":"name"},{"text":"(property) TopBarActionProps.color?: string | undefined","docs":"","start":277,"length":5,"line":14,"character":6,"targetString":"color"},{"text":"(JSX attribute) actions?: TopBarActionProps[] | undefined","docs":"","start":309,"length":7,"line":17,"character":2,"targetString":"actions"},{"text":"(property) IconFontProps.name?: IconFontName | undefined","docs":"","start":332,"length":4,"line":19,"character":6,"targetString":"name"},{"text":"(property) TopBarActionProps.color?: string | undefined","docs":"","start":351,"length":5,"line":20,"character":6,"targetString":"color"},{"text":"(property) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":375,"length":7,"line":21,"character":6,"targetString":"onPress"},{"text":"(JSX attribute) onBack?: ((...args: any[]) => void) | undefined","docs":"","start":435,"length":6,"line":24,"character":2,"targetString":"onBack"}],[{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TopBar"},{"text":"const radialBackground: {\n    stops: {\n        offset: string;\n        stopColor: string;\n        stopOpacity: string;\n    }[];\n}","docs":"","start":47,"length":16,"line":2,"character":6,"targetString":"radialBackground"},{"text":"(property) stops: {\n    offset: string;\n    stopColor: string;\n    stopOpacity: string;\n}[]","docs":"","start":70,"length":5,"line":3,"character":2,"targetString":"stops"},{"text":"(property) offset: string","docs":"","start":91,"length":6,"line":5,"character":6,"targetString":"offset"},{"text":"(property) stopColor: string","docs":"","start":111,"length":9,"line":6,"character":6,"targetString":"stopColor"},{"text":"(property) stopOpacity: string","docs":"","start":139,"length":11,"line":7,"character":6,"targetString":"stopOpacity"},{"text":"(property) offset: string","docs":"","start":176,"length":6,"line":10,"character":6,"targetString":"offset"},{"text":"(property) stopColor: string","docs":"","start":198,"length":9,"line":11,"character":6,"targetString":"stopColor"},{"text":"(property) stopOpacity: string","docs":"","start":226,"length":11,"line":12,"character":6,"targetString":"stopOpacity"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":261,"length":6,"line":17,"character":1,"targetString":"TopBar"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":270,"length":5,"line":18,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.flex?: number | undefined","docs":"","start":279,"length":4,"line":18,"character":11,"targetString":"flex"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":288,"length":6,"line":18,"character":20,"targetString":"height"},{"text":"(JSX attribute) contentStyle?: StyleProp<ViewStyle>","docs":"","start":304,"length":12,"line":19,"character":2,"targetString":"contentStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":320,"length":6,"line":19,"character":18,"targetString":"height"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":332,"length":9,"line":19,"character":30,"targetString":"marginTop"},{"text":"(JSX attribute) background?: BackgroundProps | undefined","docs":"","start":350,"length":10,"line":20,"character":2,"targetString":"background"},{"text":"const radialBackground: {\n    stops: {\n        offset: string;\n        stopColor: string;\n        stopOpacity: string;\n    }[];\n}","docs":"","start":362,"length":16,"line":20,"character":14,"targetString":"radialBackground"},{"text":"(JSX attribute) title?: string | undefined","docs":"","start":382,"length":5,"line":21,"character":2,"targetString":"title"},{"text":"(JSX attribute) titleStyle?: StyleProp<TextStyle>","docs":"","start":401,"length":10,"line":22,"character":2,"targetString":"titleStyle"},{"text":"(property) TextStyle.color?: ColorValue | undefined","docs":"","start":415,"length":5,"line":22,"character":16,"targetString":"color"},{"text":"(JSX attribute) leftActions?: TopBarActionProps[] | undefined","docs":"","start":434,"length":11,"line":23,"character":2,"targetString":"leftActions"},{"text":"(property) IconFontProps.name?: IconFontName | undefined","docs":"","start":461,"length":4,"line":25,"character":6,"targetString":"name"},{"text":"(property) TopBarActionProps.color?: string | undefined","docs":"","start":484,"length":5,"line":26,"character":6,"targetString":"color"},{"text":"(JSX attribute) actions?: TopBarActionProps[] | undefined","docs":"","start":513,"length":7,"line":29,"character":2,"targetString":"actions"},{"text":"(property) IconFontProps.name?: IconFontName | undefined","docs":"","start":536,"length":4,"line":31,"character":6,"targetString":"name"},{"text":"(property) TopBarActionProps.color?: string | undefined","docs":"","start":555,"length":5,"line":32,"character":6,"targetString":"color"},{"text":"(property) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":576,"length":7,"line":33,"character":6,"targetString":"onPress"},{"text":"(JSX attribute) onBack?: ((...args: any[]) => void) | undefined","docs":"","start":636,"length":6,"line":36,"character":2,"targetString":"onBack"}],[{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TopBar"},{"text":"const linearBackground: {\n    stops: {\n        '0%': string;\n        '100%': string;\n    };\n}","docs":"","start":47,"length":16,"line":2,"character":6,"targetString":"linearBackground"},{"text":"(property) stops: {\n    '0%': string;\n    '100%': string;\n}","docs":"","start":70,"length":5,"line":3,"character":2,"targetString":"stops"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":133,"length":6,"line":9,"character":1,"targetString":"TopBar"},{"text":"(property) TopBar.Container: React.ElementType<TopBarContainerProps>","docs":"","start":140,"length":9,"line":9,"character":8,"targetString":"Container"},{"text":"(JSX attribute) TopBarContainerProps.style?: StyleProp<ViewStyle>","docs":"","start":152,"length":5,"line":10,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.flex?: number | undefined","docs":"","start":161,"length":4,"line":10,"character":11,"targetString":"flex"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":170,"length":6,"line":10,"character":20,"targetString":"height"},{"text":"(JSX attribute) TopBarContainerProps.contentStyle?: StyleProp<ViewStyle>","docs":"","start":186,"length":12,"line":11,"character":2,"targetString":"contentStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":202,"length":6,"line":11,"character":18,"targetString":"height"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":214,"length":9,"line":11,"character":30,"targetString":"marginTop"},{"text":"(JSX attribute) TopBarContainerProps.background?: BackgroundProps | undefined","docs":"","start":232,"length":10,"line":12,"character":2,"targetString":"background"},{"text":"const linearBackground: {\n    stops: {\n        '0%': string;\n        '100%': string;\n    };\n}","docs":"","start":244,"length":16,"line":12,"character":14,"targetString":"linearBackground"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":267,"length":6,"line":14,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Action: React.ElementType<TopBarActionProps>","docs":"","start":274,"length":6,"line":14,"character":10,"targetString":"Action"},{"text":"(JSX attribute) IconFontProps.name?: IconFontName | undefined","docs":"","start":281,"length":4,"line":14,"character":17,"targetString":"name"},{"text":"(JSX attribute) TopBarActionProps.color?: string | undefined","docs":"","start":296,"length":5,"line":14,"character":32,"targetString":"color"},{"text":"(JSX attribute) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":309,"length":7,"line":14,"character":45,"targetString":"onPress"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":348,"length":6,"line":15,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Content: React.ElementType<TopBarContentProps>","docs":"","start":355,"length":7,"line":15,"character":10,"targetString":"Content"},{"text":"(JSX attribute) TopBarContentProps.title?: string | undefined","docs":"","start":367,"length":5,"line":16,"character":4,"targetString":"title"},{"text":"(JSX attribute) TopBarContentProps.titleStyle?: StyleProp<TextStyle>","docs":"","start":388,"length":10,"line":17,"character":4,"targetString":"titleStyle"},{"text":"(property) TextStyle.color?: ColorValue | undefined","docs":"","start":402,"length":5,"line":17,"character":18,"targetString":"color"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":427,"length":6,"line":19,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Action: React.ElementType<TopBarActionProps>","docs":"","start":434,"length":6,"line":19,"character":10,"targetString":"Action"},{"text":"(JSX attribute) IconFontProps.name?: IconFontName | undefined","docs":"","start":445,"length":4,"line":20,"character":4,"targetString":"name"},{"text":"(JSX attribute) TopBarActionProps.color?: string | undefined","docs":"","start":460,"length":5,"line":21,"character":4,"targetString":"color"},{"text":"(JSX attribute) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":477,"length":7,"line":22,"character":4,"targetString":"onPress"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":530,"length":6,"line":24,"character":2,"targetString":"TopBar"},{"text":"(property) TopBar.Container: React.ElementType<TopBarContainerProps>","docs":"","start":537,"length":9,"line":24,"character":9,"targetString":"Container"}],[{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TopBar"},{"text":"const qrcode: \"M170.666667,640 C192.547662,640 210.581639,656.471048 213.046283,677.690832 L213.333333,682.666667 L213.333333,780.190476 C213.333333,795.619383 224.798634,808.370426 239.674085,810.388455 L243.809524,810.666667 L341.333333,810.666667 C364.897483,810.666667 384,829.769184 384,853.333333 C384,875.214329 367.528952,893.248306 346.309168,895.71295 L341.333333,896 L243.809524,896 C182.218573,896 131.85733,847.919903 128.211354,787.245269 L128,780.190476 L128,682.666667 C128,659.102517 147.102517,640 170.666667,640 Z M853.333333,640 C875.214329,640 893.248306,656.471048 895.71295,677.690832 L896,682.666667 L896,780.190476 C896,841.781427 847.919903,892.14267 787.245269,895.788646 L780.190476,896 L682.666667,896 C659.102517,896 640,876.897483 640,853.333333 C640,831.452338 656.471048,813.418361 677.690832,810.953717 L682.666667,810.666667 L780.190476,810.666667 C795.619383,810.666667 808.370426,799.201366 810.388455,784.325915 L810.666667,780.190476 L810.666667,682.666667 C810.666667,659.102517 829.769184,640 853.333333,640 Z M767,469.333333 C767.552285,469.333333 768,469.781049 768,470.333333 L768,553.666667 C768,554.218951 767.552285,554.666667 767,554.666667 L257,554.666667 C256.447715,554.666667 256,554.218951 256,553.666667 L256,470.333333 C256,469.781049 256.447715,469.333333 257,469.333333 L767,469.333333 Z M341.333333,128 C364.897483,128 384,147.102517 384,170.666667 C384,192.547662 367.528952,210.581639 346.309168,213.046283 L341.333333,213.333333 L243.809524,213.333333 C228.380617,213.333333 215.629574,224.798634 213.611545,239.674085 L213.333333,243.809524 L213.333333,341.333333 C213.333333,364.897483 194.230816,384 170.666667,384 C148.785671,384 130.751694,367.528952 128.28705,346.309168 L128,341.333333 L128,243.809524 C128,182.218573 176.080097,131.85733 236.754731,128.211354 L243.809524,128 L341.333333,128 Z M780.190476,128 C841.781427,128 892.14267,176.080097 895.788646,236.754731 L896,243.809524 L896,341.333333 C896,364.897483 876.897483,384 853.333333,384 C831.452338,384 813.418361,367.528952 810.953717,346.309168 L810.666667,341.333333 L810.666667,243.809524 C810.666667,228.380617 799.201366,215.629574 784.325915,213.611545 L780.190476,213.333333 L682.666667,213.333333 C659.102517,213.333333 640,194.230816 640,170.666667 C640,148.785671 656.471048,130.751694 677.690832,128.28705 L682.666667,128 L780.190476,128 Z\" ...","docs":"","start":47,"length":6,"line":2,"character":6,"targetString":"qrcode"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":2429,"length":6,"line":5,"character":1,"targetString":"TopBar"},{"text":"(property) TopBar.Container: React.ElementType<TopBarContainerProps>","docs":"","start":2436,"length":9,"line":5,"character":8,"targetString":"Container"},{"text":"(JSX attribute) TopBarContainerProps.style?: StyleProp<ViewStyle>","docs":"","start":2448,"length":5,"line":6,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.flex?: number | undefined","docs":"","start":2457,"length":4,"line":6,"character":11,"targetString":"flex"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":2466,"length":6,"line":6,"character":20,"targetString":"height"},{"text":"(JSX attribute) TopBarContainerProps.contentStyle?: StyleProp<ViewStyle>","docs":"","start":2482,"length":12,"line":7,"character":2,"targetString":"contentStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":2498,"length":6,"line":7,"character":18,"targetString":"height"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":2510,"length":9,"line":7,"character":30,"targetString":"marginTop"},{"text":"(JSX attribute) TopBarContainerProps.background?: BackgroundProps | undefined","docs":"","start":2528,"length":10,"line":8,"character":2,"targetString":"background"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":2551,"length":6,"line":10,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Action: React.ElementType<TopBarActionProps>","docs":"","start":2558,"length":6,"line":10,"character":10,"targetString":"Action"},{"text":"(JSX attribute) IconFontProps.name?: IconFontName | undefined","docs":"","start":2565,"length":4,"line":10,"character":17,"targetString":"name"},{"text":"(JSX attribute) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":2580,"length":7,"line":10,"character":32,"targetString":"onPress"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":2619,"length":6,"line":11,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Action: React.ElementType<TopBarActionProps>","docs":"","start":2626,"length":6,"line":11,"character":10,"targetString":"Action"},{"text":"(JSX attribute) TopBarActionProps.source?: string | ImageSourcePropType | undefined","docs":"","start":2637,"length":6,"line":12,"character":4,"targetString":"source"},{"text":"(JSX attribute) TopBarActionProps.color?: string | undefined","docs":"","start":2657,"length":5,"line":13,"character":4,"targetString":"color"},{"text":"(JSX attribute) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":2677,"length":7,"line":14,"character":4,"targetString":"onPress"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":2800,"length":6,"line":21,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Content: React.ElementType<TopBarContentProps>","docs":"","start":2807,"length":7,"line":21,"character":10,"targetString":"Content"},{"text":"(JSX attribute) TopBarContentProps.title?: string | undefined","docs":"","start":2819,"length":5,"line":22,"character":4,"targetString":"title"},{"text":"(JSX attribute) TopBarContentProps.subTitle?: string | undefined","docs":"","start":2840,"length":8,"line":23,"character":4,"targetString":"subTitle"},{"text":"(JSX attribute) TopBarContentProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":2867,"length":7,"line":24,"character":4,"targetString":"onPress"},{"text":"(method) Array<string>.map<JSX.Element>(callbackfn: (value: string, index: number, array: string[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":2969,"length":3,"line":28,"character":12,"targetString":"map"},{"text":"(parameter) v: string","docs":"","start":2973,"length":1,"line":28,"character":16,"targetString":"v"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":2985,"length":6,"line":29,"character":5,"targetString":"TopBar"},{"text":"(property) TopBar.Action: React.ElementType<TopBarActionProps>","docs":"","start":2992,"length":6,"line":29,"character":12,"targetString":"Action"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":3005,"length":3,"line":30,"character":6,"targetString":"key"},{"text":"(parameter) v: string","docs":"","start":3010,"length":1,"line":30,"character":11,"targetString":"v"},{"text":"(JSX attribute) TopBarActionProps.color?: string | undefined","docs":"","start":3019,"length":5,"line":31,"character":6,"targetString":"color"},{"text":"(JSX attribute) IconFontProps.name?: IconFontName | undefined","docs":"","start":3041,"length":4,"line":32,"character":6,"targetString":"name"},{"text":"(parameter) v: string","docs":"","start":3047,"length":1,"line":32,"character":12,"targetString":"v"},{"text":"(JSX attribute) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":3063,"length":7,"line":33,"character":6,"targetString":"onPress"},{"text":"(parameter) v: string","docs":"","start":3126,"length":1,"line":34,"character":46,"targetString":"v"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":3167,"length":6,"line":38,"character":3,"targetString":"TopBar"},{"text":"(property) TopBar.Action: React.ElementType<TopBarActionProps>","docs":"","start":3174,"length":6,"line":38,"character":10,"targetString":"Action"},{"text":"(JSX attribute) TopBarActionProps.color?: string | undefined","docs":"","start":3181,"length":5,"line":38,"character":17,"targetString":"color"},{"text":"(JSX attribute) IconFontProps.d?: string | undefined","docs":"","start":3197,"length":1,"line":38,"character":33,"targetString":"d"},{"text":"const qrcode: \"M170.666667,640 C192.547662,640 210.581639,656.471048 213.046283,677.690832 L213.333333,682.666667 L213.333333,780.190476 C213.333333,795.619383 224.798634,808.370426 239.674085,810.388455 L243.809524,810.666667 L341.333333,810.666667 C364.897483,810.666667 384,829.769184 384,853.333333 C384,875.214329 367.528952,893.248306 346.309168,895.71295 L341.333333,896 L243.809524,896 C182.218573,896 131.85733,847.919903 128.211354,787.245269 L128,780.190476 L128,682.666667 C128,659.102517 147.102517,640 170.666667,640 Z M853.333333,640 C875.214329,640 893.248306,656.471048 895.71295,677.690832 L896,682.666667 L896,780.190476 C896,841.781427 847.919903,892.14267 787.245269,895.788646 L780.190476,896 L682.666667,896 C659.102517,896 640,876.897483 640,853.333333 C640,831.452338 656.471048,813.418361 677.690832,810.953717 L682.666667,810.666667 L780.190476,810.666667 C795.619383,810.666667 808.370426,799.201366 810.388455,784.325915 L810.666667,780.190476 L810.666667,682.666667 C810.666667,659.102517 829.769184,640 853.333333,640 Z M767,469.333333 C767.552285,469.333333 768,469.781049 768,470.333333 L768,553.666667 C768,554.218951 767.552285,554.666667 767,554.666667 L257,554.666667 C256.447715,554.666667 256,554.218951 256,553.666667 L256,470.333333 C256,469.781049 256.447715,469.333333 257,469.333333 L767,469.333333 Z M341.333333,128 C364.897483,128 384,147.102517 384,170.666667 C384,192.547662 367.528952,210.581639 346.309168,213.046283 L341.333333,213.333333 L243.809524,213.333333 C228.380617,213.333333 215.629574,224.798634 213.611545,239.674085 L213.333333,243.809524 L213.333333,341.333333 C213.333333,364.897483 194.230816,384 170.666667,384 C148.785671,384 130.751694,367.528952 128.28705,346.309168 L128,341.333333 L128,243.809524 C128,182.218573 176.080097,131.85733 236.754731,128.211354 L243.809524,128 L341.333333,128 Z M780.190476,128 C841.781427,128 892.14267,176.080097 895.788646,236.754731 L896,243.809524 L896,341.333333 C896,364.897483 876.897483,384 853.333333,384 C831.452338,384 813.418361,367.528952 810.953717,346.309168 L810.666667,341.333333 L810.666667,243.809524 C810.666667,228.380617 799.201366,215.629574 784.325915,213.611545 L780.190476,213.333333 L682.666667,213.333333 C659.102517,213.333333 640,194.230816 640,170.666667 C640,148.785671 656.471048,130.751694 677.690832,128.28705 L682.666667,128 L780.190476,128 Z\" ...","docs":"","start":3200,"length":6,"line":38,"character":36,"targetString":"qrcode"},{"text":"(JSX attribute) TopBarActionProps.size?: number | undefined","docs":"","start":3208,"length":4,"line":38,"character":44,"targetString":"size"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":3227,"length":6,"line":39,"character":2,"targetString":"TopBar"},{"text":"(property) TopBar.Container: React.ElementType<TopBarContainerProps>","docs":"","start":3234,"length":9,"line":39,"character":9,"targetString":"Container"}],[{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TopBar"},{"text":"const qrcode: \"M170.666667,640 C192.547662,640 210.581639,656.471048 213.046283,677.690832 L213.333333,682.666667 L213.333333,780.190476 C213.333333,795.619383 224.798634,808.370426 239.674085,810.388455 L243.809524,810.666667 L341.333333,810.666667 C364.897483,810.666667 384,829.769184 384,853.333333 C384,875.214329 367.528952,893.248306 346.309168,895.71295 L341.333333,896 L243.809524,896 C182.218573,896 131.85733,847.919903 128.211354,787.245269 L128,780.190476 L128,682.666667 C128,659.102517 147.102517,640 170.666667,640 Z M853.333333,640 C875.214329,640 893.248306,656.471048 895.71295,677.690832 L896,682.666667 L896,780.190476 C896,841.781427 847.919903,892.14267 787.245269,895.788646 L780.190476,896 L682.666667,896 C659.102517,896 640,876.897483 640,853.333333 C640,831.452338 656.471048,813.418361 677.690832,810.953717 L682.666667,810.666667 L780.190476,810.666667 C795.619383,810.666667 808.370426,799.201366 810.388455,784.325915 L810.666667,780.190476 L810.666667,682.666667 C810.666667,659.102517 829.769184,640 853.333333,640 Z M767,469.333333 C767.552285,469.333333 768,469.781049 768,470.333333 L768,553.666667 C768,554.218951 767.552285,554.666667 767,554.666667 L257,554.666667 C256.447715,554.666667 256,554.218951 256,553.666667 L256,470.333333 C256,469.781049 256.447715,469.333333 257,469.333333 L767,469.333333 Z M341.333333,128 C364.897483,128 384,147.102517 384,170.666667 C384,192.547662 367.528952,210.581639 346.309168,213.046283 L341.333333,213.333333 L243.809524,213.333333 C228.380617,213.333333 215.629574,224.798634 213.611545,239.674085 L213.333333,243.809524 L213.333333,341.333333 C213.333333,364.897483 194.230816,384 170.666667,384 C148.785671,384 130.751694,367.528952 128.28705,346.309168 L128,341.333333 L128,243.809524 C128,182.218573 176.080097,131.85733 236.754731,128.211354 L243.809524,128 L341.333333,128 Z M780.190476,128 C841.781427,128 892.14267,176.080097 895.788646,236.754731 L896,243.809524 L896,341.333333 C896,364.897483 876.897483,384 853.333333,384 C831.452338,384 813.418361,367.528952 810.953717,346.309168 L810.666667,341.333333 L810.666667,243.809524 C810.666667,228.380617 799.201366,215.629574 784.325915,213.611545 L780.190476,213.333333 L682.666667,213.333333 C659.102517,213.333333 640,194.230816 640,170.666667 C640,148.785671 656.471048,130.751694 677.690832,128.28705 L682.666667,128 L780.190476,128 Z\" ...","docs":"","start":47,"length":6,"line":2,"character":6,"targetString":"qrcode"},{"text":"(alias) class TopBar\nimport TopBar","docs":"","start":2429,"length":6,"line":5,"character":1,"targetString":"TopBar"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":2438,"length":5,"line":6,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.flex?: number | undefined","docs":"","start":2447,"length":4,"line":6,"character":11,"targetString":"flex"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":2456,"length":6,"line":6,"character":20,"targetString":"height"},{"text":"(JSX attribute) contentStyle?: StyleProp<ViewStyle>","docs":"","start":2472,"length":12,"line":7,"character":2,"targetString":"contentStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":2488,"length":6,"line":7,"character":18,"targetString":"height"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":2500,"length":9,"line":7,"character":30,"targetString":"marginTop"},{"text":"(JSX attribute) background?: BackgroundProps | undefined","docs":"","start":2518,"length":10,"line":8,"character":2,"targetString":"background"},{"text":"(JSX attribute) title?: string | undefined","docs":"","start":2538,"length":5,"line":9,"character":2,"targetString":"title"},{"text":"(JSX attribute) subTitle?: string | undefined","docs":"","start":2557,"length":8,"line":10,"character":2,"targetString":"subTitle"},{"text":"(JSX attribute) onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":2582,"length":7,"line":11,"character":2,"targetString":"onPress"},{"text":"(JSX attribute) leftActions?: TopBarActionProps[] | undefined","docs":"","start":2654,"length":11,"line":12,"character":2,"targetString":"leftActions"},{"text":"(property) IconFontProps.name?: IconFontName | undefined","docs":"","start":2681,"length":4,"line":14,"character":6,"targetString":"name"},{"text":"(property) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":2704,"length":7,"line":15,"character":6,"targetString":"onPress"},{"text":"(property) TopBarActionProps.source?: string | ImageSourcePropType | undefined","docs":"","start":2756,"length":6,"line":18,"character":6,"targetString":"source"},{"text":"(property) TopBarActionProps.color?: string | undefined","docs":"","start":2778,"length":5,"line":19,"character":6,"targetString":"color"},{"text":"(property) TopBarActionProps.onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"","start":2802,"length":7,"line":20,"character":6,"targetString":"onPress"},{"text":"(JSX attribute) actions?: TopBarActionProps[] | undefined","docs":"","start":2930,"length":7,"line":27,"character":2,"targetString":"actions"},{"text":"(method) Array<string>.map<{\n    color: string;\n    name: any;\n    onPress: () => any;\n}>(callbackfn: (value: string, index: number, array: string[]) => {\n    color: string;\n    name: any;\n    onPress: () => any;\n}, thisArg?: any): {\n    color: string;\n    name: any;\n    onPress: () => any;\n}[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":2952,"length":3,"line":28,"character":5,"targetString":"map"},{"text":"(parameter) v: string","docs":"","start":2956,"length":1,"line":28,"character":9,"targetString":"v"},{"text":"(property) color: string","docs":"","start":2970,"length":5,"line":29,"character":6,"targetString":"color"},{"text":"(property) name: any","docs":"","start":2994,"length":4,"line":30,"character":6,"targetString":"name"},{"text":"(parameter) v: string","docs":"","start":3000,"length":1,"line":30,"character":12,"targetString":"v"},{"text":"(property) onPress: () => any","docs":"","start":3016,"length":7,"line":31,"character":6,"targetString":"onPress"},{"text":"(parameter) v: string","docs":"","start":3069,"length":1,"line":31,"character":59,"targetString":"v"},{"text":"(method) Array<{ color: string; name: any; onPress: () => any; }>.concat(...items: ConcatArray<{\n    color: string;\n    name: any;\n    onPress: () => any;\n}>[]): {\n    color: string;\n    name: any;\n    onPress: () => any;\n}[] (+1 overload)","docs":"Combines two or more arrays.\r\nThis method returns a new array without modifying any existing arrays.","start":3098,"length":6,"line":33,"character":5,"targetString":"concat"},{"text":"(property) d: string","docs":"","start":3133,"length":1,"line":35,"character":6,"targetString":"d"},{"text":"const qrcode: \"M170.666667,640 C192.547662,640 210.581639,656.471048 213.046283,677.690832 L213.333333,682.666667 L213.333333,780.190476 C213.333333,795.619383 224.798634,808.370426 239.674085,810.388455 L243.809524,810.666667 L341.333333,810.666667 C364.897483,810.666667 384,829.769184 384,853.333333 C384,875.214329 367.528952,893.248306 346.309168,895.71295 L341.333333,896 L243.809524,896 C182.218573,896 131.85733,847.919903 128.211354,787.245269 L128,780.190476 L128,682.666667 C128,659.102517 147.102517,640 170.666667,640 Z M853.333333,640 C875.214329,640 893.248306,656.471048 895.71295,677.690832 L896,682.666667 L896,780.190476 C896,841.781427 847.919903,892.14267 787.245269,895.788646 L780.190476,896 L682.666667,896 C659.102517,896 640,876.897483 640,853.333333 C640,831.452338 656.471048,813.418361 677.690832,810.953717 L682.666667,810.666667 L780.190476,810.666667 C795.619383,810.666667 808.370426,799.201366 810.388455,784.325915 L810.666667,780.190476 L810.666667,682.666667 C810.666667,659.102517 829.769184,640 853.333333,640 Z M767,469.333333 C767.552285,469.333333 768,469.781049 768,470.333333 L768,553.666667 C768,554.218951 767.552285,554.666667 767,554.666667 L257,554.666667 C256.447715,554.666667 256,554.218951 256,553.666667 L256,470.333333 C256,469.781049 256.447715,469.333333 257,469.333333 L767,469.333333 Z M341.333333,128 C364.897483,128 384,147.102517 384,170.666667 C384,192.547662 367.528952,210.581639 346.309168,213.046283 L341.333333,213.333333 L243.809524,213.333333 C228.380617,213.333333 215.629574,224.798634 213.611545,239.674085 L213.333333,243.809524 L213.333333,341.333333 C213.333333,364.897483 194.230816,384 170.666667,384 C148.785671,384 130.751694,367.528952 128.28705,346.309168 L128,341.333333 L128,243.809524 C128,182.218573 176.080097,131.85733 236.754731,128.211354 L243.809524,128 L341.333333,128 Z M780.190476,128 C841.781427,128 892.14267,176.080097 895.788646,236.754731 L896,243.809524 L896,341.333333 C896,364.897483 876.897483,384 853.333333,384 C831.452338,384 813.418361,367.528952 810.953717,346.309168 L810.666667,341.333333 L810.666667,243.809524 C810.666667,228.380617 799.201366,215.629574 784.325915,213.611545 L780.190476,213.333333 L682.666667,213.333333 C659.102517,213.333333 640,194.230816 640,170.666667 C640,148.785671 656.471048,130.751694 677.690832,128.28705 L682.666667,128 L780.190476,128 Z\" ...","docs":"","start":3136,"length":6,"line":35,"character":9,"targetString":"qrcode"},{"text":"(property) size: any","docs":"","start":3150,"length":4,"line":36,"character":6,"targetString":"size"},{"text":"(property) color: string","docs":"","start":3170,"length":5,"line":37,"character":6,"targetString":"color"}]],"/data-entry/checkbox":[[{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Checkbox"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":19,"length":5,"line":0,"character":19,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":58,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":68,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":75,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":81,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"const checked: boolean","docs":"","start":101,"length":7,"line":4,"character":7,"targetString":"checked"},{"text":"const setChecked: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":110,"length":10,"line":4,"character":16,"targetString":"setChecked"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":124,"length":5,"line":4,"character":30,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":130,"length":8,"line":4,"character":36,"targetString":"useState"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":149,"length":8,"line":6,"character":1,"targetString":"Checkbox"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":160,"length":5,"line":7,"character":2,"targetString":"color"},{"text":"(JSX attribute) checked?: boolean | undefined","docs":"","start":178,"length":7,"line":8,"character":2,"targetString":"checked"},{"text":"const checked: boolean","docs":"","start":187,"length":7,"line":8,"character":11,"targetString":"checked"},{"text":"(JSX attribute) onChange?: ((checked: boolean) => void) | undefined","docs":"","start":207,"length":8,"line":9,"character":2,"targetString":"onChange"},{"text":"(parameter) value: boolean","docs":"","start":217,"length":5,"line":9,"character":12,"targetString":"value"},{"text":"const setChecked: (value: React.SetStateAction<boolean>) => void","docs":"","start":226,"length":10,"line":9,"character":21,"targetString":"setChecked"},{"text":"(property) checked1: boolean","docs":"","start":239,"length":8,"line":9,"character":34,"targetString":"checked1"},{"text":"(parameter) value: boolean","docs":"","start":249,"length":5,"line":9,"character":44,"targetString":"value"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":275,"length":8,"line":12,"character":2,"targetString":"Checkbox"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":286,"length":8,"line":13,"character":1,"targetString":"Checkbox"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":297,"length":5,"line":14,"character":2,"targetString":"color"},{"text":"(JSX attribute) checked?: boolean | undefined","docs":"","start":315,"length":7,"line":15,"character":2,"targetString":"checked"},{"text":"const checked: boolean","docs":"","start":324,"length":7,"line":15,"character":11,"targetString":"checked"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":344,"length":5,"line":16,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":353,"length":9,"line":16,"character":11,"targetString":"marginTop"},{"text":"const cx: (d: number) => number","docs":"","start":364,"length":2,"line":16,"character":22,"targetString":"cx"},{"text":"(JSX attribute) onChange?: ((checked: boolean) => void) | undefined","docs":"","start":375,"length":8,"line":17,"character":2,"targetString":"onChange"},{"text":"(parameter) value: boolean","docs":"","start":385,"length":5,"line":17,"character":12,"targetString":"value"},{"text":"const setChecked: (value: React.SetStateAction<boolean>) => void","docs":"","start":394,"length":10,"line":17,"character":21,"targetString":"setChecked"},{"text":"(property) checked2: boolean","docs":"","start":407,"length":8,"line":17,"character":34,"targetString":"checked2"},{"text":"(parameter) value: boolean","docs":"","start":417,"length":5,"line":17,"character":44,"targetString":"value"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":443,"length":8,"line":20,"character":2,"targetString":"Checkbox"}],[{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Checkbox"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":19,"length":5,"line":0,"character":19,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":58,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":68,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":75,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":81,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":95,"length":8,"line":4,"character":1,"targetString":"Checkbox"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":104,"length":5,"line":4,"character":10,"targetString":"color"},{"text":"(JSX attribute) checked?: boolean | undefined","docs":"","start":116,"length":7,"line":4,"character":22,"targetString":"checked"},{"text":"(JSX attribute) disabled?: boolean | undefined","docs":"","start":131,"length":8,"line":4,"character":37,"targetString":"disabled"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":161,"length":8,"line":6,"character":2,"targetString":"Checkbox"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":172,"length":8,"line":7,"character":1,"targetString":"Checkbox"},{"text":"(JSX attribute) checked?: boolean | undefined","docs":"","start":181,"length":7,"line":7,"character":10,"targetString":"checked"},{"text":"(JSX attribute) disabled?: boolean | undefined","docs":"","start":197,"length":8,"line":7,"character":26,"targetString":"disabled"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":213,"length":5,"line":7,"character":42,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":222,"length":9,"line":7,"character":51,"targetString":"marginTop"},{"text":"const cx: (d: number) => number","docs":"","start":233,"length":2,"line":7,"character":62,"targetString":"cx"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":256,"length":8,"line":9,"character":2,"targetString":"Checkbox"}],[{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Checkbox"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":19,"length":5,"line":0,"character":19,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":58,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":68,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":75,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":81,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"const checked: boolean","docs":"","start":101,"length":7,"line":4,"character":7,"targetString":"checked"},{"text":"const setChecked: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":110,"length":10,"line":4,"character":16,"targetString":"setChecked"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":124,"length":5,"line":4,"character":30,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":130,"length":8,"line":4,"character":36,"targetString":"useState"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":149,"length":8,"line":6,"character":1,"targetString":"Checkbox"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":160,"length":4,"line":7,"character":2,"targetString":"size"},{"text":"const cx: (d: number) => number","docs":"","start":166,"length":2,"line":7,"character":8,"targetString":"cx"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":176,"length":5,"line":8,"character":2,"targetString":"color"},{"text":"(JSX attribute) checked?: boolean | undefined","docs":"","start":194,"length":7,"line":9,"character":2,"targetString":"checked"},{"text":"const checked: boolean","docs":"","start":203,"length":7,"line":9,"character":11,"targetString":"checked"},{"text":"(JSX attribute) onChange?: ((checked: boolean) => void) | undefined","docs":"","start":223,"length":8,"line":10,"character":2,"targetString":"onChange"},{"text":"(parameter) value: boolean","docs":"","start":233,"length":5,"line":10,"character":12,"targetString":"value"},{"text":"const setChecked: (value: React.SetStateAction<boolean>) => void","docs":"","start":242,"length":10,"line":10,"character":21,"targetString":"setChecked"},{"text":"(property) checked1: boolean","docs":"","start":255,"length":8,"line":10,"character":34,"targetString":"checked1"},{"text":"(parameter) value: boolean","docs":"","start":265,"length":5,"line":10,"character":44,"targetString":"value"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":291,"length":8,"line":13,"character":2,"targetString":"Checkbox"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":302,"length":8,"line":14,"character":1,"targetString":"Checkbox"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":313,"length":4,"line":15,"character":2,"targetString":"size"},{"text":"const cx: (d: number) => number","docs":"","start":319,"length":2,"line":15,"character":8,"targetString":"cx"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":329,"length":5,"line":16,"character":2,"targetString":"color"},{"text":"(JSX attribute) checked?: boolean | undefined","docs":"","start":347,"length":7,"line":17,"character":2,"targetString":"checked"},{"text":"const checked: boolean","docs":"","start":356,"length":7,"line":17,"character":11,"targetString":"checked"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":376,"length":5,"line":18,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":385,"length":9,"line":18,"character":11,"targetString":"marginTop"},{"text":"const cx: (d: number) => number","docs":"","start":396,"length":2,"line":18,"character":22,"targetString":"cx"},{"text":"(JSX attribute) onChange?: ((checked: boolean) => void) | undefined","docs":"","start":407,"length":8,"line":19,"character":2,"targetString":"onChange"},{"text":"(parameter) value: boolean","docs":"","start":417,"length":5,"line":19,"character":12,"targetString":"value"},{"text":"const setChecked: (value: React.SetStateAction<boolean>) => void","docs":"","start":426,"length":10,"line":19,"character":21,"targetString":"setChecked"},{"text":"(property) checked2: boolean","docs":"","start":439,"length":8,"line":19,"character":34,"targetString":"checked2"},{"text":"(parameter) value: boolean","docs":"","start":449,"length":5,"line":19,"character":44,"targetString":"value"},{"text":"(alias) class Checkbox\nimport Checkbox","docs":"","start":477,"length":8,"line":22,"character":2,"targetString":"Checkbox"}]],"/data-entry/date-picker":[[{"text":"(alias) class DatePicker\nimport DatePicker","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"DatePicker"},{"text":"const selectDate: Date","docs":"","start":52,"length":10,"line":2,"character":7,"targetString":"selectDate"},{"text":"const setDate: React.Dispatch<React.SetStateAction<Date>>","docs":"","start":64,"length":7,"line":2,"character":19,"targetString":"setDate"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":75,"length":5,"line":2,"character":30,"targetString":"React"},{"text":"function React.useState<Date>(initialState: Date | (() => Date)): [Date, React.Dispatch<React.SetStateAction<Date>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":81,"length":8,"line":2,"character":36,"targetString":"useState"},{"text":"var Date: DateConstructor\nnew () => Date (+4 overloads)","docs":"","start":94,"length":4,"line":2,"character":49,"targetString":"Date"},{"text":"(alias) class DatePicker\nimport DatePicker","docs":"","start":105,"length":10,"line":4,"character":1,"targetString":"DatePicker"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":118,"length":5,"line":5,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":127,"length":9,"line":5,"character":11,"targetString":"marginTop"},{"text":"(JSX attribute) date?: Date | undefined","docs":"","start":146,"length":4,"line":6,"character":2,"targetString":"date"},{"text":"const selectDate: Date","docs":"","start":152,"length":10,"line":6,"character":8,"targetString":"selectDate"},{"text":"(JSX attribute) onDateChange?: ((value?: Date | undefined) => void) | undefined","docs":"","start":166,"length":12,"line":7,"character":2,"targetString":"onDateChange"},{"text":"(parameter) selectDate: Date | undefined","docs":"","start":180,"length":10,"line":7,"character":16,"targetString":"selectDate"},{"text":"const setDate: (value: React.SetStateAction<Date>) => void","docs":"","start":194,"length":7,"line":7,"character":30,"targetString":"setDate"},{"text":"(parameter) selectDate: Date | undefined","docs":"","start":202,"length":10,"line":7,"character":38,"targetString":"selectDate"}],[{"text":"(alias) class DatePicker\nimport DatePicker","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"DatePicker"},{"text":"(alias) class DatePicker\nimport DatePicker","docs":"","start":46,"length":10,"line":2,"character":1,"targetString":"DatePicker"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":59,"length":5,"line":3,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":68,"length":9,"line":3,"character":11,"targetString":"marginTop"},{"text":"(JSX attribute) defaultDate?: Date | undefined","docs":"","start":87,"length":11,"line":4,"character":2,"targetString":"defaultDate"},{"text":"var Date: DateConstructor\nnew () => Date (+4 overloads)","docs":"","start":104,"length":4,"line":4,"character":19,"targetString":"Date"},{"text":"(JSX attribute) onDateChange?: ((value?: Date | undefined) => void) | undefined","docs":"","start":114,"length":12,"line":5,"character":2,"targetString":"onDateChange"},{"text":"(parameter) date: Date | undefined","docs":"","start":128,"length":4,"line":5,"character":16,"targetString":"date"},{"text":"var console: Console","docs":"","start":136,"length":7,"line":5,"character":24,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":144,"length":3,"line":5,"character":32,"targetString":"log"},{"text":"(parameter) date: Date | undefined","docs":"","start":148,"length":4,"line":5,"character":36,"targetString":"date"}]],"/data-entry/picker-view":[[{"text":"(alias) class Picker\nimport Picker","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Picker"},{"text":"const languages: string[]","docs":"","start":47,"length":9,"line":2,"character":6,"targetString":"languages"},{"text":"const value: string","docs":"","start":104,"length":5,"line":3,"character":7,"targetString":"value"},{"text":"const setValue: React.Dispatch<React.SetStateAction<string>>","docs":"","start":111,"length":8,"line":3,"character":14,"targetString":"setValue"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":123,"length":5,"line":3,"character":26,"targetString":"React"},{"text":"function React.useState<string>(initialState: string | (() => string)): [string, React.Dispatch<React.SetStateAction<string>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":129,"length":8,"line":3,"character":32,"targetString":"useState"},{"text":"(alias) class Picker\nimport Picker","docs":"","start":147,"length":6,"line":5,"character":1,"targetString":"Picker"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":156,"length":5,"line":6,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":169,"length":5,"line":7,"character":4,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":185,"length":6,"line":8,"character":4,"targetString":"height"},{"text":"(JSX attribute) selectedValue?: string | undefined","docs":"Value matching value of one of the items.\nCan be a string or an integer.","start":205,"length":13,"line":10,"character":2,"targetString":"selectedValue"},{"text":"const value: string","docs":"","start":220,"length":5,"line":10,"character":17,"targetString":"value"},{"text":"(JSX attribute) onValueChange?: ((value: string | number, index: number) => void) | undefined","docs":"Callback for when an item is selected. This is called with the\nfollowing parameters:\n- itemValue: the value prop of the item that was selected\n- itemPosition: the index of the selected item in this picker","start":229,"length":13,"line":11,"character":2,"targetString":"onValueChange"},{"text":"(parameter) value: string | number","docs":"","start":244,"length":5,"line":11,"character":17,"targetString":"value"},{"text":"const setValue: (value: React.SetStateAction<string>) => void","docs":"","start":253,"length":8,"line":11,"character":26,"targetString":"setValue"},{"text":"(parameter) value: string | number","docs":"","start":262,"length":5,"line":11,"character":35,"targetString":"value"},{"text":"const languages: string[]","docs":"","start":275,"length":9,"line":13,"character":3,"targetString":"languages"},{"text":"(method) Array<string>.map<JSX.Element>(callbackfn: (value: string, index: number, array: string[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":285,"length":3,"line":13,"character":13,"targetString":"map"},{"text":"(parameter) value: string","docs":"","start":289,"length":5,"line":13,"character":17,"targetString":"value"},{"text":"(alias) class Picker\nimport Picker","docs":"","start":305,"length":6,"line":14,"character":5,"targetString":"Picker"},{"text":"(property) Picker.Item: React.ElementType<any>","docs":"","start":312,"length":4,"line":14,"character":12,"targetString":"Item"},{"text":"(JSX attribute) key: string","docs":"","start":317,"length":3,"line":14,"character":17,"targetString":"key"},{"text":"(parameter) value: string","docs":"","start":322,"length":5,"line":14,"character":22,"targetString":"value"},{"text":"(JSX attribute) value: string","docs":"","start":329,"length":5,"line":14,"character":29,"targetString":"value"},{"text":"(parameter) value: string","docs":"","start":336,"length":5,"line":14,"character":36,"targetString":"value"},{"text":"(JSX attribute) label: string","docs":"","start":343,"length":5,"line":14,"character":43,"targetString":"label"},{"text":"(parameter) value: string","docs":"","start":350,"length":5,"line":14,"character":50,"targetString":"value"},{"text":"(alias) class Picker\nimport Picker","docs":"","start":368,"length":6,"line":16,"character":2,"targetString":"Picker"}],[{"text":"(alias) class Picker\nimport Picker","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Picker"},{"text":"const weeks: {\n    key: string;\n    values: {\n        value: string;\n        label: string;\n    }[];\n}[]","docs":"","start":47,"length":5,"line":2,"character":6,"targetString":"weeks"},{"text":"(property) key: string","docs":"","start":65,"length":3,"line":4,"character":4,"targetString":"key"},{"text":"(property) values: {\n    value: string;\n    label: string;\n}[]","docs":"","start":82,"length":6,"line":5,"character":4,"targetString":"values"},{"text":"(property) value: string","docs":"","start":100,"length":5,"line":6,"character":8,"targetString":"value"},{"text":"(property) label: string","docs":"","start":112,"length":5,"line":6,"character":20,"targetString":"label"},{"text":"(property) value: string","docs":"","start":139,"length":5,"line":7,"character":8,"targetString":"value"},{"text":"(property) label: string","docs":"","start":151,"length":5,"line":7,"character":20,"targetString":"label"},{"text":"(property) value: string","docs":"","start":179,"length":5,"line":8,"character":8,"targetString":"value"},{"text":"(property) label: string","docs":"","start":191,"length":5,"line":8,"character":20,"targetString":"label"},{"text":"(property) value: string","docs":"","start":221,"length":5,"line":9,"character":8,"targetString":"value"},{"text":"(property) label: string","docs":"","start":233,"length":5,"line":9,"character":20,"targetString":"label"},{"text":"(property) value: string","docs":"","start":262,"length":5,"line":10,"character":8,"targetString":"value"},{"text":"(property) label: string","docs":"","start":274,"length":5,"line":10,"character":20,"targetString":"label"},{"text":"(property) value: string","docs":"","start":301,"length":5,"line":11,"character":8,"targetString":"value"},{"text":"(property) label: string","docs":"","start":313,"length":5,"line":11,"character":20,"targetString":"label"},{"text":"(property) value: string","docs":"","start":342,"length":5,"line":12,"character":8,"targetString":"value"},{"text":"(property) label: string","docs":"","start":354,"length":5,"line":12,"character":20,"targetString":"label"},{"text":"(property) key: string","docs":"","start":393,"length":3,"line":16,"character":4,"targetString":"key"},{"text":"(property) values: {\n    value: string;\n    label: string;\n}[]","docs":"","start":409,"length":6,"line":17,"character":4,"targetString":"values"},{"text":"(property) value: string","docs":"","start":427,"length":5,"line":18,"character":8,"targetString":"value"},{"text":"(property) label: string","docs":"","start":439,"length":5,"line":18,"character":20,"targetString":"label"},{"text":"(property) value: string","docs":"","start":467,"length":5,"line":19,"character":8,"targetString":"value"},{"text":"(property) label: string","docs":"","start":479,"length":5,"line":19,"character":20,"targetString":"label"},{"text":"const day: string[]","docs":"","start":523,"length":3,"line":23,"character":7,"targetString":"day"},{"text":"const setDay: React.Dispatch<React.SetStateAction<string[]>>","docs":"","start":528,"length":6,"line":23,"character":12,"targetString":"setDay"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":538,"length":5,"line":23,"character":22,"targetString":"React"},{"text":"function React.useState<string[]>(initialState: string[] | (() => string[])): [string[], React.Dispatch<React.SetStateAction<string[]>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":544,"length":8,"line":23,"character":28,"targetString":"useState"},{"text":"const weeks: {\n    key: string;\n    values: {\n        value: string;\n        label: string;\n    }[];\n}[]","docs":"","start":577,"length":5,"line":26,"character":3,"targetString":"weeks"},{"text":"(method) Array<{ key: string; values: { value: string; label: string; }[]; }>.map<JSX.Element>(callbackfn: (value: {\n    key: string;\n    values: {\n        value: string;\n        label: string;\n    }[];\n}, index: number, array: {\n    key: string;\n    values: {\n        value: string;\n        label: string;\n    }[];\n}[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":583,"length":3,"line":26,"character":9,"targetString":"map"},{"text":"(parameter) pItem: {\n    key: string;\n    values: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":588,"length":5,"line":26,"character":14,"targetString":"pItem"},{"text":"(parameter) pIndex: number","docs":"","start":595,"length":6,"line":26,"character":21,"targetString":"pIndex"},{"text":"(alias) class Picker\nimport Picker","docs":"","start":613,"length":6,"line":27,"character":5,"targetString":"Picker"},{"text":"(JSX attribute) React.Attributes.key?: React.Key | null | undefined","docs":"","start":626,"length":3,"line":28,"character":6,"targetString":"key"},{"text":"(parameter) pItem: {\n    key: string;\n    values: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":631,"length":5,"line":28,"character":11,"targetString":"pItem"},{"text":"(property) key: string","docs":"","start":637,"length":3,"line":28,"character":17,"targetString":"key"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":648,"length":5,"line":29,"character":6,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":665,"length":5,"line":30,"character":8,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":685,"length":6,"line":31,"character":8,"targetString":"height"},{"text":"(JSX attribute) selectedValue?: string | undefined","docs":"Value matching value of one of the items.\nCan be a string or an integer.","start":713,"length":13,"line":33,"character":6,"targetString":"selectedValue"},{"text":"const day: string[]","docs":"","start":728,"length":3,"line":33,"character":21,"targetString":"day"},{"text":"(parameter) pIndex: number","docs":"","start":732,"length":6,"line":33,"character":25,"targetString":"pIndex"},{"text":"(parameter) pItem: {\n    key: string;\n    values: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":754,"length":5,"line":35,"character":7,"targetString":"pItem"},{"text":"(property) values: {\n    value: string;\n    label: string;\n}[]","docs":"","start":760,"length":6,"line":35,"character":13,"targetString":"values"},{"text":"(method) Array<{ value: string; label: string; }>.map<JSX.Element>(callbackfn: (value: {\n    value: string;\n    label: string;\n}, index: number, array: {\n    value: string;\n    label: string;\n}[]) => JSX.Element, thisArg?: any): JSX.Element[]","docs":"Calls a defined callback function on each element of an array, and returns an array that contains the results.","start":767,"length":3,"line":35,"character":20,"targetString":"map"},{"text":"(parameter) item: {\n    value: string;\n    label: string;\n}","docs":"","start":771,"length":4,"line":35,"character":24,"targetString":"item"},{"text":"(alias) class Picker\nimport Picker","docs":"","start":790,"length":6,"line":36,"character":9,"targetString":"Picker"},{"text":"(property) Picker.Item: React.ElementType<any>","docs":"","start":797,"length":4,"line":36,"character":16,"targetString":"Item"},{"text":"(JSX attribute) key: string","docs":"","start":812,"length":3,"line":37,"character":10,"targetString":"key"},{"text":"(parameter) pItem: {\n    key: string;\n    values: {\n        value: string;\n        label: string;\n    }[];\n}","docs":"","start":820,"length":5,"line":37,"character":18,"targetString":"pItem"},{"text":"(property) key: string","docs":"","start":826,"length":3,"line":37,"character":24,"targetString":"key"},{"text":"(parameter) item: {\n    value: string;\n    label: string;\n}","docs":"","start":833,"length":4,"line":37,"character":31,"targetString":"item"},{"text":"(property) value: string","docs":"","start":838,"length":5,"line":37,"character":36,"targetString":"value"},{"text":"(JSX attribute) value: string","docs":"","start":857,"length":5,"line":38,"character":10,"targetString":"value"},{"text":"(parameter) item: {\n    value: string;\n    label: string;\n}","docs":"","start":864,"length":4,"line":38,"character":17,"targetString":"item"},{"text":"(property) value: string","docs":"","start":869,"length":5,"line":38,"character":22,"targetString":"value"},{"text":"(JSX attribute) label: string","docs":"","start":886,"length":5,"line":39,"character":10,"targetString":"label"},{"text":"(parameter) item: {\n    value: string;\n    label: string;\n}","docs":"","start":893,"length":4,"line":39,"character":17,"targetString":"item"},{"text":"(property) label: string","docs":"","start":898,"length":5,"line":39,"character":22,"targetString":"label"},{"text":"(alias) class Picker\nimport Picker","docs":"","start":932,"length":6,"line":42,"character":6,"targetString":"Picker"}]],"/data-entry/slider":[[{"text":"(alias) class Slider\nimport Slider","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Slider"},{"text":"const value: number","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"value"},{"text":"const setValue: React.Dispatch<React.SetStateAction<number>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setValue"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<number>(initialState: number | (() => number)): [number, React.Dispatch<React.SetStateAction<number>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":89,"length":6,"line":4,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Horizontal: React.ElementType<SliderProps>","docs":"","start":96,"length":10,"line":4,"character":8,"targetString":"Horizontal"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":109,"length":5,"line":5,"character":2,"targetString":"theme"},{"text":"(property) width?: number | undefined","docs":"","start":122,"length":5,"line":6,"character":4,"targetString":"width"},{"text":"(property) height: number","docs":"","start":138,"length":6,"line":7,"character":4,"targetString":"height"},{"text":"(property) trackRadius?: number | undefined","docs":"","start":153,"length":11,"line":8,"character":4,"targetString":"trackRadius"},{"text":"(property) trackHeight?: number | undefined","docs":"","start":173,"length":11,"line":9,"character":4,"targetString":"trackHeight"},{"text":"(property) thumbSize?: number | undefined","docs":"","start":193,"length":9,"line":10,"character":4,"targetString":"thumbSize"},{"text":"(property) thumbRadius?: number | undefined","docs":"","start":212,"length":11,"line":11,"character":4,"targetString":"thumbRadius"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":233,"length":14,"line":12,"character":4,"targetString":"thumbTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":261,"length":21,"line":13,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":299,"length":21,"line":14,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":340,"length":12,"line":16,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":361,"length":12,"line":17,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.style?: StyleProp<ViewStyle>","docs":"","start":380,"length":5,"line":18,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginBottom?: string | number | undefined","docs":"","start":389,"length":12,"line":18,"character":11,"targetString":"marginBottom"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":411,"length":5,"line":19,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":418,"length":5,"line":19,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":427,"length":17,"line":20,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) v: number","docs":"","start":446,"length":1,"line":20,"character":21,"targetString":"v"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":451,"length":8,"line":20,"character":26,"targetString":"setValue"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":460,"length":4,"line":20,"character":35,"targetString":"Math"},{"text":"(method) Math.round(x: number): number","docs":"Returns a supplied numeric expression rounded to the nearest integer.","start":465,"length":5,"line":20,"character":40,"targetString":"round"},{"text":"(parameter) v: number","docs":"","start":471,"length":1,"line":20,"character":46,"targetString":"v"}],[{"text":"(alias) class Slider\nimport Slider","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Slider"},{"text":"const value: number","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"value"},{"text":"const setValue: React.Dispatch<React.SetStateAction<number>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setValue"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<number>(initialState: number | (() => number)): [number, React.Dispatch<React.SetStateAction<number>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":89,"length":6,"line":4,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Horizontal: React.ElementType<SliderProps>","docs":"","start":96,"length":10,"line":4,"character":8,"targetString":"Horizontal"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":109,"length":5,"line":5,"character":2,"targetString":"theme"},{"text":"(property) width?: number | undefined","docs":"","start":122,"length":5,"line":6,"character":4,"targetString":"width"},{"text":"(property) height: number","docs":"","start":138,"length":6,"line":7,"character":4,"targetString":"height"},{"text":"(property) trackRadius?: number | undefined","docs":"","start":154,"length":11,"line":8,"character":4,"targetString":"trackRadius"},{"text":"(property) trackHeight?: number | undefined","docs":"","start":175,"length":11,"line":9,"character":4,"targetString":"trackHeight"},{"text":"(property) thumbSize?: number | undefined","docs":"","start":196,"length":9,"line":10,"character":4,"targetString":"thumbSize"},{"text":"(property) thumbRadius?: number | undefined","docs":"","start":215,"length":11,"line":11,"character":4,"targetString":"thumbRadius"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":236,"length":14,"line":12,"character":4,"targetString":"thumbTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":264,"length":21,"line":13,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":302,"length":21,"line":14,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(JSX attribute) SliderProps.trackStyle?: StyleProp<ViewStyle>","docs":"","start":343,"length":10,"line":16,"character":2,"targetString":"trackStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":361,"length":6,"line":17,"character":4,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":377,"length":12,"line":18,"character":4,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":402,"length":12,"line":20,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":423,"length":12,"line":21,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.thumbTouchSize?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":442,"length":14,"line":22,"character":2,"targetString":"thumbTouchSize"},{"text":"(property) width: number","docs":"","start":460,"length":5,"line":22,"character":20,"targetString":"width"},{"text":"(property) height: number","docs":"","start":471,"length":6,"line":22,"character":31,"targetString":"height"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":487,"length":5,"line":23,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":494,"length":5,"line":23,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.style?: StyleProp<ViewStyle>","docs":"","start":503,"length":5,"line":24,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginBottom?: string | number | undefined","docs":"","start":512,"length":12,"line":24,"character":11,"targetString":"marginBottom"},{"text":"(JSX attribute) SliderProps.type?: \"normal\" | \"parcel\" | undefined","docs":"","start":534,"length":4,"line":25,"character":2,"targetString":"type"},{"text":"(JSX attribute) SliderProps.renderMinimumTrack?: (() => React.ReactNode) | undefined","docs":"","start":550,"length":18,"line":26,"character":2,"targetString":"renderMinimumTrack"},{"text":"(JSX attribute) style: {\n    height: number;\n    borderRadius: number;\n    backgroundColor: string;\n    marginHorizontal: number;\n}","docs":"","start":594,"length":5,"line":28,"character":6,"targetString":"style"},{"text":"(property) height: number","docs":"","start":611,"length":6,"line":29,"character":8,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":631,"length":12,"line":30,"character":8,"targetString":"borderRadius"},{"text":"(property) backgroundColor: string","docs":"","start":657,"length":15,"line":31,"character":8,"targetString":"backgroundColor"},{"text":"(property) marginHorizontal: number","docs":"","start":693,"length":16,"line":32,"character":8,"targetString":"marginHorizontal"},{"text":"(JSX attribute) SliderProps.onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":737,"length":17,"line":36,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) v: number","docs":"","start":756,"length":1,"line":36,"character":21,"targetString":"v"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":761,"length":8,"line":36,"character":26,"targetString":"setValue"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":770,"length":4,"line":36,"character":35,"targetString":"Math"},{"text":"(method) Math.round(x: number): number","docs":"Returns a supplied numeric expression rounded to the nearest integer.","start":775,"length":5,"line":36,"character":40,"targetString":"round"},{"text":"(parameter) v: number","docs":"","start":781,"length":1,"line":36,"character":46,"targetString":"v"}],[{"text":"(alias) class Slider\nimport Slider","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Slider"},{"text":"const value: number","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"value"},{"text":"const setValue: React.Dispatch<React.SetStateAction<number>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setValue"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<number>(initialState: number | (() => number)): [number, React.Dispatch<React.SetStateAction<number>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":89,"length":6,"line":4,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Horizontal: React.ElementType<SliderProps>","docs":"","start":96,"length":10,"line":4,"character":8,"targetString":"Horizontal"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":109,"length":5,"line":5,"character":2,"targetString":"theme"},{"text":"(property) width?: number | undefined","docs":"","start":122,"length":5,"line":6,"character":4,"targetString":"width"},{"text":"(property) height: number","docs":"","start":138,"length":6,"line":7,"character":4,"targetString":"height"},{"text":"(property) trackRadius?: number | undefined","docs":"","start":154,"length":11,"line":8,"character":4,"targetString":"trackRadius"},{"text":"(property) trackHeight?: number | undefined","docs":"","start":175,"length":11,"line":9,"character":4,"targetString":"trackHeight"},{"text":"(property) thumbSize?: number | undefined","docs":"","start":196,"length":9,"line":10,"character":4,"targetString":"thumbSize"},{"text":"(property) thumbRadius?: number | undefined","docs":"","start":215,"length":11,"line":11,"character":4,"targetString":"thumbRadius"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":236,"length":14,"line":12,"character":4,"targetString":"thumbTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":267,"length":21,"line":13,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":305,"length":21,"line":14,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(JSX attribute) SliderProps.trackStyle?: StyleProp<ViewStyle>","docs":"","start":346,"length":10,"line":16,"character":2,"targetString":"trackStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":364,"length":6,"line":17,"character":4,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":380,"length":12,"line":18,"character":4,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":404,"length":5,"line":20,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":411,"length":5,"line":20,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":420,"length":12,"line":21,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":441,"length":12,"line":22,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.style?: StyleProp<ViewStyle>","docs":"","start":460,"length":5,"line":23,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginBottom?: string | number | undefined","docs":"","start":469,"length":12,"line":23,"character":11,"targetString":"marginBottom"},{"text":"(JSX attribute) SliderProps.thumbTouchSize?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":491,"length":14,"line":24,"character":2,"targetString":"thumbTouchSize"},{"text":"(property) width: number","docs":"","start":509,"length":5,"line":24,"character":20,"targetString":"width"},{"text":"(property) height: number","docs":"","start":520,"length":6,"line":24,"character":31,"targetString":"height"},{"text":"(JSX attribute) SliderProps.thumbStyle?: StyleProp<ViewStyle>","docs":"","start":536,"length":10,"line":25,"character":2,"targetString":"thumbStyle"},{"text":"(property) ShadowStyleIOS.shadowOffset?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":554,"length":12,"line":26,"character":4,"targetString":"shadowOffset"},{"text":"(property) width: number","docs":"","start":576,"length":5,"line":27,"character":6,"targetString":"width"},{"text":"(property) height: number","docs":"","start":592,"length":6,"line":28,"character":6,"targetString":"height"},{"text":"(property) ShadowStyleIOS.shadowOpacity?: number | undefined","docs":"","start":614,"length":13,"line":30,"character":4,"targetString":"shadowOpacity"},{"text":"(property) ShadowStyleIOS.shadowRadius?: number | undefined","docs":"","start":636,"length":12,"line":31,"character":4,"targetString":"shadowRadius"},{"text":"(property) ViewStyle.elevation?: number | undefined","docs":"Sets the elevation of a view, using Android's underlying\n[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\nThis adds a drop shadow to the item and affects z-order for overlapping views.\nOnly supported on Android 5.0+, has no effect on earlier versions.","start":657,"length":9,"line":32,"character":4,"targetString":"elevation"},{"text":"(property) FlexStyle.justifyContent?: \"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\" | undefined","docs":"","start":675,"length":14,"line":33,"character":4,"targetString":"justifyContent"},{"text":"(property) FlexStyle.alignItems?: FlexAlignType | undefined","docs":"","start":705,"length":10,"line":34,"character":4,"targetString":"alignItems"},{"text":"(JSX attribute) SliderProps.type?: \"normal\" | \"parcel\" | undefined","docs":"","start":736,"length":4,"line":36,"character":2,"targetString":"type"},{"text":"(JSX attribute) SliderProps.renderMinimumTrack?: (() => React.ReactNode) | undefined","docs":"","start":752,"length":18,"line":37,"character":2,"targetString":"renderMinimumTrack"},{"text":"(JSX attribute) style: {\n    height: number;\n    borderRadius: number;\n    backgroundColor: string;\n    marginHorizontal: number;\n}","docs":"","start":796,"length":5,"line":39,"character":6,"targetString":"style"},{"text":"(property) height: number","docs":"","start":813,"length":6,"line":40,"character":8,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":833,"length":12,"line":41,"character":8,"targetString":"borderRadius"},{"text":"(property) backgroundColor: string","docs":"","start":858,"length":15,"line":42,"character":8,"targetString":"backgroundColor"},{"text":"(property) marginHorizontal: number","docs":"","start":894,"length":16,"line":43,"character":8,"targetString":"marginHorizontal"},{"text":"(JSX attribute) SliderProps.renderThumb?: (() => React.ReactNode) | undefined","docs":"","start":938,"length":11,"line":47,"character":2,"targetString":"renderThumb"},{"text":"(JSX attribute) style: {\n    height: number;\n    borderRadius: number;\n    width: number;\n    backgroundColor: string;\n}","docs":"","start":975,"length":5,"line":49,"character":6,"targetString":"style"},{"text":"(property) height: number","docs":"","start":992,"length":6,"line":50,"character":8,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":1012,"length":12,"line":51,"character":8,"targetString":"borderRadius"},{"text":"(property) width: number","docs":"","start":1039,"length":5,"line":52,"character":8,"targetString":"width"},{"text":"(property) backgroundColor: string","docs":"","start":1057,"length":15,"line":53,"character":8,"targetString":"backgroundColor"},{"text":"(JSX attribute) SliderProps.onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":1105,"length":17,"line":57,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) v: number","docs":"","start":1124,"length":1,"line":57,"character":21,"targetString":"v"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":1129,"length":8,"line":57,"character":26,"targetString":"setValue"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":1138,"length":4,"line":57,"character":35,"targetString":"Math"},{"text":"(method) Math.round(x: number): number","docs":"Returns a supplied numeric expression rounded to the nearest integer.","start":1143,"length":5,"line":57,"character":40,"targetString":"round"},{"text":"(parameter) v: number","docs":"","start":1149,"length":1,"line":57,"character":46,"targetString":"v"}],[{"text":"(alias) class Slider\nimport Slider","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Slider"},{"text":"const value: number","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"value"},{"text":"const setValue: React.Dispatch<React.SetStateAction<number>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setValue"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<number>(initialState: number | (() => number)): [number, React.Dispatch<React.SetStateAction<number>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":89,"length":6,"line":4,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Horizontal: React.ElementType<SliderProps>","docs":"","start":96,"length":10,"line":4,"character":8,"targetString":"Horizontal"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":109,"length":5,"line":5,"character":2,"targetString":"theme"},{"text":"(property) width?: number | undefined","docs":"","start":122,"length":5,"line":6,"character":4,"targetString":"width"},{"text":"(property) height: number","docs":"","start":138,"length":6,"line":7,"character":4,"targetString":"height"},{"text":"(property) trackRadius?: number | undefined","docs":"","start":154,"length":11,"line":8,"character":4,"targetString":"trackRadius"},{"text":"(property) trackHeight?: number | undefined","docs":"","start":175,"length":11,"line":9,"character":4,"targetString":"trackHeight"},{"text":"(property) thumbSize?: number | undefined","docs":"","start":196,"length":9,"line":10,"character":4,"targetString":"thumbSize"},{"text":"(property) thumbRadius?: number | undefined","docs":"","start":215,"length":11,"line":11,"character":4,"targetString":"thumbRadius"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":236,"length":14,"line":12,"character":4,"targetString":"thumbTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":267,"length":21,"line":13,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":305,"length":21,"line":14,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(JSX attribute) SliderProps.trackStyle?: StyleProp<ViewStyle>","docs":"","start":346,"length":10,"line":16,"character":2,"targetString":"trackStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":364,"length":6,"line":17,"character":4,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":380,"length":12,"line":18,"character":4,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":404,"length":5,"line":20,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":411,"length":5,"line":20,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.style?: StyleProp<ViewStyle>","docs":"","start":420,"length":5,"line":21,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginBottom?: string | number | undefined","docs":"","start":429,"length":12,"line":21,"character":11,"targetString":"marginBottom"},{"text":"(JSX attribute) SliderProps.thumbTouchSize?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":451,"length":14,"line":22,"character":2,"targetString":"thumbTouchSize"},{"text":"(property) width: number","docs":"","start":469,"length":5,"line":22,"character":20,"targetString":"width"},{"text":"(property) height: number","docs":"","start":480,"length":6,"line":22,"character":31,"targetString":"height"},{"text":"(JSX attribute) SliderProps.stepValue?: number | undefined","docs":"","start":496,"length":9,"line":23,"character":2,"targetString":"stepValue"},{"text":"(JSX attribute) SliderProps.thumbStyle?: StyleProp<ViewStyle>","docs":"","start":513,"length":10,"line":24,"character":2,"targetString":"thumbStyle"},{"text":"(property) ShadowStyleIOS.shadowOffset?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":531,"length":12,"line":25,"character":4,"targetString":"shadowOffset"},{"text":"(property) width: number","docs":"","start":553,"length":5,"line":26,"character":6,"targetString":"width"},{"text":"(property) height: number","docs":"","start":569,"length":6,"line":27,"character":6,"targetString":"height"},{"text":"(property) ShadowStyleIOS.shadowOpacity?: number | undefined","docs":"","start":591,"length":13,"line":29,"character":4,"targetString":"shadowOpacity"},{"text":"(property) ShadowStyleIOS.shadowRadius?: number | undefined","docs":"","start":613,"length":12,"line":30,"character":4,"targetString":"shadowRadius"},{"text":"(property) ViewStyle.elevation?: number | undefined","docs":"Sets the elevation of a view, using Android's underlying\n[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\nThis adds a drop shadow to the item and affects z-order for overlapping views.\nOnly supported on Android 5.0+, has no effect on earlier versions.","start":634,"length":9,"line":31,"character":4,"targetString":"elevation"},{"text":"(property) FlexStyle.justifyContent?: \"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\" | undefined","docs":"","start":652,"length":14,"line":32,"character":4,"targetString":"justifyContent"},{"text":"(property) FlexStyle.alignItems?: FlexAlignType | undefined","docs":"","start":682,"length":10,"line":33,"character":4,"targetString":"alignItems"},{"text":"(JSX attribute) SliderProps.type?: \"normal\" | \"parcel\" | undefined","docs":"","start":711,"length":4,"line":35,"character":2,"targetString":"type"},{"text":"(JSX attribute) SliderProps.useNoun?: boolean | undefined","docs":"","start":727,"length":7,"line":36,"character":2,"targetString":"useNoun"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":744,"length":12,"line":37,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":765,"length":12,"line":38,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.minNounStyle?: StyleProp<ViewStyle>","docs":"","start":784,"length":12,"line":39,"character":2,"targetString":"minNounStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":800,"length":15,"line":39,"character":18,"targetString":"backgroundColor"},{"text":"(JSX attribute) SliderProps.maxNounStyle?: StyleProp<ViewStyle>","docs":"","start":830,"length":12,"line":40,"character":2,"targetString":"maxNounStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":846,"length":15,"line":40,"character":18,"targetString":"backgroundColor"},{"text":"(JSX attribute) SliderProps.onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":878,"length":17,"line":41,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) v: number","docs":"","start":897,"length":1,"line":41,"character":21,"targetString":"v"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":902,"length":8,"line":41,"character":26,"targetString":"setValue"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":911,"length":4,"line":41,"character":35,"targetString":"Math"},{"text":"(method) Math.round(x: number): number","docs":"Returns a supplied numeric expression rounded to the nearest integer.","start":916,"length":5,"line":41,"character":40,"targetString":"round"},{"text":"(parameter) v: number","docs":"","start":922,"length":1,"line":41,"character":46,"targetString":"v"}],[{"text":"(alias) class Slider\nimport Slider","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Slider"},{"text":"const value: number","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"value"},{"text":"const setValue: React.Dispatch<React.SetStateAction<number>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setValue"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<number>(initialState: number | (() => number)): [number, React.Dispatch<React.SetStateAction<number>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":89,"length":6,"line":4,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Horizontal: React.ElementType<SliderProps>","docs":"","start":96,"length":10,"line":4,"character":8,"targetString":"Horizontal"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":109,"length":5,"line":5,"character":2,"targetString":"theme"},{"text":"(property) width?: number | undefined","docs":"","start":122,"length":5,"line":6,"character":4,"targetString":"width"},{"text":"(property) height: number","docs":"","start":138,"length":6,"line":7,"character":4,"targetString":"height"},{"text":"(property) trackRadius?: number | undefined","docs":"","start":153,"length":11,"line":8,"character":4,"targetString":"trackRadius"},{"text":"(property) trackHeight?: number | undefined","docs":"","start":173,"length":11,"line":9,"character":4,"targetString":"trackHeight"},{"text":"(property) thumbSize?: number | undefined","docs":"","start":193,"length":9,"line":10,"character":4,"targetString":"thumbSize"},{"text":"(property) thumbRadius?: number | undefined","docs":"","start":212,"length":11,"line":11,"character":4,"targetString":"thumbRadius"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":233,"length":14,"line":12,"character":4,"targetString":"thumbTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":261,"length":21,"line":13,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":299,"length":21,"line":14,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(JSX attribute) SliderProps.trackStyle?: StyleProp<ViewStyle>","docs":"","start":340,"length":10,"line":16,"character":2,"targetString":"trackStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":354,"length":6,"line":16,"character":16,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":366,"length":12,"line":16,"character":28,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":387,"length":5,"line":17,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":394,"length":5,"line":17,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.stepValue?: number | undefined","docs":"","start":403,"length":9,"line":18,"character":2,"targetString":"stepValue"},{"text":"(JSX attribute) SliderProps.useNoun?: boolean | undefined","docs":"","start":420,"length":7,"line":19,"character":2,"targetString":"useNoun"},{"text":"(JSX attribute) SliderProps.thumbStyle?: StyleProp<ViewStyle>","docs":"","start":437,"length":10,"line":20,"character":2,"targetString":"thumbStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":451,"length":6,"line":20,"character":16,"targetString":"height"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":463,"length":5,"line":20,"character":28,"targetString":"width"},{"text":"(JSX attribute) SliderProps.minNounStyle?: StyleProp<ViewStyle>","docs":"","start":478,"length":12,"line":21,"character":2,"targetString":"minNounStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":498,"length":15,"line":22,"character":4,"targetString":"backgroundColor"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":528,"length":6,"line":23,"character":4,"targetString":"height"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":543,"length":5,"line":24,"character":4,"targetString":"width"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":557,"length":12,"line":25,"character":4,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.maxNounStyle?: StyleProp<ViewStyle>","docs":"","start":583,"length":12,"line":27,"character":2,"targetString":"maxNounStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":603,"length":15,"line":28,"character":4,"targetString":"backgroundColor"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":635,"length":6,"line":29,"character":4,"targetString":"height"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":650,"length":5,"line":30,"character":4,"targetString":"width"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":664,"length":12,"line":31,"character":4,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.type?: \"normal\" | \"parcel\" | undefined","docs":"","start":690,"length":4,"line":33,"character":2,"targetString":"type"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":706,"length":12,"line":34,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":727,"length":12,"line":35,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.onValueChange?: ((newValue: number) => void) | undefined","docs":"","start":746,"length":13,"line":36,"character":2,"targetString":"onValueChange"},{"text":"(parameter) value: number","docs":"","start":761,"length":5,"line":36,"character":17,"targetString":"value"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":770,"length":8,"line":36,"character":26,"targetString":"setValue"},{"text":"(parameter) value: number","docs":"","start":779,"length":5,"line":36,"character":35,"targetString":"value"}],[{"text":"(alias) class Slider\nimport Slider","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Slider"},{"text":"const value: number","docs":"","start":48,"length":5,"line":2,"character":7,"targetString":"value"},{"text":"const setValue: React.Dispatch<React.SetStateAction<number>>","docs":"","start":55,"length":8,"line":2,"character":14,"targetString":"setValue"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":67,"length":5,"line":2,"character":26,"targetString":"React"},{"text":"function React.useState<number>(initialState: number | (() => number)): [number, React.Dispatch<React.SetStateAction<number>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":73,"length":8,"line":2,"character":32,"targetString":"useState"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":99,"length":6,"line":5,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Vertical: React.ElementType<SliderProps>","docs":"","start":106,"length":8,"line":5,"character":8,"targetString":"Vertical"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":117,"length":5,"line":6,"character":2,"targetString":"theme"},{"text":"(property) thumbSize?: number | undefined","docs":"","start":130,"length":9,"line":7,"character":4,"targetString":"thumbSize"},{"text":"(property) thumbRadius?: number | undefined","docs":"","start":149,"length":11,"line":8,"character":4,"targetString":"thumbRadius"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":170,"length":14,"line":9,"character":4,"targetString":"thumbTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":198,"length":21,"line":10,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":236,"length":21,"line":11,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":277,"length":12,"line":13,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":298,"length":12,"line":14,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.reverseValue?: boolean | undefined","docs":"","start":317,"length":12,"line":15,"character":2,"targetString":"reverseValue"},{"text":"(JSX attribute) SliderProps.trackStyle?: StyleProp<ViewStyle>","docs":"","start":339,"length":10,"line":16,"character":2,"targetString":"trackStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":353,"length":5,"line":16,"character":16,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":363,"length":6,"line":16,"character":26,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":376,"length":12,"line":16,"character":39,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":397,"length":5,"line":17,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":404,"length":5,"line":17,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":413,"length":17,"line":18,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) v: number","docs":"","start":432,"length":1,"line":18,"character":21,"targetString":"v"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":437,"length":8,"line":18,"character":26,"targetString":"setValue"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":446,"length":4,"line":18,"character":35,"targetString":"Math"},{"text":"(method) Math.round(x: number): number","docs":"Returns a supplied numeric expression rounded to the nearest integer.","start":451,"length":5,"line":18,"character":40,"targetString":"round"},{"text":"(parameter) v: number","docs":"","start":457,"length":1,"line":18,"character":46,"targetString":"v"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":476,"length":6,"line":21,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Vertical: React.ElementType<SliderProps>","docs":"","start":483,"length":8,"line":21,"character":8,"targetString":"Vertical"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":494,"length":5,"line":22,"character":2,"targetString":"theme"},{"text":"(property) thumbSize?: number | undefined","docs":"","start":507,"length":9,"line":23,"character":4,"targetString":"thumbSize"},{"text":"(property) thumbRadius?: number | undefined","docs":"","start":526,"length":11,"line":24,"character":4,"targetString":"thumbRadius"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":547,"length":14,"line":25,"character":4,"targetString":"thumbTintColor"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":575,"length":21,"line":26,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":613,"length":21,"line":27,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(JSX attribute) SliderProps.type?: \"normal\" | \"parcel\" | undefined","docs":"","start":654,"length":4,"line":29,"character":2,"targetString":"type"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":670,"length":12,"line":30,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":691,"length":12,"line":31,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.reverseValue?: boolean | undefined","docs":"","start":710,"length":12,"line":32,"character":2,"targetString":"reverseValue"},{"text":"(JSX attribute) SliderProps.trackStyle?: StyleProp<ViewStyle>","docs":"","start":732,"length":10,"line":33,"character":2,"targetString":"trackStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":746,"length":5,"line":33,"character":16,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":757,"length":6,"line":33,"character":27,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":770,"length":12,"line":33,"character":40,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.style?: StyleProp<ViewStyle>","docs":"","start":792,"length":5,"line":34,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginHorizontal?: string | number | undefined","docs":"","start":801,"length":16,"line":34,"character":11,"targetString":"marginHorizontal"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":827,"length":5,"line":35,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":834,"length":5,"line":35,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.thumbTouchSize?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":843,"length":14,"line":36,"character":2,"targetString":"thumbTouchSize"},{"text":"(property) width: number","docs":"","start":861,"length":5,"line":36,"character":20,"targetString":"width"},{"text":"(property) height: number","docs":"","start":872,"length":6,"line":36,"character":31,"targetString":"height"},{"text":"(JSX attribute) SliderProps.renderMinimumTrack?: (() => React.ReactNode) | undefined","docs":"","start":888,"length":18,"line":37,"character":2,"targetString":"renderMinimumTrack"},{"text":"(JSX attribute) style: {\n    width: number;\n    borderRadius: number;\n    backgroundColor: string;\n    marginVertical: number;\n    flex: number;\n}","docs":"","start":932,"length":5,"line":39,"character":6,"targetString":"style"},{"text":"(property) width: number","docs":"","start":949,"length":5,"line":40,"character":8,"targetString":"width"},{"text":"(property) borderRadius: number","docs":"","start":968,"length":12,"line":41,"character":8,"targetString":"borderRadius"},{"text":"(property) backgroundColor: string","docs":"","start":994,"length":15,"line":42,"character":8,"targetString":"backgroundColor"},{"text":"(property) marginVertical: number","docs":"","start":1030,"length":14,"line":43,"character":8,"targetString":"marginVertical"},{"text":"(property) flex: number","docs":"","start":1057,"length":4,"line":44,"character":8,"targetString":"flex"},{"text":"(JSX attribute) SliderProps.onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":1089,"length":17,"line":48,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) v: number","docs":"","start":1108,"length":1,"line":48,"character":21,"targetString":"v"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":1113,"length":8,"line":48,"character":26,"targetString":"setValue"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":1122,"length":4,"line":48,"character":35,"targetString":"Math"},{"text":"(method) Math.round(x: number): number","docs":"Returns a supplied numeric expression rounded to the nearest integer.","start":1127,"length":5,"line":48,"character":40,"targetString":"round"},{"text":"(parameter) v: number","docs":"","start":1133,"length":1,"line":48,"character":46,"targetString":"v"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":1152,"length":6,"line":51,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Vertical: React.ElementType<SliderProps>","docs":"","start":1159,"length":8,"line":51,"character":8,"targetString":"Vertical"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":1170,"length":5,"line":52,"character":2,"targetString":"theme"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":1183,"length":21,"line":53,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":1221,"length":21,"line":54,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(JSX attribute) SliderProps.type?: \"normal\" | \"parcel\" | undefined","docs":"","start":1262,"length":4,"line":56,"character":2,"targetString":"type"},{"text":"(JSX attribute) SliderProps.trackStyle?: StyleProp<ViewStyle>","docs":"","start":1278,"length":10,"line":57,"character":2,"targetString":"trackStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":1292,"length":5,"line":57,"character":16,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":1303,"length":6,"line":57,"character":27,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":1316,"length":12,"line":57,"character":40,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.style?: StyleProp<ViewStyle>","docs":"","start":1337,"length":5,"line":58,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginHorizontal?: string | number | undefined","docs":"","start":1346,"length":16,"line":58,"character":11,"targetString":"marginHorizontal"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":1372,"length":5,"line":59,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":1379,"length":5,"line":59,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":1388,"length":12,"line":60,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":1409,"length":12,"line":61,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.reverseValue?: boolean | undefined","docs":"","start":1428,"length":12,"line":62,"character":2,"targetString":"reverseValue"},{"text":"(JSX attribute) SliderProps.thumbTouchSize?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":1450,"length":14,"line":63,"character":2,"targetString":"thumbTouchSize"},{"text":"(property) width: number","docs":"","start":1468,"length":5,"line":63,"character":20,"targetString":"width"},{"text":"(property) height: number","docs":"","start":1479,"length":6,"line":63,"character":31,"targetString":"height"},{"text":"(JSX attribute) SliderProps.thumbStyle?: StyleProp<ViewStyle>","docs":"","start":1495,"length":10,"line":64,"character":2,"targetString":"thumbStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":1513,"length":5,"line":65,"character":4,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":1528,"length":6,"line":66,"character":4,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":1543,"length":12,"line":67,"character":4,"targetString":"borderRadius"},{"text":"(property) ShadowStyleIOS.shadowOffset?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":1566,"length":12,"line":68,"character":4,"targetString":"shadowOffset"},{"text":"(property) width: number","docs":"","start":1588,"length":5,"line":69,"character":6,"targetString":"width"},{"text":"(property) height: number","docs":"","start":1604,"length":6,"line":70,"character":6,"targetString":"height"},{"text":"(property) ShadowStyleIOS.shadowOpacity?: number | undefined","docs":"","start":1626,"length":13,"line":72,"character":4,"targetString":"shadowOpacity"},{"text":"(property) ShadowStyleIOS.shadowRadius?: number | undefined","docs":"","start":1648,"length":12,"line":73,"character":4,"targetString":"shadowRadius"},{"text":"(property) ViewStyle.elevation?: number | undefined","docs":"Sets the elevation of a view, using Android's underlying\n[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\nThis adds a drop shadow to the item and affects z-order for overlapping views.\nOnly supported on Android 5.0+, has no effect on earlier versions.","start":1669,"length":9,"line":74,"character":4,"targetString":"elevation"},{"text":"(property) FlexStyle.justifyContent?: \"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\" | undefined","docs":"","start":1687,"length":14,"line":75,"character":4,"targetString":"justifyContent"},{"text":"(property) FlexStyle.alignItems?: FlexAlignType | undefined","docs":"","start":1717,"length":10,"line":76,"character":4,"targetString":"alignItems"},{"text":"(JSX attribute) SliderProps.renderMinimumTrack?: (() => React.ReactNode) | undefined","docs":"","start":1746,"length":18,"line":78,"character":2,"targetString":"renderMinimumTrack"},{"text":"(JSX attribute) style: {\n    width: number;\n    borderRadius: number;\n    backgroundColor: string;\n    marginVertical: number;\n    flex: number;\n}","docs":"","start":1790,"length":5,"line":80,"character":6,"targetString":"style"},{"text":"(property) width: number","docs":"","start":1807,"length":5,"line":81,"character":8,"targetString":"width"},{"text":"(property) borderRadius: number","docs":"","start":1826,"length":12,"line":82,"character":8,"targetString":"borderRadius"},{"text":"(property) backgroundColor: string","docs":"","start":1851,"length":15,"line":83,"character":8,"targetString":"backgroundColor"},{"text":"(property) marginVertical: number","docs":"","start":1887,"length":14,"line":84,"character":8,"targetString":"marginVertical"},{"text":"(property) flex: number","docs":"","start":1914,"length":4,"line":85,"character":8,"targetString":"flex"},{"text":"(JSX attribute) SliderProps.renderThumb?: (() => React.ReactNode) | undefined","docs":"","start":1946,"length":11,"line":89,"character":2,"targetString":"renderThumb"},{"text":"(JSX attribute) style: {\n    height: number;\n    borderRadius: number;\n    width: number;\n    backgroundColor: string;\n    flex: number;\n}","docs":"","start":1983,"length":5,"line":91,"character":6,"targetString":"style"},{"text":"(property) height: number","docs":"","start":2000,"length":6,"line":92,"character":8,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":2019,"length":12,"line":93,"character":8,"targetString":"borderRadius"},{"text":"(property) width: number","docs":"","start":2046,"length":5,"line":94,"character":8,"targetString":"width"},{"text":"(property) backgroundColor: string","docs":"","start":2065,"length":15,"line":95,"character":8,"targetString":"backgroundColor"},{"text":"(property) flex: number","docs":"","start":2098,"length":4,"line":96,"character":8,"targetString":"flex"},{"text":"(JSX attribute) SliderProps.onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":2130,"length":17,"line":100,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) v: number","docs":"","start":2149,"length":1,"line":100,"character":21,"targetString":"v"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":2154,"length":8,"line":100,"character":26,"targetString":"setValue"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":2163,"length":4,"line":100,"character":35,"targetString":"Math"},{"text":"(method) Math.round(x: number): number","docs":"Returns a supplied numeric expression rounded to the nearest integer.","start":2168,"length":5,"line":100,"character":40,"targetString":"round"},{"text":"(parameter) v: number","docs":"","start":2174,"length":1,"line":100,"character":46,"targetString":"v"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":2193,"length":6,"line":103,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Vertical: React.ElementType<SliderProps>","docs":"","start":2200,"length":8,"line":103,"character":8,"targetString":"Vertical"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":2211,"length":5,"line":104,"character":2,"targetString":"theme"},{"text":"(property) thumbSize?: number | undefined","docs":"","start":2224,"length":9,"line":105,"character":4,"targetString":"thumbSize"},{"text":"(property) thumbRadius?: number | undefined","docs":"","start":2243,"length":11,"line":106,"character":4,"targetString":"thumbRadius"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":2264,"length":14,"line":107,"character":4,"targetString":"thumbTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":2295,"length":21,"line":108,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":2333,"length":21,"line":109,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(JSX attribute) SliderProps.type?: \"normal\" | \"parcel\" | undefined","docs":"","start":2374,"length":4,"line":111,"character":2,"targetString":"type"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":2390,"length":12,"line":112,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":2411,"length":12,"line":113,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.reverseValue?: boolean | undefined","docs":"","start":2430,"length":12,"line":114,"character":2,"targetString":"reverseValue"},{"text":"(JSX attribute) SliderProps.trackStyle?: StyleProp<ViewStyle>","docs":"","start":2452,"length":10,"line":115,"character":2,"targetString":"trackStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":2466,"length":5,"line":115,"character":16,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":2477,"length":6,"line":115,"character":27,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":2490,"length":12,"line":115,"character":40,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.thumbTouchSize?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":2511,"length":14,"line":116,"character":2,"targetString":"thumbTouchSize"},{"text":"(property) width: number","docs":"","start":2529,"length":5,"line":116,"character":20,"targetString":"width"},{"text":"(property) height: number","docs":"","start":2540,"length":6,"line":116,"character":31,"targetString":"height"},{"text":"(JSX attribute) SliderProps.style?: StyleProp<ViewStyle>","docs":"","start":2556,"length":5,"line":117,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginHorizontal?: string | number | undefined","docs":"","start":2565,"length":16,"line":117,"character":11,"targetString":"marginHorizontal"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":2591,"length":5,"line":118,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":2598,"length":5,"line":118,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.thumbStyle?: StyleProp<ViewStyle>","docs":"","start":2607,"length":10,"line":119,"character":2,"targetString":"thumbStyle"},{"text":"(property) ShadowStyleIOS.shadowOffset?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":2625,"length":12,"line":120,"character":4,"targetString":"shadowOffset"},{"text":"(property) width: number","docs":"","start":2647,"length":5,"line":121,"character":6,"targetString":"width"},{"text":"(property) height: number","docs":"","start":2663,"length":6,"line":122,"character":6,"targetString":"height"},{"text":"(property) ShadowStyleIOS.shadowOpacity?: number | undefined","docs":"","start":2685,"length":13,"line":124,"character":4,"targetString":"shadowOpacity"},{"text":"(property) ShadowStyleIOS.shadowRadius?: number | undefined","docs":"","start":2707,"length":12,"line":125,"character":4,"targetString":"shadowRadius"},{"text":"(property) ViewStyle.elevation?: number | undefined","docs":"Sets the elevation of a view, using Android's underlying\n[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\nThis adds a drop shadow to the item and affects z-order for overlapping views.\nOnly supported on Android 5.0+, has no effect on earlier versions.","start":2728,"length":9,"line":126,"character":4,"targetString":"elevation"},{"text":"(property) FlexStyle.justifyContent?: \"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\" | undefined","docs":"","start":2746,"length":14,"line":127,"character":4,"targetString":"justifyContent"},{"text":"(property) FlexStyle.alignItems?: FlexAlignType | undefined","docs":"","start":2776,"length":10,"line":128,"character":4,"targetString":"alignItems"},{"text":"(JSX attribute) SliderProps.useNoun?: boolean | undefined","docs":"","start":2805,"length":7,"line":130,"character":2,"targetString":"useNoun"},{"text":"(JSX attribute) SliderProps.stepValue?: number | undefined","docs":"","start":2822,"length":9,"line":131,"character":2,"targetString":"stepValue"},{"text":"(JSX attribute) SliderProps.minNounStyle?: StyleProp<ViewStyle>","docs":"","start":2839,"length":12,"line":132,"character":2,"targetString":"minNounStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":2855,"length":15,"line":132,"character":18,"targetString":"backgroundColor"},{"text":"(JSX attribute) SliderProps.maxNounStyle?: StyleProp<ViewStyle>","docs":"","start":2885,"length":12,"line":133,"character":2,"targetString":"maxNounStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":2901,"length":15,"line":133,"character":18,"targetString":"backgroundColor"},{"text":"(JSX attribute) SliderProps.onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":2933,"length":17,"line":134,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) v: number","docs":"","start":2952,"length":1,"line":134,"character":21,"targetString":"v"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":2957,"length":8,"line":134,"character":26,"targetString":"setValue"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":2966,"length":4,"line":134,"character":35,"targetString":"Math"},{"text":"(method) Math.round(x: number): number","docs":"Returns a supplied numeric expression rounded to the nearest integer.","start":2971,"length":5,"line":134,"character":40,"targetString":"round"},{"text":"(parameter) v: number","docs":"","start":2977,"length":1,"line":134,"character":46,"targetString":"v"},{"text":"(alias) class Slider\nimport Slider","docs":"","start":2996,"length":6,"line":137,"character":1,"targetString":"Slider"},{"text":"(property) Slider.Vertical: React.ElementType<SliderProps>","docs":"","start":3003,"length":8,"line":137,"character":8,"targetString":"Vertical"},{"text":"(JSX attribute) SliderProps.theme?: {\n    width?: number | undefined;\n    trackRadius?: number | undefined;\n    trackHeight?: number | undefined;\n    minimumTrackTintColor?: string | undefined;\n    maximumTrackTintColor?: string | undefined;\n    thumbSize?: number | undefined;\n    thumbRadius?: number | undefined;\n    thumbTintColor?: string | undefined;\n} | undefined","docs":"","start":3014,"length":5,"line":138,"character":2,"targetString":"theme"},{"text":"(property) thumbSize?: number | undefined","docs":"","start":3027,"length":9,"line":139,"character":4,"targetString":"thumbSize"},{"text":"(property) thumbRadius?: number | undefined","docs":"","start":3046,"length":11,"line":140,"character":4,"targetString":"thumbRadius"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":3067,"length":14,"line":141,"character":4,"targetString":"thumbTintColor"},{"text":"(property) minimumTrackTintColor?: string | undefined","docs":"","start":3095,"length":21,"line":142,"character":4,"targetString":"minimumTrackTintColor"},{"text":"(property) maximumTrackTintColor?: string | undefined","docs":"","start":3133,"length":21,"line":143,"character":4,"targetString":"maximumTrackTintColor"},{"text":"(JSX attribute) SliderProps.trackStyle?: StyleProp<ViewStyle>","docs":"","start":3174,"length":10,"line":145,"character":2,"targetString":"trackStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":3188,"length":5,"line":145,"character":16,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":3199,"length":6,"line":145,"character":27,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":3212,"length":12,"line":145,"character":40,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.style?: StyleProp<ViewStyle>","docs":"","start":3233,"length":5,"line":146,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginHorizontal?: string | number | undefined","docs":"","start":3242,"length":16,"line":146,"character":11,"targetString":"marginHorizontal"},{"text":"(JSX attribute) SliderProps.value?: number | undefined","docs":"","start":3268,"length":5,"line":147,"character":2,"targetString":"value"},{"text":"const value: number","docs":"","start":3275,"length":5,"line":147,"character":9,"targetString":"value"},{"text":"(JSX attribute) SliderProps.maximumValue?: number | undefined","docs":"","start":3284,"length":12,"line":148,"character":2,"targetString":"maximumValue"},{"text":"(JSX attribute) SliderProps.minimumValue?: number | undefined","docs":"","start":3305,"length":12,"line":149,"character":2,"targetString":"minimumValue"},{"text":"(JSX attribute) SliderProps.reverseValue?: boolean | undefined","docs":"","start":3324,"length":12,"line":150,"character":2,"targetString":"reverseValue"},{"text":"(JSX attribute) SliderProps.useNoun?: boolean | undefined","docs":"","start":3346,"length":7,"line":151,"character":2,"targetString":"useNoun"},{"text":"(JSX attribute) SliderProps.stepValue?: number | undefined","docs":"","start":3363,"length":9,"line":152,"character":2,"targetString":"stepValue"},{"text":"(JSX attribute) SliderProps.thumbStyle?: StyleProp<ViewStyle>","docs":"","start":3380,"length":10,"line":153,"character":2,"targetString":"thumbStyle"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":3394,"length":6,"line":153,"character":16,"targetString":"height"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":3406,"length":5,"line":153,"character":28,"targetString":"width"},{"text":"(JSX attribute) SliderProps.minNounStyle?: StyleProp<ViewStyle>","docs":"","start":3421,"length":12,"line":154,"character":2,"targetString":"minNounStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":3437,"length":15,"line":154,"character":18,"targetString":"backgroundColor"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":3463,"length":6,"line":154,"character":44,"targetString":"height"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":3474,"length":5,"line":154,"character":55,"targetString":"width"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":3484,"length":12,"line":154,"character":65,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.type?: \"normal\" | \"parcel\" | undefined","docs":"","start":3507,"length":4,"line":155,"character":2,"targetString":"type"},{"text":"(JSX attribute) SliderProps.maxNounStyle?: StyleProp<ViewStyle>","docs":"","start":3523,"length":12,"line":156,"character":2,"targetString":"maxNounStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":3543,"length":15,"line":157,"character":4,"targetString":"backgroundColor"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":3575,"length":6,"line":158,"character":4,"targetString":"height"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":3590,"length":5,"line":159,"character":4,"targetString":"width"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":3604,"length":12,"line":160,"character":4,"targetString":"borderRadius"},{"text":"(JSX attribute) SliderProps.onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":3630,"length":17,"line":162,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) v: number","docs":"","start":3649,"length":1,"line":162,"character":21,"targetString":"v"},{"text":"const setValue: (value: React.SetStateAction<number>) => void","docs":"","start":3654,"length":8,"line":162,"character":26,"targetString":"setValue"},{"text":"var Math: Math","docs":"An intrinsic object that provides basic mathematics functionality and constants.","start":3663,"length":4,"line":162,"character":35,"targetString":"Math"},{"text":"(method) Math.round(x: number): number","docs":"Returns a supplied numeric expression rounded to the nearest integer.","start":3668,"length":5,"line":162,"character":40,"targetString":"round"},{"text":"(parameter) v: number","docs":"","start":3674,"length":1,"line":162,"character":46,"targetString":"v"}]],"/data-entry/slider-with-line":[[{"text":"(alias) class SliderWithLine\nimport SliderWithLine","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"SliderWithLine"},{"text":"(alias) class SliderWithLine\nimport SliderWithLine","docs":"","start":50,"length":14,"line":2,"character":1,"targetString":"SliderWithLine"},{"text":"(JSX attribute) stepValue?: number | undefined","docs":"","start":67,"length":9,"line":3,"character":2,"targetString":"stepValue"},{"text":"(JSX attribute) onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":83,"length":17,"line":4,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) value: number","docs":"","start":102,"length":5,"line":4,"character":21,"targetString":"value"},{"text":"var console: Console","docs":"","start":111,"length":7,"line":4,"character":30,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":119,"length":3,"line":4,"character":38,"targetString":"log"},{"text":"(parameter) value: number","docs":"","start":123,"length":5,"line":4,"character":42,"targetString":"value"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":140,"length":5,"line":5,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginBottom?: string | number | undefined","docs":"","start":149,"length":12,"line":5,"character":11,"targetString":"marginBottom"},{"text":"(JSX attribute) nounWidth: number","docs":"","start":171,"length":9,"line":6,"character":2,"targetString":"nounWidth"},{"text":"(JSX attribute) nounColor: string","docs":"","start":187,"length":9,"line":7,"character":2,"targetString":"nounColor"},{"text":"(JSX attribute) activeNounColor: string","docs":"","start":209,"length":15,"line":8,"character":2,"targetString":"activeNounColor"},{"text":"(JSX attribute) backgroundColor: string","docs":"","start":234,"length":15,"line":9,"character":2,"targetString":"backgroundColor"},{"text":"(JSX attribute) activeBackgroundColor: string","docs":"","start":262,"length":21,"line":10,"character":2,"targetString":"activeBackgroundColor"},{"text":"(alias) class SliderWithLine\nimport SliderWithLine","docs":"","start":298,"length":14,"line":12,"character":1,"targetString":"SliderWithLine"},{"text":"(JSX attribute) stepValue?: number | undefined","docs":"","start":315,"length":9,"line":13,"character":2,"targetString":"stepValue"},{"text":"(JSX attribute) maxValue: number","docs":"","start":332,"length":8,"line":14,"character":2,"targetString":"maxValue"},{"text":"(JSX attribute) minDisabled: boolean","docs":"","start":348,"length":11,"line":15,"character":2,"targetString":"minDisabled"},{"text":"(JSX attribute) onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":370,"length":17,"line":16,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) value: number","docs":"","start":389,"length":5,"line":16,"character":21,"targetString":"value"},{"text":"var console: Console","docs":"","start":398,"length":7,"line":16,"character":30,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":406,"length":3,"line":16,"character":38,"targetString":"log"},{"text":"(parameter) value: number","docs":"","start":410,"length":5,"line":16,"character":42,"targetString":"value"},{"text":"(JSX attribute) nounColor: string","docs":"","start":427,"length":9,"line":17,"character":2,"targetString":"nounColor"},{"text":"(JSX attribute) activeNounColor: string","docs":"","start":449,"length":15,"line":18,"character":2,"targetString":"activeNounColor"},{"text":"(JSX attribute) backgroundColor: string","docs":"","start":474,"length":15,"line":19,"character":2,"targetString":"backgroundColor"},{"text":"(JSX attribute) activeBackgroundColor: string","docs":"","start":502,"length":21,"line":20,"character":2,"targetString":"activeBackgroundColor"}],[{"text":"(alias) class SliderWithLine\nimport SliderWithLine","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"SliderWithLine"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":25,"length":5,"line":0,"character":25,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":64,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":74,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":81,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":87,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"(alias) class SliderWithLine\nimport SliderWithLine","docs":"","start":101,"length":14,"line":4,"character":1,"targetString":"SliderWithLine"},{"text":"(JSX attribute) horizontal?: boolean | undefined","docs":"","start":118,"length":10,"line":5,"character":2,"targetString":"horizontal"},{"text":"(JSX attribute) onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":139,"length":17,"line":6,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) value: number","docs":"","start":158,"length":5,"line":6,"character":21,"targetString":"value"},{"text":"var console: Console","docs":"","start":167,"length":7,"line":6,"character":30,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":175,"length":3,"line":6,"character":38,"targetString":"log"},{"text":"(parameter) value: number","docs":"","start":179,"length":5,"line":6,"character":42,"targetString":"value"},{"text":"(JSX attribute) nounColor: string","docs":"","start":196,"length":9,"line":7,"character":2,"targetString":"nounColor"},{"text":"(JSX attribute) activeNounColor: string","docs":"","start":218,"length":15,"line":8,"character":2,"targetString":"activeNounColor"},{"text":"(JSX attribute) backgroundColor: string","docs":"","start":243,"length":15,"line":9,"character":2,"targetString":"backgroundColor"},{"text":"(JSX attribute) activeBackgroundColor: string","docs":"","start":271,"length":21,"line":10,"character":2,"targetString":"activeBackgroundColor"},{"text":"(JSX attribute) nounWidth: number","docs":"","start":305,"length":9,"line":11,"character":2,"targetString":"nounWidth"},{"text":"const cx: (d: number) => number","docs":"","start":316,"length":2,"line":11,"character":13,"targetString":"cx"},{"text":"(JSX attribute) nounHeight: number","docs":"","start":326,"length":10,"line":12,"character":2,"targetString":"nounHeight"},{"text":"const cx: (d: number) => number","docs":"","start":338,"length":2,"line":12,"character":14,"targetString":"cx"},{"text":"(JSX attribute) width: number","docs":"","start":347,"length":5,"line":13,"character":2,"targetString":"width"},{"text":"const cx: (d: number) => number","docs":"","start":354,"length":2,"line":13,"character":9,"targetString":"cx"},{"text":"(JSX attribute) height: number","docs":"","start":364,"length":6,"line":14,"character":2,"targetString":"height"},{"text":"const cx: (d: number) => number","docs":"","start":372,"length":2,"line":14,"character":10,"targetString":"cx"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":383,"length":5,"line":15,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":392,"length":11,"line":15,"character":11,"targetString":"marginRight"},{"text":"(alias) class SliderWithLine\nimport SliderWithLine","docs":"","start":415,"length":14,"line":17,"character":1,"targetString":"SliderWithLine"},{"text":"(JSX attribute) minDisabled: boolean","docs":"","start":432,"length":11,"line":18,"character":2,"targetString":"minDisabled"},{"text":"(JSX attribute) stepValue?: number | undefined","docs":"","start":454,"length":9,"line":19,"character":2,"targetString":"stepValue"},{"text":"(JSX attribute) horizontal?: boolean | undefined","docs":"","start":471,"length":10,"line":20,"character":2,"targetString":"horizontal"},{"text":"(JSX attribute) minValue: number","docs":"","start":492,"length":8,"line":21,"character":2,"targetString":"minValue"},{"text":"(JSX attribute) nounColor: string","docs":"","start":508,"length":9,"line":22,"character":2,"targetString":"nounColor"},{"text":"(JSX attribute) activeNounColor: string","docs":"","start":530,"length":15,"line":23,"character":2,"targetString":"activeNounColor"},{"text":"(JSX attribute) backgroundColor: string","docs":"","start":555,"length":15,"line":24,"character":2,"targetString":"backgroundColor"},{"text":"(JSX attribute) activeBackgroundColor: string","docs":"","start":583,"length":21,"line":25,"character":2,"targetString":"activeBackgroundColor"},{"text":"(JSX attribute) maxValue: number","docs":"","start":617,"length":8,"line":26,"character":2,"targetString":"maxValue"},{"text":"(JSX attribute) onSlidingComplete?: ((newValue: number) => void) | undefined","docs":"","start":633,"length":17,"line":27,"character":2,"targetString":"onSlidingComplete"},{"text":"(parameter) value: number","docs":"","start":652,"length":5,"line":27,"character":21,"targetString":"value"},{"text":"var console: Console","docs":"","start":661,"length":7,"line":27,"character":30,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":669,"length":3,"line":27,"character":38,"targetString":"log"},{"text":"(parameter) value: number","docs":"","start":673,"length":5,"line":27,"character":42,"targetString":"value"},{"text":"(JSX attribute) nounWidth: number","docs":"","start":690,"length":9,"line":28,"character":2,"targetString":"nounWidth"},{"text":"const cx: (d: number) => number","docs":"","start":701,"length":2,"line":28,"character":13,"targetString":"cx"},{"text":"(JSX attribute) nounHeight: number","docs":"","start":711,"length":10,"line":29,"character":2,"targetString":"nounHeight"},{"text":"const cx: (d: number) => number","docs":"","start":723,"length":2,"line":29,"character":14,"targetString":"cx"},{"text":"(JSX attribute) width: number","docs":"","start":732,"length":5,"line":30,"character":2,"targetString":"width"},{"text":"const cx: (d: number) => number","docs":"","start":739,"length":2,"line":30,"character":9,"targetString":"cx"},{"text":"(JSX attribute) height: number","docs":"","start":749,"length":6,"line":31,"character":2,"targetString":"height"},{"text":"const cx: (d: number) => number","docs":"","start":757,"length":2,"line":31,"character":10,"targetString":"cx"}]],"/data-entry/stepper":[[{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"Stepper"},{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":43,"length":7,"line":2,"character":1,"targetString":"Stepper"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":51,"length":5,"line":2,"character":9,"targetString":"value"},{"text":"(JSX attribute) editable?: boolean | undefined","docs":"If false, text is not editable. The default value is true.","start":61,"length":8,"line":2,"character":19,"targetString":"editable"},{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":82,"length":7,"line":3,"character":1,"targetString":"Stepper"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":90,"length":5,"line":3,"character":9,"targetString":"value"},{"text":"(JSX attribute) disabled?: boolean | undefined","docs":"","start":101,"length":8,"line":3,"character":20,"targetString":"disabled"},{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":122,"length":7,"line":4,"character":1,"targetString":"Stepper"},{"text":"(property) 93.5: any","docs":"","start":141,"length":0,"line":4,"character":20,"targetString":""},{"text":"(property) 0.5: any","docs":"","start":157,"length":0,"line":4,"character":36,"targetString":""},{"text":"(property) false: any","docs":"","start":196,"length":5,"line":4,"character":75,"targetString":"false"},{"text":"(property) false: any","docs":"","start":201,"length":0,"line":4,"character":80,"targetString":""},{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":207,"length":7,"line":5,"character":1,"targetString":"Stepper"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":215,"length":5,"line":5,"character":9,"targetString":"value"},{"text":"(JSX attribute) stepValue?: number | undefined","docs":"","start":226,"length":9,"line":5,"character":20,"targetString":"stepValue"}],[{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"Stepper"},{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":43,"length":7,"line":2,"character":1,"targetString":"Stepper"},{"text":"(JSX attribute) buttonType?: \"triangle\" | \"ellipse\" | undefined","docs":"","start":51,"length":10,"line":2,"character":9,"targetString":"buttonType"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":73,"length":5,"line":2,"character":31,"targetString":"value"},{"text":"(JSX attribute) editable?: boolean | undefined","docs":"If false, text is not editable. The default value is true.","start":83,"length":8,"line":2,"character":41,"targetString":"editable"},{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":104,"length":7,"line":3,"character":1,"targetString":"Stepper"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":112,"length":5,"line":3,"character":9,"targetString":"value"},{"text":"(JSX attribute) buttonType?: \"triangle\" | \"ellipse\" | undefined","docs":"","start":123,"length":10,"line":3,"character":20,"targetString":"buttonType"},{"text":"(JSX attribute) disabled?: boolean | undefined","docs":"","start":145,"length":8,"line":3,"character":42,"targetString":"disabled"},{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":165,"length":7,"line":4,"character":1,"targetString":"Stepper"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":175,"length":5,"line":5,"character":2,"targetString":"value"},{"text":"(JSX attribute) stepValue?: number | undefined","docs":"","start":190,"length":9,"line":6,"character":2,"targetString":"stepValue"},{"text":"(JSX attribute) inputStyle?: StyleProp<ViewStyle>","docs":"","start":208,"length":10,"line":7,"character":2,"targetString":"inputStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":222,"length":5,"line":7,"character":16,"targetString":"width"},{"text":"(JSX attribute) buttonType?: \"triangle\" | \"ellipse\" | undefined","docs":"","start":237,"length":10,"line":8,"character":2,"targetString":"buttonType"},{"text":"(JSX attribute) editable?: boolean | undefined","docs":"If false, text is not editable. The default value is true.","start":261,"length":8,"line":9,"character":2,"targetString":"editable"},{"text":"(alias) class Stepper\nimport Stepper","docs":"","start":282,"length":7,"line":11,"character":1,"targetString":"Stepper"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":290,"length":5,"line":11,"character":9,"targetString":"value"},{"text":"(JSX attribute) stepValue?: number | undefined","docs":"","start":301,"length":9,"line":11,"character":20,"targetString":"stepValue"},{"text":"(JSX attribute) buttonType?: \"triangle\" | \"ellipse\" | undefined","docs":"","start":315,"length":10,"line":11,"character":34,"targetString":"buttonType"}]],"/data-entry/switch-button":[[{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"SwitchButton"},{"text":"const value1: boolean","docs":"","start":54,"length":6,"line":2,"character":7,"targetString":"value1"},{"text":"const setValue1: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":62,"length":9,"line":2,"character":15,"targetString":"setValue1"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":75,"length":5,"line":2,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":81,"length":8,"line":2,"character":34,"targetString":"useState"},{"text":"const value2: boolean","docs":"","start":104,"length":6,"line":3,"character":7,"targetString":"value2"},{"text":"const setValue2: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":112,"length":9,"line":3,"character":15,"targetString":"setValue2"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":125,"length":5,"line":3,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":131,"length":8,"line":3,"character":34,"targetString":"useState"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":159,"length":12,"line":6,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":176,"length":5,"line":7,"character":4,"targetString":"value"},{"text":"const value1: boolean","docs":"","start":183,"length":6,"line":7,"character":11,"targetString":"value1"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":195,"length":13,"line":8,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":210,"length":1,"line":8,"character":19,"targetString":"v"},{"text":"const setValue1: (value: React.SetStateAction<boolean>) => void","docs":"","start":215,"length":9,"line":8,"character":24,"targetString":"setValue1"},{"text":"(parameter) v: boolean","docs":"","start":225,"length":1,"line":8,"character":34,"targetString":"v"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":233,"length":5,"line":9,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":242,"length":11,"line":9,"character":13,"targetString":"marginRight"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":269,"length":12,"line":11,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":282,"length":5,"line":11,"character":16,"targetString":"value"},{"text":"const value2: boolean","docs":"","start":289,"length":6,"line":11,"character":23,"targetString":"value2"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":297,"length":13,"line":11,"character":31,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":312,"length":1,"line":11,"character":46,"targetString":"v"},{"text":"const setValue2: (value: React.SetStateAction<boolean>) => void","docs":"","start":317,"length":9,"line":11,"character":51,"targetString":"setValue2"},{"text":"(parameter) v: boolean","docs":"","start":327,"length":1,"line":11,"character":61,"targetString":"v"}],[{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"SwitchButton"},{"text":"const value1: boolean","docs":"","start":54,"length":6,"line":2,"character":7,"targetString":"value1"},{"text":"const setValue1: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":62,"length":9,"line":2,"character":15,"targetString":"setValue1"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":75,"length":5,"line":2,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":81,"length":8,"line":2,"character":34,"targetString":"useState"},{"text":"const value2: boolean","docs":"","start":104,"length":6,"line":3,"character":7,"targetString":"value2"},{"text":"const setValue2: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":112,"length":9,"line":3,"character":15,"targetString":"setValue2"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":125,"length":5,"line":3,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":131,"length":8,"line":3,"character":34,"targetString":"useState"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":159,"length":12,"line":6,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":176,"length":5,"line":7,"character":4,"targetString":"value"},{"text":"const value1: boolean","docs":"","start":183,"length":6,"line":7,"character":11,"targetString":"value1"},{"text":"(JSX attribute) size?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    activeSize?: number | undefined;\n    margin?: number | undefined;\n} | undefined","docs":"","start":195,"length":4,"line":8,"character":4,"targetString":"size"},{"text":"(property) height?: number | undefined","docs":"","start":203,"length":6,"line":8,"character":12,"targetString":"height"},{"text":"(JSX attribute) theme?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    thumbSize?: number | undefined;\n    margin?: number | number[] | undefined;\n    tintColor?: string | {\n        [key: string]: string;\n    } | undefined;\n    onTintColor?: string | undefined;\n    thumbTintColor?: string | undefined;\n    onThumbTintColor?: string | undefined;\n} | undefined","docs":"","start":221,"length":5,"line":9,"character":4,"targetString":"theme"},{"text":"(property) margin?: number | number[] | undefined","docs":"","start":230,"length":6,"line":9,"character":13,"targetString":"margin"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":247,"length":13,"line":10,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":262,"length":1,"line":10,"character":19,"targetString":"v"},{"text":"const setValue1: (value: React.SetStateAction<boolean>) => void","docs":"","start":267,"length":9,"line":10,"character":24,"targetString":"setValue1"},{"text":"(parameter) v: boolean","docs":"","start":277,"length":1,"line":10,"character":34,"targetString":"v"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":285,"length":5,"line":11,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":294,"length":11,"line":11,"character":13,"targetString":"marginRight"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":321,"length":12,"line":13,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":338,"length":5,"line":14,"character":4,"targetString":"value"},{"text":"const value2: boolean","docs":"","start":345,"length":6,"line":14,"character":11,"targetString":"value2"},{"text":"(JSX attribute) size?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    activeSize?: number | undefined;\n    margin?: number | undefined;\n} | undefined","docs":"","start":357,"length":4,"line":15,"character":4,"targetString":"size"},{"text":"(property) height?: number | undefined","docs":"","start":365,"length":6,"line":15,"character":12,"targetString":"height"},{"text":"(JSX attribute) theme?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    thumbSize?: number | undefined;\n    margin?: number | number[] | undefined;\n    tintColor?: string | {\n        [key: string]: string;\n    } | undefined;\n    onTintColor?: string | undefined;\n    thumbTintColor?: string | undefined;\n    onThumbTintColor?: string | undefined;\n} | undefined","docs":"","start":383,"length":5,"line":16,"character":4,"targetString":"theme"},{"text":"(property) margin?: number | number[] | undefined","docs":"","start":392,"length":6,"line":16,"character":13,"targetString":"margin"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":409,"length":13,"line":17,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":424,"length":1,"line":17,"character":19,"targetString":"v"},{"text":"const setValue2: (value: React.SetStateAction<boolean>) => void","docs":"","start":429,"length":9,"line":17,"character":24,"targetString":"setValue2"},{"text":"(parameter) v: boolean","docs":"","start":439,"length":1,"line":17,"character":34,"targetString":"v"}],[{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"SwitchButton"},{"text":"const value1: boolean","docs":"","start":54,"length":6,"line":2,"character":7,"targetString":"value1"},{"text":"const setValue1: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":62,"length":9,"line":2,"character":15,"targetString":"setValue1"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":75,"length":5,"line":2,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":81,"length":8,"line":2,"character":34,"targetString":"useState"},{"text":"const value2: boolean","docs":"","start":104,"length":6,"line":3,"character":7,"targetString":"value2"},{"text":"const setValue2: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":112,"length":9,"line":3,"character":15,"targetString":"setValue2"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":125,"length":5,"line":3,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":131,"length":8,"line":3,"character":34,"targetString":"useState"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":159,"length":12,"line":6,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) size?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    activeSize?: number | undefined;\n    margin?: number | undefined;\n} | undefined","docs":"","start":176,"length":4,"line":7,"character":4,"targetString":"size"},{"text":"(property) activeSize?: number | undefined","docs":"","start":190,"length":10,"line":8,"character":6,"targetString":"activeSize"},{"text":"(property) margin?: number | undefined","docs":"","start":212,"length":6,"line":9,"character":6,"targetString":"margin"},{"text":"(property) width?: number | undefined","docs":"","start":229,"length":5,"line":10,"character":6,"targetString":"width"},{"text":"(property) height?: number | undefined","docs":"","start":246,"length":6,"line":11,"character":6,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":264,"length":12,"line":12,"character":6,"targetString":"borderRadius"},{"text":"(JSX attribute) theme?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    thumbSize?: number | undefined;\n    margin?: number | number[] | undefined;\n    tintColor?: string | {\n        [key: string]: string;\n    } | undefined;\n    onTintColor?: string | undefined;\n    thumbTintColor?: string | undefined;\n    onThumbTintColor?: string | undefined;\n} | undefined","docs":"","start":293,"length":5,"line":14,"character":4,"targetString":"theme"},{"text":"(property) onTintColor?: string | undefined","docs":"","start":302,"length":11,"line":14,"character":13,"targetString":"onTintColor"},{"text":"(property) onThumbTintColor?: string | undefined","docs":"","start":326,"length":16,"line":14,"character":37,"targetString":"onThumbTintColor"},{"text":"(JSX attribute) thumbStyle?: StyleProp<ViewStyle>","docs":"","start":358,"length":10,"line":15,"character":4,"targetString":"thumbStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":372,"length":5,"line":15,"character":18,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":383,"length":6,"line":15,"character":29,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":395,"length":12,"line":15,"character":41,"targetString":"borderRadius"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":418,"length":5,"line":16,"character":4,"targetString":"value"},{"text":"const value1: boolean","docs":"","start":425,"length":6,"line":16,"character":11,"targetString":"value1"},{"text":"(JSX attribute) onText?: string | undefined","docs":"","start":437,"length":6,"line":17,"character":4,"targetString":"onText"},{"text":"(JSX attribute) offText?: string | undefined","docs":"","start":453,"length":7,"line":18,"character":4,"targetString":"offText"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":471,"length":13,"line":19,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":486,"length":1,"line":19,"character":19,"targetString":"v"},{"text":"const setValue1: (value: React.SetStateAction<boolean>) => void","docs":"","start":491,"length":9,"line":19,"character":24,"targetString":"setValue1"},{"text":"(parameter) v: boolean","docs":"","start":501,"length":1,"line":19,"character":34,"targetString":"v"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":509,"length":5,"line":20,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":518,"length":11,"line":20,"character":13,"targetString":"marginRight"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":545,"length":12,"line":22,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":562,"length":5,"line":23,"character":4,"targetString":"value"},{"text":"const value2: boolean","docs":"","start":569,"length":6,"line":23,"character":11,"targetString":"value2"},{"text":"(JSX attribute) size?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    activeSize?: number | undefined;\n    margin?: number | undefined;\n} | undefined","docs":"","start":581,"length":4,"line":24,"character":4,"targetString":"size"},{"text":"(property) activeSize?: number | undefined","docs":"","start":595,"length":10,"line":25,"character":6,"targetString":"activeSize"},{"text":"(property) margin?: number | undefined","docs":"","start":617,"length":6,"line":26,"character":6,"targetString":"margin"},{"text":"(property) width?: number | undefined","docs":"","start":634,"length":5,"line":27,"character":6,"targetString":"width"},{"text":"(property) height?: number | undefined","docs":"","start":651,"length":6,"line":28,"character":6,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":669,"length":12,"line":29,"character":6,"targetString":"borderRadius"},{"text":"(JSX attribute) theme?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    thumbSize?: number | undefined;\n    margin?: number | number[] | undefined;\n    tintColor?: string | {\n        [key: string]: string;\n    } | undefined;\n    onTintColor?: string | undefined;\n    thumbTintColor?: string | undefined;\n    onThumbTintColor?: string | undefined;\n} | undefined","docs":"","start":698,"length":5,"line":31,"character":4,"targetString":"theme"},{"text":"(property) onTintColor?: string | undefined","docs":"","start":707,"length":11,"line":31,"character":13,"targetString":"onTintColor"},{"text":"(property) onThumbTintColor?: string | undefined","docs":"","start":731,"length":16,"line":31,"character":37,"targetString":"onThumbTintColor"},{"text":"(JSX attribute) thumbStyle?: StyleProp<ViewStyle>","docs":"","start":763,"length":10,"line":32,"character":4,"targetString":"thumbStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":777,"length":5,"line":32,"character":18,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":788,"length":6,"line":32,"character":29,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":800,"length":12,"line":32,"character":41,"targetString":"borderRadius"},{"text":"(JSX attribute) onText?: string | undefined","docs":"","start":823,"length":6,"line":33,"character":4,"targetString":"onText"},{"text":"(JSX attribute) offText?: string | undefined","docs":"","start":839,"length":7,"line":34,"character":4,"targetString":"offText"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":857,"length":13,"line":35,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":872,"length":1,"line":35,"character":19,"targetString":"v"},{"text":"const setValue2: (value: React.SetStateAction<boolean>) => void","docs":"","start":877,"length":9,"line":35,"character":24,"targetString":"setValue2"},{"text":"(parameter) v: boolean","docs":"","start":887,"length":1,"line":35,"character":34,"targetString":"v"}],[{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"SwitchButton"},{"text":"const value1: boolean","docs":"","start":54,"length":6,"line":2,"character":7,"targetString":"value1"},{"text":"const setValue1: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":62,"length":9,"line":2,"character":15,"targetString":"setValue1"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":75,"length":5,"line":2,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":81,"length":8,"line":2,"character":34,"targetString":"useState"},{"text":"const value2: boolean","docs":"","start":104,"length":6,"line":3,"character":7,"targetString":"value2"},{"text":"const setValue2: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":112,"length":9,"line":3,"character":15,"targetString":"setValue2"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":125,"length":5,"line":3,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":131,"length":8,"line":3,"character":34,"targetString":"useState"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":159,"length":12,"line":6,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) size?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    activeSize?: number | undefined;\n    margin?: number | undefined;\n} | undefined","docs":"","start":176,"length":4,"line":7,"character":4,"targetString":"size"},{"text":"(property) activeSize?: number | undefined","docs":"","start":190,"length":10,"line":8,"character":6,"targetString":"activeSize"},{"text":"(property) margin?: number | undefined","docs":"","start":212,"length":6,"line":9,"character":6,"targetString":"margin"},{"text":"(property) width?: number | undefined","docs":"","start":229,"length":5,"line":10,"character":6,"targetString":"width"},{"text":"(property) height?: number | undefined","docs":"","start":246,"length":6,"line":11,"character":6,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":264,"length":12,"line":12,"character":6,"targetString":"borderRadius"},{"text":"(JSX attribute) theme?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    thumbSize?: number | undefined;\n    margin?: number | number[] | undefined;\n    tintColor?: string | {\n        [key: string]: string;\n    } | undefined;\n    onTintColor?: string | undefined;\n    thumbTintColor?: string | undefined;\n    onThumbTintColor?: string | undefined;\n} | undefined","docs":"","start":293,"length":5,"line":14,"character":4,"targetString":"theme"},{"text":"(property) onTintColor?: string | undefined","docs":"","start":308,"length":11,"line":15,"character":6,"targetString":"onTintColor"},{"text":"(property) onThumbTintColor?: string | undefined","docs":"","start":335,"length":16,"line":16,"character":6,"targetString":"onThumbTintColor"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":370,"length":14,"line":17,"character":6,"targetString":"thumbTintColor"},{"text":"(JSX attribute) thumbStyle?: StyleProp<ViewStyle>","docs":"","start":408,"length":10,"line":19,"character":4,"targetString":"thumbStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":422,"length":5,"line":19,"character":18,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":433,"length":6,"line":19,"character":29,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":445,"length":12,"line":19,"character":41,"targetString":"borderRadius"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":468,"length":5,"line":20,"character":4,"targetString":"value"},{"text":"const value1: boolean","docs":"","start":475,"length":6,"line":20,"character":11,"targetString":"value1"},{"text":"(JSX attribute) onText?: string | undefined","docs":"","start":487,"length":6,"line":21,"character":4,"targetString":"onText"},{"text":"(JSX attribute) offText?: string | undefined","docs":"","start":503,"length":7,"line":22,"character":4,"targetString":"offText"},{"text":"(JSX attribute) onTextStyle?: StyleProp<TextStyle>","docs":"","start":521,"length":11,"line":23,"character":4,"targetString":"onTextStyle"},{"text":"(property) TextStyle.color?: ColorValue | undefined","docs":"","start":536,"length":5,"line":23,"character":19,"targetString":"color"},{"text":"(property) FlexStyle.left?: string | number | undefined","docs":"","start":554,"length":4,"line":23,"character":37,"targetString":"left"},{"text":"(JSX attribute) d: any","docs":"","start":570,"length":1,"line":24,"character":4,"targetString":"d"},{"text":"(JSX attribute) iconColor: string","docs":"","start":584,"length":9,"line":25,"character":4,"targetString":"iconColor"},{"text":"(JSX attribute) offTextStyle?: StyleProp<TextStyle>","docs":"","start":605,"length":12,"line":26,"character":4,"targetString":"offTextStyle"},{"text":"(property) FlexStyle.right?: string | number | undefined","docs":"","start":621,"length":5,"line":26,"character":20,"targetString":"right"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":638,"length":13,"line":27,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":653,"length":1,"line":27,"character":19,"targetString":"v"},{"text":"const setValue1: (value: React.SetStateAction<boolean>) => void","docs":"","start":658,"length":9,"line":27,"character":24,"targetString":"setValue1"},{"text":"(parameter) v: boolean","docs":"","start":668,"length":1,"line":27,"character":34,"targetString":"v"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":676,"length":5,"line":28,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":685,"length":11,"line":28,"character":13,"targetString":"marginRight"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":712,"length":12,"line":30,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":729,"length":5,"line":31,"character":4,"targetString":"value"},{"text":"const value2: boolean","docs":"","start":736,"length":6,"line":31,"character":11,"targetString":"value2"},{"text":"(JSX attribute) size?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    activeSize?: number | undefined;\n    margin?: number | undefined;\n} | undefined","docs":"","start":748,"length":4,"line":32,"character":4,"targetString":"size"},{"text":"(property) activeSize?: number | undefined","docs":"","start":762,"length":10,"line":33,"character":6,"targetString":"activeSize"},{"text":"(property) margin?: number | undefined","docs":"","start":784,"length":6,"line":34,"character":6,"targetString":"margin"},{"text":"(property) width?: number | undefined","docs":"","start":801,"length":5,"line":35,"character":6,"targetString":"width"},{"text":"(property) height?: number | undefined","docs":"","start":818,"length":6,"line":36,"character":6,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":836,"length":12,"line":37,"character":6,"targetString":"borderRadius"},{"text":"(JSX attribute) theme?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    thumbSize?: number | undefined;\n    margin?: number | number[] | undefined;\n    tintColor?: string | {\n        [key: string]: string;\n    } | undefined;\n    onTintColor?: string | undefined;\n    thumbTintColor?: string | undefined;\n    onThumbTintColor?: string | undefined;\n} | undefined","docs":"","start":865,"length":5,"line":39,"character":4,"targetString":"theme"},{"text":"(property) onTintColor?: string | undefined","docs":"","start":880,"length":11,"line":40,"character":6,"targetString":"onTintColor"},{"text":"(property) onThumbTintColor?: string | undefined","docs":"","start":907,"length":16,"line":41,"character":6,"targetString":"onThumbTintColor"},{"text":"(property) thumbTintColor?: string | undefined","docs":"","start":942,"length":14,"line":42,"character":6,"targetString":"thumbTintColor"},{"text":"(JSX attribute) thumbStyle?: StyleProp<ViewStyle>","docs":"","start":980,"length":10,"line":44,"character":4,"targetString":"thumbStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":994,"length":5,"line":44,"character":18,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":1005,"length":6,"line":44,"character":29,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":1017,"length":12,"line":44,"character":41,"targetString":"borderRadius"},{"text":"(JSX attribute) onText?: string | undefined","docs":"","start":1040,"length":6,"line":45,"character":4,"targetString":"onText"},{"text":"(JSX attribute) offText?: string | undefined","docs":"","start":1056,"length":7,"line":46,"character":4,"targetString":"offText"},{"text":"(JSX attribute) onTextStyle?: StyleProp<TextStyle>","docs":"","start":1074,"length":11,"line":47,"character":4,"targetString":"onTextStyle"},{"text":"(property) TextStyle.color?: ColorValue | undefined","docs":"","start":1089,"length":5,"line":47,"character":19,"targetString":"color"},{"text":"(property) FlexStyle.left?: string | number | undefined","docs":"","start":1107,"length":4,"line":47,"character":37,"targetString":"left"},{"text":"(JSX attribute) d: any","docs":"","start":1123,"length":1,"line":48,"character":4,"targetString":"d"},{"text":"(JSX attribute) iconColor: string","docs":"","start":1137,"length":9,"line":49,"character":4,"targetString":"iconColor"},{"text":"(JSX attribute) offTextStyle?: StyleProp<TextStyle>","docs":"","start":1158,"length":12,"line":50,"character":4,"targetString":"offTextStyle"},{"text":"(property) FlexStyle.right?: string | number | undefined","docs":"","start":1174,"length":5,"line":50,"character":20,"targetString":"right"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":1191,"length":13,"line":51,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":1206,"length":1,"line":51,"character":19,"targetString":"v"},{"text":"const setValue2: (value: React.SetStateAction<boolean>) => void","docs":"","start":1211,"length":9,"line":51,"character":24,"targetString":"setValue2"},{"text":"(parameter) v: boolean","docs":"","start":1221,"length":1,"line":51,"character":34,"targetString":"v"}],[{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"SwitchButton"},{"text":"const value1: boolean","docs":"","start":54,"length":6,"line":2,"character":7,"targetString":"value1"},{"text":"const setValue1: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":62,"length":9,"line":2,"character":15,"targetString":"setValue1"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":75,"length":5,"line":2,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":81,"length":8,"line":2,"character":34,"targetString":"useState"},{"text":"const value2: boolean","docs":"","start":104,"length":6,"line":3,"character":7,"targetString":"value2"},{"text":"const setValue2: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":112,"length":9,"line":3,"character":15,"targetString":"setValue2"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":125,"length":5,"line":3,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":131,"length":8,"line":3,"character":34,"targetString":"useState"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":159,"length":12,"line":6,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) size?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    activeSize?: number | undefined;\n    margin?: number | undefined;\n} | undefined","docs":"","start":176,"length":4,"line":7,"character":4,"targetString":"size"},{"text":"(property) activeSize?: number | undefined","docs":"","start":190,"length":10,"line":8,"character":6,"targetString":"activeSize"},{"text":"(property) margin?: number | undefined","docs":"","start":212,"length":6,"line":9,"character":6,"targetString":"margin"},{"text":"(property) width?: number | undefined","docs":"","start":229,"length":5,"line":10,"character":6,"targetString":"width"},{"text":"(property) height?: number | undefined","docs":"","start":246,"length":6,"line":11,"character":6,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":264,"length":12,"line":12,"character":6,"targetString":"borderRadius"},{"text":"(JSX attribute) theme?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    thumbSize?: number | undefined;\n    margin?: number | number[] | undefined;\n    tintColor?: string | {\n        [key: string]: string;\n    } | undefined;\n    onTintColor?: string | undefined;\n    thumbTintColor?: string | undefined;\n    onThumbTintColor?: string | undefined;\n} | undefined","docs":"","start":293,"length":5,"line":14,"character":4,"targetString":"theme"},{"text":"(property) onTintColor?: string | undefined","docs":"","start":302,"length":11,"line":14,"character":13,"targetString":"onTintColor"},{"text":"(property) onThumbTintColor?: string | undefined","docs":"","start":326,"length":16,"line":14,"character":37,"targetString":"onThumbTintColor"},{"text":"(JSX attribute) thumbStyle?: StyleProp<ViewStyle>","docs":"","start":358,"length":10,"line":15,"character":4,"targetString":"thumbStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":372,"length":5,"line":15,"character":18,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":383,"length":6,"line":15,"character":29,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":395,"length":12,"line":15,"character":41,"targetString":"borderRadius"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":419,"length":5,"line":16,"character":4,"targetString":"value"},{"text":"const value1: boolean","docs":"","start":426,"length":6,"line":16,"character":11,"targetString":"value1"},{"text":"(JSX attribute) switchType: string","docs":"","start":438,"length":10,"line":17,"character":4,"targetString":"switchType"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":465,"length":13,"line":18,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":480,"length":1,"line":18,"character":19,"targetString":"v"},{"text":"const setValue1: (value: React.SetStateAction<boolean>) => void","docs":"","start":485,"length":9,"line":18,"character":24,"targetString":"setValue1"},{"text":"(parameter) v: boolean","docs":"","start":495,"length":1,"line":18,"character":34,"targetString":"v"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":503,"length":5,"line":19,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":512,"length":11,"line":19,"character":13,"targetString":"marginRight"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":539,"length":12,"line":21,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":556,"length":5,"line":22,"character":4,"targetString":"value"},{"text":"const value2: boolean","docs":"","start":563,"length":6,"line":22,"character":11,"targetString":"value2"},{"text":"(JSX attribute) size?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    activeSize?: number | undefined;\n    margin?: number | undefined;\n} | undefined","docs":"","start":575,"length":4,"line":23,"character":4,"targetString":"size"},{"text":"(property) activeSize?: number | undefined","docs":"","start":589,"length":10,"line":24,"character":6,"targetString":"activeSize"},{"text":"(property) margin?: number | undefined","docs":"","start":611,"length":6,"line":25,"character":6,"targetString":"margin"},{"text":"(property) width?: number | undefined","docs":"","start":628,"length":5,"line":26,"character":6,"targetString":"width"},{"text":"(property) height?: number | undefined","docs":"","start":645,"length":6,"line":27,"character":6,"targetString":"height"},{"text":"(property) borderRadius: number","docs":"","start":663,"length":12,"line":28,"character":6,"targetString":"borderRadius"},{"text":"(JSX attribute) theme?: {\n    width?: number | undefined;\n    height?: number | undefined;\n    thumbSize?: number | undefined;\n    margin?: number | number[] | undefined;\n    tintColor?: string | {\n        [key: string]: string;\n    } | undefined;\n    onTintColor?: string | undefined;\n    thumbTintColor?: string | undefined;\n    onThumbTintColor?: string | undefined;\n} | undefined","docs":"","start":692,"length":5,"line":30,"character":4,"targetString":"theme"},{"text":"(property) onTintColor?: string | undefined","docs":"","start":701,"length":11,"line":30,"character":13,"targetString":"onTintColor"},{"text":"(property) onThumbTintColor?: string | undefined","docs":"","start":725,"length":16,"line":30,"character":37,"targetString":"onThumbTintColor"},{"text":"(JSX attribute) thumbStyle?: StyleProp<ViewStyle>","docs":"","start":757,"length":10,"line":31,"character":4,"targetString":"thumbStyle"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":771,"length":5,"line":31,"character":18,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":782,"length":6,"line":31,"character":29,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":794,"length":12,"line":31,"character":41,"targetString":"borderRadius"},{"text":"(JSX attribute) switchType: string","docs":"","start":818,"length":10,"line":32,"character":4,"targetString":"switchType"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":845,"length":13,"line":33,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":860,"length":1,"line":33,"character":19,"targetString":"v"},{"text":"const setValue2: (value: React.SetStateAction<boolean>) => void","docs":"","start":865,"length":9,"line":33,"character":24,"targetString":"setValue2"},{"text":"(parameter) v: boolean","docs":"","start":875,"length":1,"line":33,"character":34,"targetString":"v"}],[{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"SwitchButton"},{"text":"const value1: boolean","docs":"","start":54,"length":6,"line":2,"character":7,"targetString":"value1"},{"text":"const setValue1: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":62,"length":9,"line":2,"character":15,"targetString":"setValue1"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":75,"length":5,"line":2,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":81,"length":8,"line":2,"character":34,"targetString":"useState"},{"text":"const value2: boolean","docs":"","start":104,"length":6,"line":3,"character":7,"targetString":"value2"},{"text":"const setValue2: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":112,"length":9,"line":3,"character":15,"targetString":"setValue2"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":125,"length":5,"line":3,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":131,"length":8,"line":3,"character":34,"targetString":"useState"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":159,"length":12,"line":6,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":176,"length":5,"line":7,"character":4,"targetString":"value"},{"text":"const value1: boolean","docs":"","start":183,"length":6,"line":7,"character":11,"targetString":"value1"},{"text":"(JSX attribute) onText?: string | undefined","docs":"","start":195,"length":6,"line":8,"character":4,"targetString":"onText"},{"text":"(JSX attribute) offText?: string | undefined","docs":"","start":209,"length":7,"line":9,"character":4,"targetString":"offText"},{"text":"(JSX attribute) tintColor?: string | {\n    [key: string]: string;\n} | undefined","docs":"","start":224,"length":9,"line":10,"character":4,"targetString":"tintColor"},{"text":"(JSX attribute) onTintColor?: string | {\n    [key: string]: string;\n} | undefined","docs":"","start":248,"length":11,"line":11,"character":4,"targetString":"onTintColor"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":322,"length":13,"line":15,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":337,"length":1,"line":15,"character":19,"targetString":"v"},{"text":"const setValue1: (value: React.SetStateAction<boolean>) => void","docs":"","start":342,"length":9,"line":15,"character":24,"targetString":"setValue1"},{"text":"(parameter) v: boolean","docs":"","start":352,"length":1,"line":15,"character":34,"targetString":"v"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":360,"length":5,"line":16,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":369,"length":11,"line":16,"character":13,"targetString":"marginRight"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":396,"length":12,"line":18,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":413,"length":5,"line":19,"character":4,"targetString":"value"},{"text":"const value2: boolean","docs":"","start":420,"length":6,"line":19,"character":11,"targetString":"value2"},{"text":"(JSX attribute) onText?: string | undefined","docs":"","start":432,"length":6,"line":20,"character":4,"targetString":"onText"},{"text":"(JSX attribute) offText?: string | undefined","docs":"","start":446,"length":7,"line":21,"character":4,"targetString":"offText"},{"text":"(JSX attribute) tintColor?: string | {\n    [key: string]: string;\n} | undefined","docs":"","start":461,"length":9,"line":22,"character":4,"targetString":"tintColor"},{"text":"(JSX attribute) onTintColor?: string | {\n    [key: string]: string;\n} | undefined","docs":"","start":485,"length":11,"line":23,"character":4,"targetString":"onTintColor"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":559,"length":13,"line":27,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":574,"length":1,"line":27,"character":19,"targetString":"v"},{"text":"const setValue2: (value: React.SetStateAction<boolean>) => void","docs":"","start":579,"length":9,"line":27,"character":24,"targetString":"setValue2"},{"text":"(parameter) v: boolean","docs":"","start":589,"length":1,"line":27,"character":34,"targetString":"v"}],[{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"SwitchButton"},{"text":"const value1: boolean","docs":"","start":54,"length":6,"line":2,"character":7,"targetString":"value1"},{"text":"const setValue1: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":62,"length":9,"line":2,"character":15,"targetString":"setValue1"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":75,"length":5,"line":2,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":81,"length":8,"line":2,"character":34,"targetString":"useState"},{"text":"const value2: boolean","docs":"","start":104,"length":6,"line":3,"character":7,"targetString":"value2"},{"text":"const setValue2: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":112,"length":9,"line":3,"character":15,"targetString":"setValue2"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":125,"length":5,"line":3,"character":28,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":131,"length":8,"line":3,"character":34,"targetString":"useState"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":159,"length":12,"line":6,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":176,"length":5,"line":7,"character":4,"targetString":"value"},{"text":"const value1: boolean","docs":"","start":183,"length":6,"line":7,"character":11,"targetString":"value1"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":195,"length":13,"line":8,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":210,"length":1,"line":8,"character":19,"targetString":"v"},{"text":"const setValue1: (value: React.SetStateAction<boolean>) => void","docs":"","start":215,"length":9,"line":8,"character":24,"targetString":"setValue1"},{"text":"(parameter) v: boolean","docs":"","start":225,"length":1,"line":8,"character":34,"targetString":"v"},{"text":"(JSX attribute) tintColor?: string | {\n    [key: string]: string;\n} | undefined","docs":"","start":233,"length":9,"line":9,"character":4,"targetString":"tintColor"},{"text":"(JSX attribute) onTintColor?: string | {\n    [key: string]: string;\n} | undefined","docs":"","start":257,"length":11,"line":10,"character":4,"targetString":"onTintColor"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":331,"length":5,"line":14,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":340,"length":11,"line":14,"character":13,"targetString":"marginRight"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":367,"length":12,"line":16,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) value?: boolean | undefined","docs":"","start":384,"length":5,"line":17,"character":4,"targetString":"value"},{"text":"const value2: boolean","docs":"","start":391,"length":6,"line":17,"character":11,"targetString":"value2"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":403,"length":13,"line":18,"character":4,"targetString":"onValueChange"},{"text":"(parameter) v: boolean","docs":"","start":418,"length":1,"line":18,"character":19,"targetString":"v"},{"text":"const setValue2: (value: React.SetStateAction<boolean>) => void","docs":"","start":423,"length":9,"line":18,"character":24,"targetString":"setValue2"},{"text":"(parameter) v: boolean","docs":"","start":433,"length":1,"line":18,"character":34,"targetString":"v"},{"text":"(JSX attribute) tintColor?: string | {\n    [key: string]: string;\n} | undefined","docs":"","start":441,"length":9,"line":19,"character":4,"targetString":"tintColor"},{"text":"(JSX attribute) onTintColor?: string | {\n    [key: string]: string;\n} | undefined","docs":"","start":465,"length":11,"line":20,"character":4,"targetString":"onTintColor"}],[{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"SwitchButton"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":57,"length":12,"line":3,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) defaultValue?: boolean | undefined","docs":"","start":74,"length":12,"line":4,"character":4,"targetString":"defaultValue"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":98,"length":13,"line":5,"character":4,"targetString":"onValueChange"},{"text":"(parameter) value: boolean","docs":"","start":113,"length":5,"line":5,"character":19,"targetString":"value"},{"text":"var console: Console","docs":"","start":122,"length":7,"line":5,"character":28,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":130,"length":3,"line":5,"character":36,"targetString":"log"},{"text":"(parameter) value: boolean","docs":"","start":134,"length":5,"line":5,"character":40,"targetString":"value"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":146,"length":5,"line":6,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":155,"length":11,"line":6,"character":13,"targetString":"marginRight"},{"text":"(alias) class SwitchButton\nimport SwitchButton","docs":"","start":182,"length":12,"line":8,"character":3,"targetString":"SwitchButton"},{"text":"(JSX attribute) defaultValue?: boolean | undefined","docs":"","start":199,"length":12,"line":9,"character":4,"targetString":"defaultValue"},{"text":"(JSX attribute) onValueChange: (value: boolean) => void","docs":"","start":224,"length":13,"line":10,"character":4,"targetString":"onValueChange"},{"text":"(parameter) value: boolean","docs":"","start":239,"length":5,"line":10,"character":19,"targetString":"value"},{"text":"var console: Console","docs":"","start":248,"length":7,"line":10,"character":28,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":256,"length":3,"line":10,"character":36,"targetString":"log"},{"text":"(parameter) value: boolean","docs":"","start":260,"length":5,"line":10,"character":40,"targetString":"value"}]],"/data-entry/timer-picker":[[{"text":"(alias) class TimerPicker\nimport TimerPicker","docs":"","start":9,"length":11,"line":0,"character":9,"targetString":"TimerPicker"},{"text":"const time: {\n    startTime: number;\n    endTime: number;\n}","docs":"","start":53,"length":4,"line":2,"character":7,"targetString":"time"},{"text":"const setTime: React.Dispatch<React.SetStateAction<{\n    startTime: number;\n    endTime: number;\n}>>","docs":"","start":59,"length":7,"line":2,"character":13,"targetString":"setTime"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":70,"length":5,"line":2,"character":24,"targetString":"React"},{"text":"function React.useState<{\n    startTime: number;\n    endTime: number;\n}>(initialState: {\n    startTime: number;\n    endTime: number;\n} | (() => {\n    startTime: number;\n    endTime: number;\n})): [{\n    startTime: number;\n    endTime: number;\n}, React.Dispatch<React.SetStateAction<{\n    startTime: number;\n    endTime: number;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":76,"length":8,"line":2,"character":30,"targetString":"useState"},{"text":"(property) startTime: number","docs":"","start":87,"length":9,"line":2,"character":41,"targetString":"startTime"},{"text":"(property) endTime: number","docs":"","start":101,"length":7,"line":2,"character":55,"targetString":"endTime"},{"text":"(alias) class TimerPicker\nimport TimerPicker","docs":"","start":118,"length":11,"line":4,"character":1,"targetString":"TimerPicker"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":132,"length":5,"line":5,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":141,"length":9,"line":5,"character":11,"targetString":"marginTop"},{"text":"(JSX attribute) startTime?: number | undefined","docs":"","start":160,"length":9,"line":6,"character":2,"targetString":"startTime"},{"text":"const time: {\n    startTime: number;\n    endTime: number;\n}","docs":"","start":171,"length":4,"line":6,"character":13,"targetString":"time"},{"text":"(property) startTime: number","docs":"","start":176,"length":9,"line":6,"character":18,"targetString":"startTime"},{"text":"(JSX attribute) endTime?: number | undefined","docs":"","start":189,"length":7,"line":7,"character":2,"targetString":"endTime"},{"text":"const time: {\n    startTime: number;\n    endTime: number;\n}","docs":"","start":198,"length":4,"line":7,"character":11,"targetString":"time"},{"text":"(property) endTime: number","docs":"","start":203,"length":7,"line":7,"character":16,"targetString":"endTime"},{"text":"(JSX attribute) onTimerChange?: ((startTime: number, endTime: number) => void) | undefined","docs":"","start":214,"length":13,"line":8,"character":2,"targetString":"onTimerChange"},{"text":"(parameter) startTime: number","docs":"","start":230,"length":9,"line":8,"character":18,"targetString":"startTime"},{"text":"(parameter) endTime: number","docs":"","start":241,"length":7,"line":8,"character":29,"targetString":"endTime"},{"text":"const setTime: (value: React.SetStateAction<{\n    startTime: number;\n    endTime: number;\n}>) => void","docs":"","start":253,"length":7,"line":8,"character":41,"targetString":"setTime"},{"text":"(property) startTime: number","docs":"","start":263,"length":9,"line":8,"character":51,"targetString":"startTime"},{"text":"(property) endTime: number","docs":"","start":274,"length":7,"line":8,"character":62,"targetString":"endTime"}],[{"text":"(alias) class TimerPicker\nimport TimerPicker","docs":"","start":9,"length":11,"line":0,"character":9,"targetString":"TimerPicker"},{"text":"const time: {\n    startTime: number;\n    endTime: number;\n}","docs":"","start":53,"length":4,"line":2,"character":7,"targetString":"time"},{"text":"const setTime: React.Dispatch<React.SetStateAction<{\n    startTime: number;\n    endTime: number;\n}>>","docs":"","start":59,"length":7,"line":2,"character":13,"targetString":"setTime"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":70,"length":5,"line":2,"character":24,"targetString":"React"},{"text":"function React.useState<{\n    startTime: number;\n    endTime: number;\n}>(initialState: {\n    startTime: number;\n    endTime: number;\n} | (() => {\n    startTime: number;\n    endTime: number;\n})): [{\n    startTime: number;\n    endTime: number;\n}, React.Dispatch<React.SetStateAction<{\n    startTime: number;\n    endTime: number;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":76,"length":8,"line":2,"character":30,"targetString":"useState"},{"text":"(property) startTime: number","docs":"","start":87,"length":9,"line":2,"character":41,"targetString":"startTime"},{"text":"(property) endTime: number","docs":"","start":101,"length":7,"line":2,"character":55,"targetString":"endTime"},{"text":"(alias) class TimerPicker\nimport TimerPicker","docs":"","start":118,"length":11,"line":4,"character":1,"targetString":"TimerPicker"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":132,"length":5,"line":5,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":141,"length":9,"line":5,"character":11,"targetString":"marginTop"},{"text":"(JSX attribute) startTime?: number | undefined","docs":"","start":160,"length":9,"line":6,"character":2,"targetString":"startTime"},{"text":"const time: {\n    startTime: number;\n    endTime: number;\n}","docs":"","start":171,"length":4,"line":6,"character":13,"targetString":"time"},{"text":"(property) startTime: number","docs":"","start":176,"length":9,"line":6,"character":18,"targetString":"startTime"},{"text":"(JSX attribute) endTime?: number | undefined","docs":"","start":189,"length":7,"line":7,"character":2,"targetString":"endTime"},{"text":"const time: {\n    startTime: number;\n    endTime: number;\n}","docs":"","start":198,"length":4,"line":7,"character":11,"targetString":"time"},{"text":"(property) endTime: number","docs":"","start":203,"length":7,"line":7,"character":16,"targetString":"endTime"},{"text":"(JSX attribute) prefixPosition?: \"left\" | string[] | \"right\" | undefined","docs":"","start":214,"length":14,"line":8,"character":2,"targetString":"prefixPosition"},{"text":"(JSX attribute) onTimerChange?: ((startTime: number, endTime: number) => void) | undefined","docs":"","start":238,"length":13,"line":9,"character":2,"targetString":"onTimerChange"},{"text":"(parameter) startTime: number","docs":"","start":254,"length":9,"line":9,"character":18,"targetString":"startTime"},{"text":"(parameter) endTime: number","docs":"","start":265,"length":7,"line":9,"character":29,"targetString":"endTime"},{"text":"const setTime: (value: React.SetStateAction<{\n    startTime: number;\n    endTime: number;\n}>) => void","docs":"","start":277,"length":7,"line":9,"character":41,"targetString":"setTime"},{"text":"(property) startTime: number","docs":"","start":287,"length":9,"line":9,"character":51,"targetString":"startTime"},{"text":"(property) endTime: number","docs":"","start":298,"length":7,"line":9,"character":62,"targetString":"endTime"}]],"/basic/battery":[[{"text":"(alias) class Battery\nimport Battery","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"Battery"},{"text":"(alias) class Battery\nimport Battery","docs":"","start":43,"length":7,"line":2,"character":1,"targetString":"Battery"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":51,"length":5,"line":2,"character":9,"targetString":"value"},{"text":"(alias) class Battery\nimport Battery","docs":"","start":67,"length":7,"line":3,"character":1,"targetString":"Battery"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":75,"length":5,"line":3,"character":9,"targetString":"value"},{"text":"(alias) class Battery\nimport Battery","docs":"","start":90,"length":7,"line":4,"character":1,"targetString":"Battery"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":98,"length":5,"line":4,"character":9,"targetString":"value"},{"text":"(alias) class Battery\nimport Battery","docs":"","start":113,"length":7,"line":5,"character":1,"targetString":"Battery"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":121,"length":5,"line":5,"character":9,"targetString":"value"}],[{"text":"(alias) class Battery\nimport Battery","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"Battery"},{"text":"(alias) class Battery\nimport Battery","docs":"","start":43,"length":7,"line":2,"character":1,"targetString":"Battery"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":51,"length":5,"line":2,"character":9,"targetString":"value"},{"text":"(JSX attribute) theme?: {\n    batteryColor: string;\n} | undefined","docs":"","start":63,"length":5,"line":2,"character":21,"targetString":"theme"},{"text":"(property) batteryColor: string","docs":"","start":72,"length":12,"line":2,"character":30,"targetString":"batteryColor"}],[{"text":"(alias) class Battery\nimport Battery","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"Battery"},{"text":"const calcColor: (top: any, highColor: any, middleColor: any, lowColor: any) => any","docs":"","start":48,"length":9,"line":2,"character":6,"targetString":"calcColor"},{"text":"(parameter) top: any","docs":"","start":61,"length":3,"line":2,"character":19,"targetString":"top"},{"text":"(parameter) highColor: any","docs":"","start":66,"length":9,"line":2,"character":24,"targetString":"highColor"},{"text":"(parameter) middleColor: any","docs":"","start":77,"length":11,"line":2,"character":35,"targetString":"middleColor"},{"text":"(parameter) lowColor: any","docs":"","start":90,"length":8,"line":2,"character":48,"targetString":"lowColor"},{"text":"(parameter) top: any","docs":"","start":161,"length":3,"line":4,"character":6,"targetString":"top"},{"text":"(parameter) top: any","docs":"","start":175,"length":3,"line":4,"character":20,"targetString":"top"},{"text":"(parameter) highColor: any","docs":"","start":198,"length":9,"line":5,"character":11,"targetString":"highColor"},{"text":"(parameter) top: any","docs":"","start":222,"length":3,"line":6,"character":13,"targetString":"top"},{"text":"(parameter) top: any","docs":"","start":237,"length":3,"line":6,"character":28,"targetString":"top"},{"text":"(parameter) middleColor: any","docs":"","start":261,"length":11,"line":7,"character":11,"targetString":"middleColor"},{"text":"(parameter) lowColor: any","docs":"","start":287,"length":8,"line":9,"character":9,"targetString":"lowColor"},{"text":"(alias) class Battery\nimport Battery","docs":"","start":302,"length":7,"line":12,"character":1,"targetString":"Battery"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":310,"length":5,"line":12,"character":9,"targetString":"value"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":321,"length":4,"line":12,"character":20,"targetString":"size"},{"text":"(JSX attribute) onCalcColor?: ((...args: any[]) => void) | undefined","docs":"","start":331,"length":11,"line":12,"character":30,"targetString":"onCalcColor"},{"text":"const calcColor: (top: any, highColor: any, middleColor: any, lowColor: any) => any","docs":"","start":344,"length":9,"line":12,"character":43,"targetString":"calcColor"},{"text":"(JSX attribute) middleColor?: string | undefined","docs":"","start":355,"length":11,"line":12,"character":54,"targetString":"middleColor"}]],"/basic/brick-button":[[{"text":"(alias) class BrickButton\nimport BrickButton","docs":"","start":9,"length":11,"line":0,"character":9,"targetString":"BrickButton"},{"text":"(alias) class BrickButton\nimport BrickButton","docs":"","start":47,"length":11,"line":2,"character":1,"targetString":"BrickButton"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":61,"length":4,"line":3,"character":2,"targetString":"text"},{"text":"(JSX attribute) wrapperStyle?: StyleProp<ViewStyle>","docs":"","start":77,"length":12,"line":4,"character":2,"targetString":"wrapperStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":93,"length":15,"line":4,"character":18,"targetString":"backgroundColor"}],[{"text":"(alias) class BrickButton\nimport BrickButton","docs":"","start":9,"length":11,"line":0,"character":9,"targetString":"BrickButton"},{"text":"(alias) class BrickButton\nimport BrickButton","docs":"","start":47,"length":11,"line":2,"character":1,"targetString":"BrickButton"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":61,"length":4,"line":3,"character":2,"targetString":"text"},{"text":"(JSX attribute) loadingSize?: number | \"large\" | \"small\" | undefined","docs":"","start":77,"length":11,"line":4,"character":2,"targetString":"loadingSize"},{"text":"(JSX attribute) type?: \"small\" | \"primaryGradient\" | \"primary\" | \"primaryBorder\" | \"normal\" | undefined","docs":"","start":99,"length":4,"line":5,"character":2,"targetString":"type"},{"text":"(JSX attribute) background?: BackgroundProps | undefined","docs":"","start":124,"length":10,"line":6,"character":2,"targetString":"background"},{"text":"(property) LinearGradientBackground.x1?: string | undefined","docs":"","start":142,"length":2,"line":7,"character":4,"targetString":"x1"},{"text":"(property) LinearGradientBackground.y1?: string | undefined","docs":"","start":156,"length":2,"line":8,"character":4,"targetString":"y1"},{"text":"(property) LinearGradientBackground.x2?: string | undefined","docs":"","start":170,"length":2,"line":9,"character":4,"targetString":"x2"},{"text":"(property) LinearGradientBackground.y2?: string | undefined","docs":"","start":184,"length":2,"line":10,"character":4,"targetString":"y2"},{"text":"(property) stops: {\n    '0%': string;\n    '100%': string;\n}","docs":"","start":200,"length":5,"line":11,"character":4,"targetString":"stops"}]],"/basic/button":[[{"text":"(alias) class Button\nimport Button","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Button"},{"text":"(alias) class Button\nimport Button","docs":"","start":42,"length":6,"line":2,"character":1,"targetString":"Button"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":49,"length":4,"line":2,"character":8,"targetString":"text"}],[{"text":"(alias) class Button\nimport Button","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Button"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":17,"length":5,"line":0,"character":17,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":56,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":66,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":73,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":79,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"const powerPath: \"M874.039 149.961c199.948 199.949 199.948 524.13 0 724.078-199.949 199.948-524.13 199.948-724.078 0-199.948-199.949-199.948-524.13 0-724.078 19.995-19.995 52.413-19.995 72.408 0 19.995 19.995 19.995 52.413 0 72.408-159.959 159.959-159.959 419.303 0 579.262 159.959 159.959 419.303 159.959 579.262 0 159.959-159.959 159.959-419.303 0-579.262-19.995-19.995-19.995-52.413 0-72.408 19.995-19.995 52.413-19.995 72.408 0zM562.2 0a1 1 0 0 1 1 1v510a1 1 0 0 1-1 1H461.8a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h100.4z\"","docs":"","start":98,"length":9,"line":4,"character":6,"targetString":"powerPath"},{"text":"(alias) class Button\nimport Button","docs":"","start":613,"length":6,"line":6,"character":1,"targetString":"Button"},{"text":"(JSX attribute) iconColor?: string | undefined","docs":"","start":622,"length":9,"line":7,"character":2,"targetString":"iconColor"},{"text":"(JSX attribute) size?: number | \"large\" | \"normal\" | \"small\" | \"noSet\" | undefined","docs":"","start":641,"length":4,"line":8,"character":2,"targetString":"size"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"//FIXME: not in doc but available in examples","start":653,"length":5,"line":9,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":666,"length":5,"line":10,"character":4,"targetString":"width"},{"text":"const cx: (d: number) => number","docs":"","start":673,"length":2,"line":10,"character":11,"targetString":"cx"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":685,"length":6,"line":11,"character":4,"targetString":"height"},{"text":"const cx: (d: number) => number","docs":"","start":693,"length":2,"line":11,"character":12,"targetString":"cx"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":705,"length":15,"line":12,"character":4,"targetString":"backgroundColor"},{"text":"(property) ShadowStyleIOS.shadowColor?: ColorValue | undefined","docs":"","start":737,"length":11,"line":13,"character":4,"targetString":"shadowColor"},{"text":"(property) ShadowStyleIOS.shadowOffset?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":762,"length":12,"line":14,"character":4,"targetString":"shadowOffset"},{"text":"(property) width: number","docs":"","start":784,"length":5,"line":15,"character":6,"targetString":"width"},{"text":"(property) height: number","docs":"","start":800,"length":6,"line":16,"character":6,"targetString":"height"},{"text":"(property) ShadowStyleIOS.shadowOpacity?: number | undefined","docs":"","start":822,"length":13,"line":18,"character":4,"targetString":"shadowOpacity"},{"text":"(property) ShadowStyleIOS.shadowRadius?: number | undefined","docs":"","start":846,"length":12,"line":19,"character":4,"targetString":"shadowRadius"},{"text":"(property) ViewStyle.elevation?: number | undefined","docs":"Sets the elevation of a view, using Android's underlying\n[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\nThis adds a drop shadow to the item and affects z-order for overlapping views.\nOnly supported on Android 5.0+, has no effect on earlier versions.","start":867,"length":9,"line":20,"character":4,"targetString":"elevation"},{"text":"(JSX attribute) wrapperStyle?: StyleProp<ViewStyle>","docs":"","start":888,"length":12,"line":22,"character":2,"targetString":"wrapperStyle"},{"text":"(property) FlexStyle.alignSelf?: \"auto\" | FlexAlignType | undefined","docs":"","start":908,"length":9,"line":23,"character":4,"targetString":"alignSelf"},{"text":"(JSX attribute) iconPath?: string | undefined","docs":"","start":940,"length":8,"line":25,"character":2,"targetString":"iconPath"},{"text":"const powerPath: \"M874.039 149.961c199.948 199.949 199.948 524.13 0 724.078-199.949 199.948-524.13 199.948-724.078 0-199.948-199.949-199.948-524.13 0-724.078 19.995-19.995 52.413-19.995 72.408 0 19.995 19.995 19.995 52.413 0 72.408-159.959 159.959-159.959 419.303 0 579.262 159.959 159.959 419.303 159.959 579.262 0 159.959-159.959 159.959-419.303 0-579.262-19.995-19.995-19.995-52.413 0-72.408 19.995-19.995 52.413-19.995 72.408 0zM562.2 0a1 1 0 0 1 1 1v510a1 1 0 0 1-1 1H461.8a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h100.4z\"","docs":"","start":950,"length":9,"line":25,"character":12,"targetString":"powerPath"}],[{"text":"(alias) class Button\nimport Button","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Button"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":17,"length":5,"line":0,"character":17,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":56,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":66,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":73,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":79,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"const powerPath: \"M874.039 149.961c199.948 199.949 199.948 524.13 0 724.078-199.949 199.948-524.13 199.948-724.078 0-199.948-199.949-199.948-524.13 0-724.078 19.995-19.995 52.413-19.995 72.408 0 19.995 19.995 19.995 52.413 0 72.408-159.959 159.959-159.959 419.303 0 579.262 159.959 159.959 419.303 159.959 579.262 0 159.959-159.959 159.959-419.303 0-579.262-19.995-19.995-19.995-52.413 0-72.408 19.995-19.995 52.413-19.995 72.408 0zM562.2 0a1 1 0 0 1 1 1v510a1 1 0 0 1-1 1H461.8a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h100.4z\"","docs":"","start":98,"length":9,"line":4,"character":6,"targetString":"powerPath"},{"text":"(alias) class Button\nimport Button","docs":"","start":613,"length":6,"line":6,"character":1,"targetString":"Button"},{"text":"(JSX attribute) iconColor?: string | undefined","docs":"","start":622,"length":9,"line":7,"character":2,"targetString":"iconColor"},{"text":"(JSX attribute) size?: number | \"large\" | \"normal\" | \"small\" | \"noSet\" | undefined","docs":"","start":641,"length":4,"line":8,"character":2,"targetString":"size"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"//FIXME: not in doc but available in examples","start":653,"length":5,"line":9,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":666,"length":5,"line":10,"character":4,"targetString":"width"},{"text":"const cx: (d: number) => number","docs":"","start":673,"length":2,"line":10,"character":11,"targetString":"cx"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":685,"length":6,"line":11,"character":4,"targetString":"height"},{"text":"const cx: (d: number) => number","docs":"","start":693,"length":2,"line":11,"character":12,"targetString":"cx"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":705,"length":15,"line":12,"character":4,"targetString":"backgroundColor"},{"text":"(property) ShadowStyleIOS.shadowColor?: ColorValue | undefined","docs":"","start":737,"length":11,"line":13,"character":4,"targetString":"shadowColor"},{"text":"(property) ShadowStyleIOS.shadowOffset?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":762,"length":12,"line":14,"character":4,"targetString":"shadowOffset"},{"text":"(property) width: number","docs":"","start":784,"length":5,"line":15,"character":6,"targetString":"width"},{"text":"(property) height: number","docs":"","start":800,"length":6,"line":16,"character":6,"targetString":"height"},{"text":"(property) ShadowStyleIOS.shadowOpacity?: number | undefined","docs":"","start":822,"length":13,"line":18,"character":4,"targetString":"shadowOpacity"},{"text":"(property) ShadowStyleIOS.shadowRadius?: number | undefined","docs":"","start":846,"length":12,"line":19,"character":4,"targetString":"shadowRadius"},{"text":"(property) ViewStyle.elevation?: number | undefined","docs":"Sets the elevation of a view, using Android's underlying\n[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\nThis adds a drop shadow to the item and affects z-order for overlapping views.\nOnly supported on Android 5.0+, has no effect on earlier versions.","start":867,"length":9,"line":20,"character":4,"targetString":"elevation"},{"text":"(JSX attribute) iconPath?: string | undefined","docs":"","start":888,"length":8,"line":22,"character":2,"targetString":"iconPath"},{"text":"const powerPath: \"M874.039 149.961c199.948 199.949 199.948 524.13 0 724.078-199.949 199.948-524.13 199.948-724.078 0-199.948-199.949-199.948-524.13 0-724.078 19.995-19.995 52.413-19.995 72.408 0 19.995 19.995 19.995 52.413 0 72.408-159.959 159.959-159.959 419.303 0 579.262 159.959 159.959 419.303 159.959 579.262 0 159.959-159.959 159.959-419.303 0-579.262-19.995-19.995-19.995-52.413 0-72.408 19.995-19.995 52.413-19.995 72.408 0zM562.2 0a1 1 0 0 1 1 1v510a1 1 0 0 1-1 1H461.8a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h100.4z\"","docs":"","start":898,"length":9,"line":22,"character":12,"targetString":"powerPath"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":911,"length":4,"line":23,"character":2,"targetString":"text"},{"text":"(alias) class Button\nimport Button","docs":"","start":930,"length":6,"line":25,"character":1,"targetString":"Button"},{"text":"(JSX attribute) iconColor?: string | undefined","docs":"","start":939,"length":9,"line":26,"character":2,"targetString":"iconColor"},{"text":"(JSX attribute) textDirection?: \"right\" | \"left\" | \"top\" | \"bottom\" | \"center\" | undefined","docs":"","start":958,"length":13,"line":27,"character":2,"targetString":"textDirection"},{"text":"(JSX attribute) size?: number | \"large\" | \"normal\" | \"small\" | \"noSet\" | undefined","docs":"","start":982,"length":4,"line":28,"character":2,"targetString":"size"},{"text":"(JSX attribute) iconPath?: string | undefined","docs":"","start":994,"length":8,"line":29,"character":2,"targetString":"iconPath"},{"text":"const powerPath: \"M874.039 149.961c199.948 199.949 199.948 524.13 0 724.078-199.949 199.948-524.13 199.948-724.078 0-199.948-199.949-199.948-524.13 0-724.078 19.995-19.995 52.413-19.995 72.408 0 19.995 19.995 19.995 52.413 0 72.408-159.959 159.959-159.959 419.303 0 579.262 159.959 159.959 419.303 159.959 579.262 0 159.959-159.959 159.959-419.303 0-579.262-19.995-19.995-19.995-52.413 0-72.408 19.995-19.995 52.413-19.995 72.408 0zM562.2 0a1 1 0 0 1 1 1v510a1 1 0 0 1-1 1H461.8a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h100.4z\"","docs":"","start":1004,"length":9,"line":29,"character":12,"targetString":"powerPath"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"//FIXME: not in doc but available in examples","start":1017,"length":5,"line":30,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":1030,"length":5,"line":31,"character":4,"targetString":"width"},{"text":"const cx: (d: number) => number","docs":"","start":1037,"length":2,"line":31,"character":11,"targetString":"cx"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":1049,"length":6,"line":32,"character":4,"targetString":"height"},{"text":"const cx: (d: number) => number","docs":"","start":1057,"length":2,"line":32,"character":12,"targetString":"cx"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":1069,"length":15,"line":33,"character":4,"targetString":"backgroundColor"},{"text":"(JSX attribute) textStyle?: StyleProp<TextStyle>","docs":"","start":1104,"length":9,"line":35,"character":2,"targetString":"textStyle"},{"text":"(property) TextStyle.color?: ColorValue | undefined","docs":"","start":1121,"length":5,"line":36,"character":4,"targetString":"color"},{"text":"(property) FlexStyle.marginLeft?: string | number | undefined","docs":"","start":1140,"length":10,"line":37,"character":4,"targetString":"marginLeft"},{"text":"(property) FlexStyle.marginRight?: string | number | undefined","docs":"","start":1159,"length":11,"line":38,"character":4,"targetString":"marginRight"},{"text":"const cx: (d: number) => number","docs":"","start":1172,"length":2,"line":38,"character":17,"targetString":"cx"},{"text":"(JSX attribute) wrapperStyle?: StyleProp<ViewStyle>","docs":"","start":1187,"length":12,"line":40,"character":2,"targetString":"wrapperStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":1207,"length":15,"line":41,"character":4,"targetString":"backgroundColor"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":1239,"length":12,"line":42,"character":4,"targetString":"borderRadius"},{"text":"const cx: (d: number) => number","docs":"","start":1253,"length":2,"line":42,"character":18,"targetString":"cx"},{"text":"(property) FlexStyle.marginLeft?: string | number | undefined","docs":"","start":1265,"length":10,"line":43,"character":4,"targetString":"marginLeft"},{"text":"const cx: (d: number) => number","docs":"","start":1277,"length":2,"line":43,"character":16,"targetString":"cx"},{"text":"(property) FlexStyle.position?: \"absolute\" | \"relative\" | undefined","docs":"","start":1289,"length":8,"line":44,"character":4,"targetString":"position"},{"text":"(property) FlexStyle.top?: string | number | undefined","docs":"","start":1315,"length":3,"line":45,"character":4,"targetString":"top"},{"text":"const cx: (d: number) => number","docs":"","start":1320,"length":2,"line":45,"character":9,"targetString":"cx"},{"text":"(property) ShadowStyleIOS.shadowColor?: ColorValue | undefined","docs":"","start":1333,"length":11,"line":46,"character":4,"targetString":"shadowColor"},{"text":"(property) ShadowStyleIOS.shadowOffset?: {\n    width: number;\n    height: number;\n} | undefined","docs":"","start":1358,"length":12,"line":47,"character":4,"targetString":"shadowOffset"},{"text":"(property) width: number","docs":"","start":1380,"length":5,"line":48,"character":6,"targetString":"width"},{"text":"(property) height: number","docs":"","start":1396,"length":6,"line":49,"character":6,"targetString":"height"},{"text":"(property) ShadowStyleIOS.shadowOpacity?: number | undefined","docs":"","start":1418,"length":13,"line":51,"character":4,"targetString":"shadowOpacity"},{"text":"(property) ShadowStyleIOS.shadowRadius?: number | undefined","docs":"","start":1442,"length":12,"line":52,"character":4,"targetString":"shadowRadius"},{"text":"(property) ViewStyle.elevation?: number | undefined","docs":"Sets the elevation of a view, using Android's underlying\n[elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\nThis adds a drop shadow to the item and affects z-order for overlapping views.\nOnly supported on Android 5.0+, has no effect on earlier versions.","start":1463,"length":9,"line":53,"character":4,"targetString":"elevation"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":1484,"length":4,"line":55,"character":2,"targetString":"text"}],[{"text":"(alias) class Button\nimport Button","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Button"},{"text":"(alias) class Button\nimport Button","docs":"","start":42,"length":6,"line":2,"character":1,"targetString":"Button"},{"text":"(JSX attribute) textDirection?: \"right\" | \"left\" | \"top\" | \"bottom\" | \"center\" | undefined","docs":"","start":51,"length":13,"line":3,"character":2,"targetString":"textDirection"},{"text":"(JSX attribute) size?: number | \"large\" | \"normal\" | \"small\" | \"noSet\" | undefined","docs":"","start":75,"length":4,"line":4,"character":2,"targetString":"size"},{"text":"(JSX attribute) icon?: string | undefined","docs":"","start":87,"length":4,"line":5,"character":2,"targetString":"icon"},{"text":"(JSX attribute) iconSize?: number | undefined","docs":"","start":105,"length":8,"line":6,"character":2,"targetString":"iconSize"},{"text":"(JSX attribute) iconColor?: string | undefined","docs":"","start":121,"length":9,"line":7,"character":2,"targetString":"iconColor"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":140,"length":4,"line":8,"character":2,"targetString":"text"},{"text":"(JSX attribute) background?: BackgroundProps | undefined","docs":"","start":154,"length":10,"line":9,"character":2,"targetString":"background"},{"text":"(property) LinearGradientBackground.x1?: string | undefined","docs":"","start":172,"length":2,"line":10,"character":4,"targetString":"x1"},{"text":"(property) LinearGradientBackground.y1?: string | undefined","docs":"","start":187,"length":2,"line":11,"character":4,"targetString":"y1"},{"text":"(property) LinearGradientBackground.x2?: string | undefined","docs":"","start":202,"length":2,"line":12,"character":4,"targetString":"x2"},{"text":"(property) LinearGradientBackground.y2?: string | undefined","docs":"","start":217,"length":2,"line":13,"character":4,"targetString":"y2"},{"text":"(property) stops: {\n    '0%': string;\n    '100%': string;\n}","docs":"","start":233,"length":5,"line":14,"character":4,"targetString":"stops"}]],"/basic/icon-font":[[{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"IconFont"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":44,"length":8,"line":2,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":53,"length":4,"line":2,"character":10,"targetString":"name"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":70,"length":8,"line":3,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":79,"length":4,"line":3,"character":10,"targetString":"name"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":102,"length":8,"line":4,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":111,"length":4,"line":4,"character":10,"targetString":"name"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":130,"length":8,"line":5,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":139,"length":4,"line":5,"character":10,"targetString":"name"}],[{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"IconFont"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":44,"length":8,"line":2,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":53,"length":5,"line":2,"character":10,"targetString":"color"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":69,"length":4,"line":2,"character":26,"targetString":"name"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":86,"length":8,"line":3,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":95,"length":5,"line":3,"character":10,"targetString":"color"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":111,"length":4,"line":3,"character":26,"targetString":"name"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":134,"length":8,"line":4,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":143,"length":5,"line":4,"character":10,"targetString":"color"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":159,"length":4,"line":4,"character":26,"targetString":"name"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":178,"length":8,"line":5,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":187,"length":5,"line":5,"character":10,"targetString":"color"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":203,"length":4,"line":5,"character":26,"targetString":"name"}],[{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"IconFont"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":19,"length":5,"line":0,"character":19,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":59,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":69,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":76,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":82,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":96,"length":8,"line":4,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":105,"length":5,"line":4,"character":10,"targetString":"color"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":121,"length":4,"line":4,"character":26,"targetString":"size"},{"text":"const cx: (d: number) => number","docs":"","start":127,"length":2,"line":4,"character":32,"targetString":"cx"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":135,"length":4,"line":4,"character":40,"targetString":"name"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":152,"length":8,"line":5,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":161,"length":5,"line":5,"character":10,"targetString":"color"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":177,"length":4,"line":5,"character":26,"targetString":"size"},{"text":"const cx: (d: number) => number","docs":"","start":183,"length":2,"line":5,"character":32,"targetString":"cx"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":191,"length":4,"line":5,"character":40,"targetString":"name"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":214,"length":8,"line":6,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":223,"length":5,"line":6,"character":10,"targetString":"color"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":239,"length":4,"line":6,"character":26,"targetString":"size"},{"text":"const cx: (d: number) => number","docs":"","start":245,"length":2,"line":6,"character":32,"targetString":"cx"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":253,"length":4,"line":6,"character":40,"targetString":"name"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":272,"length":8,"line":7,"character":1,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":281,"length":5,"line":7,"character":10,"targetString":"color"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":297,"length":4,"line":7,"character":26,"targetString":"size"},{"text":"const cx: (d: number) => number","docs":"","start":303,"length":2,"line":7,"character":32,"targetString":"cx"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":311,"length":4,"line":7,"character":40,"targetString":"name"}]],"/basic/motion":[[{"text":"(alias) class Motion\nimport Motion","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Motion"},{"text":"const fadeShow: boolean","docs":"","start":48,"length":8,"line":2,"character":7,"targetString":"fadeShow"},{"text":"const setFadeShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":58,"length":11,"line":2,"character":17,"targetString":"setFadeShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":73,"length":5,"line":2,"character":32,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":79,"length":8,"line":2,"character":38,"targetString":"useState"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":103,"length":13,"line":4,"character":6,"targetString":"contentStyles"},{"text":"(property) width: number","docs":"","start":123,"length":5,"line":5,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":137,"length":6,"line":6,"character":2,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":152,"length":15,"line":7,"character":2,"targetString":"backgroundColor"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":182,"length":6,"line":10,"character":1,"targetString":"Motion"},{"text":"(property) Motion.Fade: React.ElementType<MotionFadeProps>","docs":"","start":189,"length":4,"line":10,"character":8,"targetString":"Fade"},{"text":"(JSX attribute) MotionProps.style?: StyleProp<ViewStyle>","docs":"","start":196,"length":5,"line":11,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.position?: \"absolute\" | \"relative\" | undefined","docs":"","start":205,"length":8,"line":11,"character":11,"targetString":"position"},{"text":"(property) FlexStyle.bottom?: string | number | undefined","docs":"","start":227,"length":6,"line":11,"character":33,"targetString":"bottom"},{"text":"(JSX attribute) MotionProps.show?: boolean | undefined","docs":"","start":242,"length":4,"line":12,"character":2,"targetString":"show"},{"text":"const fadeShow: boolean","docs":"","start":248,"length":8,"line":12,"character":8,"targetString":"fadeShow"},{"text":"(JSX attribute) MotionProps.onHide?: (() => void) | undefined","docs":"","start":260,"length":6,"line":13,"character":2,"targetString":"onHide"},{"text":"const setFadeShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":274,"length":11,"line":13,"character":16,"targetString":"setFadeShow"},{"text":"(JSX attribute) style: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":304,"length":5,"line":15,"character":8,"targetString":"style"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":311,"length":13,"line":15,"character":15,"targetString":"contentStyles"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":331,"length":6,"line":16,"character":2,"targetString":"Motion"},{"text":"(property) Motion.Fade: React.ElementType<MotionFadeProps>","docs":"","start":338,"length":4,"line":16,"character":9,"targetString":"Fade"}],[{"text":"(alias) class Motion\nimport Motion","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Motion"},{"text":"const pullUpShow: boolean","docs":"","start":48,"length":10,"line":2,"character":7,"targetString":"pullUpShow"},{"text":"const setPullUpShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":60,"length":13,"line":2,"character":19,"targetString":"setPullUpShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":77,"length":5,"line":2,"character":36,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":83,"length":8,"line":2,"character":42,"targetString":"useState"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":107,"length":13,"line":4,"character":6,"targetString":"contentStyles"},{"text":"(property) width: number","docs":"","start":127,"length":5,"line":5,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":141,"length":6,"line":6,"character":2,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":156,"length":15,"line":7,"character":2,"targetString":"backgroundColor"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":186,"length":6,"line":10,"character":1,"targetString":"Motion"},{"text":"(property) Motion.PullUp: React.ElementType<MotionPullUpProps>","docs":"","start":193,"length":6,"line":10,"character":8,"targetString":"PullUp"},{"text":"(JSX attribute) MotionProps.style?: StyleProp<ViewStyle>","docs":"","start":202,"length":5,"line":11,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.position?: \"absolute\" | \"relative\" | undefined","docs":"","start":211,"length":8,"line":11,"character":11,"targetString":"position"},{"text":"(property) FlexStyle.bottom?: string | number | undefined","docs":"","start":233,"length":6,"line":11,"character":33,"targetString":"bottom"},{"text":"(JSX attribute) MotionPullUpProps.dropHeight?: number | undefined","docs":"","start":248,"length":10,"line":12,"character":2,"targetString":"dropHeight"},{"text":"(JSX attribute) MotionProps.show?: boolean | undefined","docs":"","start":267,"length":4,"line":13,"character":2,"targetString":"show"},{"text":"const pullUpShow: boolean","docs":"","start":273,"length":10,"line":13,"character":8,"targetString":"pullUpShow"},{"text":"(JSX attribute) MotionProps.onHide?: (() => void) | undefined","docs":"","start":287,"length":6,"line":14,"character":2,"targetString":"onHide"},{"text":"const setPullUpShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":301,"length":13,"line":14,"character":16,"targetString":"setPullUpShow"},{"text":"(JSX attribute) style: ({\n    width: number;\n    height: number;\n    backgroundColor: string;\n} | {\n    bottom: number;\n})[]","docs":"","start":333,"length":5,"line":16,"character":8,"targetString":"style"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":341,"length":13,"line":16,"character":16,"targetString":"contentStyles"},{"text":"(property) bottom: number","docs":"","start":358,"length":6,"line":16,"character":33,"targetString":"bottom"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":377,"length":6,"line":17,"character":2,"targetString":"Motion"},{"text":"(property) Motion.PullUp: React.ElementType<MotionPullUpProps>","docs":"","start":384,"length":6,"line":17,"character":9,"targetString":"PullUp"}],[{"text":"(alias) class Motion\nimport Motion","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Motion"},{"text":"const scaleFadeInShow: boolean","docs":"","start":48,"length":15,"line":2,"character":7,"targetString":"scaleFadeInShow"},{"text":"const setScaleFadeInShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":65,"length":18,"line":2,"character":24,"targetString":"setScaleFadeInShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":87,"length":5,"line":2,"character":46,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":93,"length":8,"line":2,"character":52,"targetString":"useState"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":117,"length":13,"line":4,"character":6,"targetString":"contentStyles"},{"text":"(property) width: number","docs":"","start":137,"length":5,"line":5,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":151,"length":6,"line":6,"character":2,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":166,"length":15,"line":7,"character":2,"targetString":"backgroundColor"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":196,"length":6,"line":10,"character":1,"targetString":"Motion"},{"text":"(property) Motion.ScaleFadeIn: React.ElementType<MotionScaleFadeInProps>","docs":"","start":203,"length":11,"line":10,"character":8,"targetString":"ScaleFadeIn"},{"text":"(JSX attribute) MotionProps.style?: StyleProp<ViewStyle>","docs":"","start":217,"length":5,"line":11,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.position?: \"absolute\" | \"relative\" | undefined","docs":"","start":226,"length":8,"line":11,"character":11,"targetString":"position"},{"text":"(property) FlexStyle.bottom?: string | number | undefined","docs":"","start":248,"length":6,"line":11,"character":33,"targetString":"bottom"},{"text":"(JSX attribute) MotionProps.show?: boolean | undefined","docs":"","start":263,"length":4,"line":12,"character":2,"targetString":"show"},{"text":"const scaleFadeInShow: boolean","docs":"","start":269,"length":15,"line":12,"character":8,"targetString":"scaleFadeInShow"},{"text":"(JSX attribute) MotionProps.onHide?: (() => void) | undefined","docs":"","start":288,"length":6,"line":13,"character":2,"targetString":"onHide"},{"text":"const setScaleFadeInShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":302,"length":18,"line":13,"character":16,"targetString":"setScaleFadeInShow"},{"text":"(JSX attribute) style: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":339,"length":5,"line":15,"character":8,"targetString":"style"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":346,"length":13,"line":15,"character":15,"targetString":"contentStyles"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":366,"length":6,"line":16,"character":2,"targetString":"Motion"},{"text":"(property) Motion.ScaleFadeIn: React.ElementType<MotionScaleFadeInProps>","docs":"","start":373,"length":11,"line":16,"character":9,"targetString":"ScaleFadeIn"}],[{"text":"(alias) class Motion\nimport Motion","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Motion"},{"text":"const scalePullDownShow: boolean","docs":"","start":48,"length":17,"line":2,"character":7,"targetString":"scalePullDownShow"},{"text":"const setScalePullDownShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":67,"length":20,"line":2,"character":26,"targetString":"setScalePullDownShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":91,"length":5,"line":2,"character":50,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":97,"length":8,"line":2,"character":56,"targetString":"useState"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":121,"length":13,"line":4,"character":6,"targetString":"contentStyles"},{"text":"(property) width: number","docs":"","start":141,"length":5,"line":5,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":155,"length":6,"line":6,"character":2,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":170,"length":15,"line":7,"character":2,"targetString":"backgroundColor"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":200,"length":6,"line":10,"character":1,"targetString":"Motion"},{"text":"(property) Motion.ScalePullDown: React.ElementType<MotionScalePullDownProps>","docs":"","start":207,"length":13,"line":10,"character":8,"targetString":"ScalePullDown"},{"text":"(JSX attribute) MotionProps.show?: boolean | undefined","docs":"","start":223,"length":4,"line":11,"character":2,"targetString":"show"},{"text":"const scalePullDownShow: boolean","docs":"","start":229,"length":17,"line":11,"character":8,"targetString":"scalePullDownShow"},{"text":"(JSX attribute) MotionProps.onHide?: (() => void) | undefined","docs":"","start":250,"length":6,"line":12,"character":2,"targetString":"onHide"},{"text":"const setScalePullDownShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":264,"length":20,"line":12,"character":16,"targetString":"setScalePullDownShow"},{"text":"(JSX attribute) style: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":303,"length":5,"line":14,"character":8,"targetString":"style"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":310,"length":13,"line":14,"character":15,"targetString":"contentStyles"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":330,"length":6,"line":15,"character":2,"targetString":"Motion"},{"text":"(property) Motion.ScalePullDown: React.ElementType<MotionScalePullDownProps>","docs":"","start":337,"length":13,"line":15,"character":9,"targetString":"ScalePullDown"}],[{"text":"(alias) class Motion\nimport Motion","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Motion"},{"text":"const pushDownShow: boolean","docs":"","start":48,"length":12,"line":2,"character":7,"targetString":"pushDownShow"},{"text":"const setPushDownShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":62,"length":15,"line":2,"character":21,"targetString":"setPushDownShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":81,"length":5,"line":2,"character":40,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":87,"length":8,"line":2,"character":46,"targetString":"useState"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":110,"length":13,"line":3,"character":6,"targetString":"contentStyles"},{"text":"(property) width: number","docs":"","start":130,"length":5,"line":4,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":144,"length":6,"line":5,"character":2,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":159,"length":15,"line":6,"character":2,"targetString":"backgroundColor"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":189,"length":6,"line":9,"character":1,"targetString":"Motion"},{"text":"(property) Motion.PushDown: React.ElementType<MotionPushDownProps>","docs":"","start":196,"length":8,"line":9,"character":8,"targetString":"PushDown"},{"text":"(JSX attribute) MotionProps.style?: StyleProp<ViewStyle>","docs":"","start":207,"length":5,"line":10,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.position?: \"absolute\" | \"relative\" | undefined","docs":"","start":216,"length":8,"line":10,"character":11,"targetString":"position"},{"text":"(property) FlexStyle.bottom?: string | number | undefined","docs":"","start":238,"length":6,"line":10,"character":33,"targetString":"bottom"},{"text":"(JSX attribute) MotionProps.show?: boolean | undefined","docs":"","start":253,"length":4,"line":11,"character":2,"targetString":"show"},{"text":"const pushDownShow: boolean","docs":"","start":259,"length":12,"line":11,"character":8,"targetString":"pushDownShow"},{"text":"(JSX attribute) MotionProps.onHide?: (() => void) | undefined","docs":"","start":275,"length":6,"line":12,"character":2,"targetString":"onHide"},{"text":"const setPushDownShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":289,"length":15,"line":12,"character":16,"targetString":"setPushDownShow"},{"text":"(JSX attribute) MotionPushDownProps.dropHeight?: number | undefined","docs":"","start":315,"length":10,"line":13,"character":2,"targetString":"dropHeight"},{"text":"(JSX attribute) style: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":342,"length":5,"line":15,"character":8,"targetString":"style"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":349,"length":13,"line":15,"character":15,"targetString":"contentStyles"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":369,"length":6,"line":16,"character":2,"targetString":"Motion"},{"text":"(property) Motion.PushDown: React.ElementType<MotionPushDownProps>","docs":"","start":376,"length":8,"line":16,"character":9,"targetString":"PushDown"}],[{"text":"(alias) class Motion\nimport Motion","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Motion"},{"text":"const toastShow: boolean","docs":"","start":48,"length":9,"line":2,"character":7,"targetString":"toastShow"},{"text":"const setToastShow: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":59,"length":12,"line":2,"character":18,"targetString":"setToastShow"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":75,"length":5,"line":2,"character":34,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":81,"length":8,"line":2,"character":40,"targetString":"useState"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":104,"length":13,"line":3,"character":6,"targetString":"contentStyles"},{"text":"(property) width: number","docs":"","start":124,"length":5,"line":4,"character":2,"targetString":"width"},{"text":"(property) height: number","docs":"","start":138,"length":6,"line":5,"character":2,"targetString":"height"},{"text":"(property) backgroundColor: string","docs":"","start":153,"length":15,"line":6,"character":2,"targetString":"backgroundColor"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":183,"length":6,"line":9,"character":1,"targetString":"Motion"},{"text":"(property) Motion.Toast: React.ElementType<MotionToastProps>","docs":"","start":190,"length":5,"line":9,"character":8,"targetString":"Toast"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":198,"length":5,"line":10,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.position?: \"absolute\" | \"relative\" | undefined","docs":"","start":207,"length":8,"line":10,"character":11,"targetString":"position"},{"text":"(property) FlexStyle.bottom?: string | number | undefined","docs":"","start":229,"length":6,"line":10,"character":33,"targetString":"bottom"},{"text":"(JSX attribute) show?: boolean | undefined","docs":"","start":245,"length":4,"line":11,"character":2,"targetString":"show"},{"text":"const toastShow: boolean","docs":"","start":251,"length":9,"line":11,"character":8,"targetString":"toastShow"},{"text":"(JSX attribute) onHide: () => void","docs":"","start":264,"length":6,"line":12,"character":2,"targetString":"onHide"},{"text":"const setToastShow: (value: React.SetStateAction<boolean>) => void","docs":"","start":278,"length":12,"line":12,"character":16,"targetString":"setToastShow"},{"text":"(JSX attribute) style: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":309,"length":5,"line":14,"character":8,"targetString":"style"},{"text":"const contentStyles: {\n    width: number;\n    height: number;\n    backgroundColor: string;\n}","docs":"","start":316,"length":13,"line":14,"character":15,"targetString":"contentStyles"},{"text":"(alias) class Motion\nimport Motion","docs":"","start":336,"length":6,"line":15,"character":2,"targetString":"Motion"},{"text":"(property) Motion.Toast: React.ElementType<MotionToastProps>","docs":"","start":343,"length":5,"line":15,"character":9,"targetString":"Toast"}]],"/basic/slider-progress":[[{"text":"(alias) class SliderProgress\nimport SliderProgress","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"SliderProgress"},{"text":"const state: {\n    value: number;\n}","docs":"","start":56,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const set: React.Dispatch<React.SetStateAction<{\n    value: number;\n}>>","docs":"","start":63,"length":3,"line":2,"character":14,"targetString":"set"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":70,"length":5,"line":2,"character":21,"targetString":"React"},{"text":"function React.useState<{\n    value: number;\n}>(initialState: {\n    value: number;\n} | (() => {\n    value: number;\n})): [{\n    value: number;\n}, React.Dispatch<React.SetStateAction<{\n    value: number;\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":76,"length":8,"line":2,"character":27,"targetString":"useState"},{"text":"(property) value: number","docs":"","start":87,"length":5,"line":2,"character":38,"targetString":"value"},{"text":"const setState: (value: any) => void","docs":"","start":106,"length":8,"line":3,"character":6,"targetString":"setState"},{"text":"(parameter) value: any","docs":"","start":117,"length":5,"line":3,"character":17,"targetString":"value"},{"text":"const set: (value: React.SetStateAction<{\n    value: number;\n}>) => void","docs":"","start":126,"length":3,"line":3,"character":26,"targetString":"set"},{"text":"const state: {\n    value: number;\n}","docs":"","start":135,"length":5,"line":3,"character":35,"targetString":"state"},{"text":"(parameter) value: any","docs":"","start":145,"length":5,"line":3,"character":45,"targetString":"value"},{"text":"(alias) class SliderProgress\nimport SliderProgress","docs":"","start":157,"length":14,"line":5,"character":1,"targetString":"SliderProgress"},{"text":"(JSX attribute) activeColor?: string | undefined","docs":"","start":174,"length":11,"line":6,"character":2,"targetString":"activeColor"},{"text":"(JSX attribute) inactiveColor?: string | undefined","docs":"","start":198,"length":13,"line":7,"character":2,"targetString":"inactiveColor"},{"text":"(JSX attribute) value?: number | number[] | undefined","docs":"","start":224,"length":5,"line":8,"character":2,"targetString":"value"},{"text":"const state: {\n    value: number;\n}","docs":"","start":231,"length":5,"line":8,"character":9,"targetString":"state"},{"text":"(property) value: number","docs":"","start":237,"length":5,"line":8,"character":15,"targetString":"value"},{"text":"(JSX attribute) onValueChange?: ((...args: any[]) => any) | undefined","docs":"","start":246,"length":13,"line":9,"character":2,"targetString":"onValueChange"},{"text":"(parameter) v: any","docs":"","start":261,"length":1,"line":9,"character":17,"targetString":"v"},{"text":"const setState: (value: any) => void","docs":"","start":266,"length":8,"line":9,"character":22,"targetString":"setState"},{"text":"(property) value: any","docs":"","start":277,"length":5,"line":9,"character":33,"targetString":"value"},{"text":"(parameter) v: any","docs":"","start":284,"length":1,"line":9,"character":40,"targetString":"v"}],[{"text":"(alias) class SliderProgress\nimport SliderProgress","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"SliderProgress"},{"text":"const state: {\n    values: number[];\n}","docs":"","start":56,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const set: React.Dispatch<React.SetStateAction<{\n    values: number[];\n}>>","docs":"","start":63,"length":3,"line":2,"character":14,"targetString":"set"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":70,"length":5,"line":2,"character":21,"targetString":"React"},{"text":"function React.useState<{\n    values: number[];\n}>(initialState: {\n    values: number[];\n} | (() => {\n    values: number[];\n})): [{\n    values: number[];\n}, React.Dispatch<React.SetStateAction<{\n    values: number[];\n}>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":76,"length":8,"line":2,"character":27,"targetString":"useState"},{"text":"(property) values: number[]","docs":"","start":87,"length":6,"line":2,"character":38,"targetString":"values"},{"text":"const setState: (value: any) => void","docs":"","start":114,"length":8,"line":3,"character":6,"targetString":"setState"},{"text":"(parameter) value: any","docs":"","start":125,"length":5,"line":3,"character":17,"targetString":"value"},{"text":"const set: (value: React.SetStateAction<{\n    values: number[];\n}>) => void","docs":"","start":134,"length":3,"line":3,"character":26,"targetString":"set"},{"text":"const state: {\n    values: number[];\n}","docs":"","start":143,"length":5,"line":3,"character":35,"targetString":"state"},{"text":"(parameter) value: any","docs":"","start":153,"length":5,"line":3,"character":45,"targetString":"value"},{"text":"(alias) class SliderProgress\nimport SliderProgress","docs":"","start":165,"length":14,"line":5,"character":1,"targetString":"SliderProgress"},{"text":"(JSX attribute) activeColor?: string | undefined","docs":"","start":182,"length":11,"line":6,"character":2,"targetString":"activeColor"},{"text":"(JSX attribute) inactiveColor?: string | undefined","docs":"","start":206,"length":13,"line":7,"character":2,"targetString":"inactiveColor"},{"text":"(JSX attribute) value?: number | number[] | undefined","docs":"","start":232,"length":5,"line":8,"character":2,"targetString":"value"},{"text":"const state: {\n    values: number[];\n}","docs":"","start":239,"length":5,"line":8,"character":9,"targetString":"state"},{"text":"(property) values: number[]","docs":"","start":245,"length":6,"line":8,"character":15,"targetString":"values"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":255,"length":5,"line":9,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":264,"length":5,"line":9,"character":11,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":276,"length":6,"line":9,"character":23,"targetString":"height"},{"text":"(JSX attribute) onValueChange?: ((...args: any[]) => any) | undefined","docs":"","start":292,"length":13,"line":10,"character":2,"targetString":"onValueChange"},{"text":"var minValue: any","docs":"","start":310,"length":8,"line":10,"character":20,"targetString":"minValue"},{"text":"var maxValue: any","docs":"","start":320,"length":8,"line":10,"character":30,"targetString":"maxValue"},{"text":"const setState: (value: any) => void","docs":"","start":341,"length":8,"line":11,"character":4,"targetString":"setState"},{"text":"(property) values: any[]","docs":"","start":358,"length":6,"line":12,"character":6,"targetString":"values"},{"text":"var minValue: any","docs":"","start":367,"length":8,"line":12,"character":15,"targetString":"minValue"},{"text":"var maxValue: any","docs":"","start":377,"length":8,"line":12,"character":25,"targetString":"maxValue"}]],"/basic/tytext":[[{"text":"(alias) class TYText\nimport TYText","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TYText"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":42,"length":6,"line":2,"character":1,"targetString":"TYText"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":49,"length":5,"line":2,"character":8,"targetString":"color"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":61,"length":4,"line":2,"character":20,"targetString":"text"},{"text":"(JSX attribute) weight?: string | number | undefined","docs":"","start":81,"length":6,"line":2,"character":40,"targetString":"weight"},{"text":"(JSX attribute) size?: number | \"large\" | \"normal\" | \"small\" | undefined","docs":"","start":95,"length":4,"line":2,"character":54,"targetString":"size"}],[{"text":"(alias) class TYText\nimport TYText","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TYText"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":51,"length":6,"line":3,"character":3,"targetString":"TYText"},{"text":"(JSX attribute) size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":58,"length":4,"line":3,"character":10,"targetString":"size"},{"text":"(JSX attribute) type?: \"paragraph\" | \"heading\" | \"title\" | undefined","docs":"","start":71,"length":4,"line":3,"character":23,"targetString":"type"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":88,"length":4,"line":3,"character":40,"targetString":"text"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":106,"length":6,"line":4,"character":3,"targetString":"TYText"},{"text":"(JSX attribute) size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":117,"length":4,"line":5,"character":4,"targetString":"size"},{"text":"(JSX attribute) type?: \"paragraph\" | \"heading\" | \"title\" | undefined","docs":"","start":134,"length":4,"line":6,"character":4,"targetString":"type"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":151,"length":4,"line":7,"character":4,"targetString":"text"},{"text":"(JSX attribute) style?: StyleProp<TextStyle>","docs":"","start":167,"length":5,"line":8,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginHorizontal?: string | number | undefined","docs":"","start":176,"length":16,"line":8,"character":13,"targetString":"marginHorizontal"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":208,"length":6,"line":10,"character":3,"targetString":"TYText"},{"text":"(JSX attribute) size?: number | \"small\" | \"large\" | \"normal\" | undefined","docs":"","start":215,"length":4,"line":10,"character":10,"targetString":"size"},{"text":"(JSX attribute) type?: \"paragraph\" | \"heading\" | \"title\" | undefined","docs":"","start":228,"length":4,"line":10,"character":23,"targetString":"type"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":243,"length":4,"line":10,"character":38,"targetString":"text"}],[{"text":"(alias) class TYText\nimport TYText","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TYText"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":51,"length":6,"line":3,"character":3,"targetString":"TYText"},{"text":"(JSX attribute) size?: number | \"normal\" | \"large\" | \"small\" | undefined","docs":"","start":58,"length":4,"line":3,"character":10,"targetString":"size"},{"text":"(JSX attribute) type?: \"paragraph\" | \"heading\" | \"title\" | undefined","docs":"","start":72,"length":4,"line":3,"character":24,"targetString":"type"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":89,"length":4,"line":3,"character":41,"targetString":"text"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":107,"length":6,"line":4,"character":3,"targetString":"TYText"},{"text":"(JSX attribute) size?: number | \"normal\" | \"large\" | \"small\" | undefined","docs":"","start":118,"length":4,"line":5,"character":4,"targetString":"size"},{"text":"(JSX attribute) type?: \"paragraph\" | \"heading\" | \"title\" | undefined","docs":"","start":136,"length":4,"line":6,"character":4,"targetString":"type"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":153,"length":4,"line":7,"character":4,"targetString":"text"},{"text":"(JSX attribute) style?: StyleProp<TextStyle>","docs":"","start":169,"length":5,"line":8,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginHorizontal?: string | number | undefined","docs":"","start":178,"length":16,"line":8,"character":13,"targetString":"marginHorizontal"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":210,"length":6,"line":10,"character":3,"targetString":"TYText"},{"text":"(JSX attribute) size?: number | \"normal\" | \"large\" | \"small\" | undefined","docs":"","start":217,"length":4,"line":10,"character":10,"targetString":"size"},{"text":"(JSX attribute) type?: \"paragraph\" | \"heading\" | \"title\" | undefined","docs":"","start":231,"length":4,"line":10,"character":24,"targetString":"type"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":246,"length":4,"line":10,"character":39,"targetString":"text"}],[{"text":"(alias) class TYText\nimport TYText","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"TYText"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":51,"length":6,"line":3,"character":3,"targetString":"TYText"},{"text":"(JSX attribute) size?: number | \"large\" | \"normal\" | \"small\" | undefined","docs":"","start":58,"length":4,"line":3,"character":10,"targetString":"size"},{"text":"(JSX attribute) type?: \"paragraph\" | \"heading\" | \"title\" | undefined","docs":"","start":71,"length":4,"line":3,"character":23,"targetString":"type"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":88,"length":4,"line":3,"character":40,"targetString":"text"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":106,"length":6,"line":4,"character":3,"targetString":"TYText"},{"text":"(JSX attribute) size?: number | \"large\" | \"normal\" | \"small\" | undefined","docs":"","start":117,"length":4,"line":5,"character":4,"targetString":"size"},{"text":"(JSX attribute) type?: \"paragraph\" | \"heading\" | \"title\" | undefined","docs":"","start":134,"length":4,"line":6,"character":4,"targetString":"type"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":151,"length":4,"line":7,"character":4,"targetString":"text"},{"text":"(JSX attribute) style?: StyleProp<TextStyle>","docs":"","start":167,"length":5,"line":8,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginHorizontal?: string | number | undefined","docs":"","start":176,"length":16,"line":8,"character":13,"targetString":"marginHorizontal"},{"text":"(alias) class TYText\nimport TYText","docs":"","start":208,"length":6,"line":10,"character":3,"targetString":"TYText"},{"text":"(JSX attribute) size?: number | \"large\" | \"normal\" | \"small\" | undefined","docs":"","start":215,"length":4,"line":10,"character":10,"targetString":"size"},{"text":"(JSX attribute) type?: \"paragraph\" | \"heading\" | \"title\" | undefined","docs":"","start":228,"length":4,"line":10,"character":23,"targetString":"type"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":243,"length":4,"line":10,"character":38,"targetString":"text"}]],"/basic/unit-text":[[{"text":"(alias) class UnitText\nimport UnitText","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"UnitText"},{"text":"import TuyaRNSvgs","docs":"","start":49,"length":10,"line":1,"character":7,"targetString":"TuyaRNSvgs"},{"text":"(alias) class UnitText\nimport UnitText","docs":"","start":133,"length":8,"line":4,"character":3,"targetString":"UnitText"},{"text":"(JSX attribute) unit?: string | undefined","docs":"","start":142,"length":4,"line":4,"character":12,"targetString":"unit"},{"text":"(JSX attribute) unitColor?: string | undefined","docs":"","start":151,"length":9,"line":4,"character":21,"targetString":"unitColor"},{"text":"(alias) class UnitText\nimport UnitText","docs":"","start":175,"length":8,"line":5,"character":3,"targetString":"UnitText"},{"text":"(JSX attribute) unit?: string | undefined","docs":"","start":184,"length":4,"line":5,"character":12,"targetString":"unit"},{"text":"import TuyaRNSvgs","docs":"","start":190,"length":10,"line":5,"character":18,"targetString":"TuyaRNSvgs"},{"text":"(JSX attribute) unitColor?: string | undefined","docs":"","start":210,"length":9,"line":5,"character":38,"targetString":"unitColor"}],[{"text":"(alias) class UnitText\nimport UnitText","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"UnitText"},{"text":"import TuyaRNSvgs","docs":"","start":49,"length":10,"line":1,"character":7,"targetString":"TuyaRNSvgs"},{"text":"(alias) class UnitText\nimport UnitText","docs":"","start":133,"length":8,"line":4,"character":3,"targetString":"UnitText"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":142,"length":4,"line":4,"character":12,"targetString":"size"},{"text":"(JSX attribute) unit?: string | undefined","docs":"","start":152,"length":4,"line":4,"character":22,"targetString":"unit"},{"text":"(JSX attribute) unitColor?: string | undefined","docs":"","start":161,"length":9,"line":4,"character":31,"targetString":"unitColor"},{"text":"(alias) class UnitText\nimport UnitText","docs":"","start":185,"length":8,"line":5,"character":3,"targetString":"UnitText"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":198,"length":4,"line":6,"character":4,"targetString":"size"},{"text":"(JSX attribute) unit?: string | undefined","docs":"","start":212,"length":4,"line":7,"character":4,"targetString":"unit"},{"text":"(JSX attribute) unitColor?: string | undefined","docs":"","start":234,"length":9,"line":8,"character":4,"targetString":"unitColor"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":255,"length":5,"line":9,"character":4,"targetString":"style"},{"text":"(property) FlexStyle.marginHorizontal?: string | number | undefined","docs":"","start":264,"length":16,"line":9,"character":13,"targetString":"marginHorizontal"},{"text":"(alias) class UnitText\nimport UnitText","docs":"","start":296,"length":8,"line":11,"character":3,"targetString":"UnitText"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":305,"length":4,"line":11,"character":12,"targetString":"size"},{"text":"(JSX attribute) unit?: string | undefined","docs":"","start":315,"length":4,"line":11,"character":22,"targetString":"unit"},{"text":"import TuyaRNSvgs","docs":"","start":321,"length":10,"line":11,"character":28,"targetString":"TuyaRNSvgs"},{"text":"(JSX attribute) unitColor?: string | undefined","docs":"","start":341,"length":9,"line":11,"character":48,"targetString":"unitColor"}],[{"text":"(alias) class UnitText\nimport UnitText","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"UnitText"},{"text":"import TuyaRNSvgs","docs":"","start":49,"length":10,"line":1,"character":7,"targetString":"TuyaRNSvgs"},{"text":"(alias) class UnitText\nimport UnitText","docs":"","start":133,"length":8,"line":4,"character":3,"targetString":"UnitText"},{"text":"(JSX attribute) value: string | number","docs":"","start":146,"length":5,"line":5,"character":4,"targetString":"value"},{"text":"(JSX attribute) size?: number | undefined","docs":"","start":162,"length":4,"line":6,"character":4,"targetString":"size"},{"text":"(JSX attribute) unit?: string | undefined","docs":"","start":176,"length":4,"line":7,"character":4,"targetString":"unit"},{"text":"import TuyaRNSvgs","docs":"","start":182,"length":10,"line":7,"character":10,"targetString":"TuyaRNSvgs"},{"text":"(JSX attribute) valueColor?: string | undefined","docs":"","start":209,"length":10,"line":8,"character":4,"targetString":"valueColor"},{"text":"(JSX attribute) valueColors?: string[] | undefined","docs":"","start":230,"length":11,"line":9,"character":4,"targetString":"valueColors"},{"text":"var undefined","docs":"","start":266,"length":9,"line":9,"character":40,"targetString":"undefined"},{"text":"(JSX attribute) unitColor?: string | undefined","docs":"","start":290,"length":9,"line":10,"character":4,"targetString":"unitColor"}]],"/presentation/carousel":[[{"text":"(alias) class Carousel\nimport Carousel","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Carousel"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":19,"length":5,"line":0,"character":19,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":58,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":68,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":75,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":81,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"const Content: ({ backgroundColor, text, textBgColor }: {\n    backgroundColor: any;\n    text: any;\n    textBgColor: any;\n}) => JSX.Element","docs":"","start":100,"length":7,"line":4,"character":6,"targetString":"Content"},{"text":"var backgroundColor: any","docs":"","start":113,"length":15,"line":4,"character":19,"targetString":"backgroundColor"},{"text":"var text: any","docs":"","start":130,"length":4,"line":4,"character":36,"targetString":"text"},{"text":"var textBgColor: any","docs":"","start":136,"length":11,"line":4,"character":42,"targetString":"textBgColor"},{"text":"(JSX attribute) style: {\n    height: number;\n    backgroundColor: any;\n    display: string;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":183,"length":5,"line":7,"character":6,"targetString":"style"},{"text":"(property) height: number","docs":"","start":200,"length":6,"line":8,"character":8,"targetString":"height"},{"text":"(property) backgroundColor: any","docs":"","start":221,"length":15,"line":9,"character":8,"targetString":"backgroundColor"},{"text":"(property) display: string","docs":"","start":246,"length":7,"line":10,"character":8,"targetString":"display"},{"text":"(property) alignItems: string","docs":"","start":271,"length":10,"line":11,"character":8,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":301,"length":14,"line":12,"character":8,"targetString":"justifyContent"},{"text":"(JSX attribute) style: {\n    width: number;\n    height: number;\n    backgroundColor: any;\n    borderRadius: number;\n    display: string;\n    alignItems: string;\n    justifyContent: string;\n}","docs":"","start":362,"length":5,"line":16,"character":8,"targetString":"style"},{"text":"(property) width: number","docs":"","start":381,"length":5,"line":17,"character":10,"targetString":"width"},{"text":"const cx: (d: number) => number","docs":"","start":388,"length":2,"line":17,"character":17,"targetString":"cx"},{"text":"(property) height: number","docs":"","start":406,"length":6,"line":18,"character":10,"targetString":"height"},{"text":"const cx: (d: number) => number","docs":"","start":414,"length":2,"line":18,"character":18,"targetString":"cx"},{"text":"(property) backgroundColor: any","docs":"","start":432,"length":15,"line":19,"character":10,"targetString":"backgroundColor"},{"text":"var textBgColor: any","docs":"","start":449,"length":11,"line":19,"character":27,"targetString":"textBgColor"},{"text":"(property) borderRadius: number","docs":"","start":472,"length":12,"line":20,"character":10,"targetString":"borderRadius"},{"text":"const cx: (d: number) => number","docs":"","start":486,"length":2,"line":20,"character":24,"targetString":"cx"},{"text":"(property) display: string","docs":"","start":504,"length":7,"line":21,"character":10,"targetString":"display"},{"text":"(property) alignItems: string","docs":"","start":531,"length":10,"line":22,"character":10,"targetString":"alignItems"},{"text":"(property) justifyContent: string","docs":"","start":563,"length":14,"line":23,"character":10,"targetString":"justifyContent"},{"text":"(JSX attribute) style: {\n    color: string;\n}","docs":"","start":624,"length":5,"line":26,"character":16,"targetString":"style"},{"text":"(property) color: string","docs":"","start":633,"length":5,"line":26,"character":25,"targetString":"color"},{"text":"var text: any","docs":"","start":651,"length":4,"line":26,"character":43,"targetString":"text"},{"text":"(alias) class Carousel\nimport Carousel","docs":"","start":702,"length":8,"line":32,"character":1,"targetString":"Carousel"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":713,"length":5,"line":33,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":722,"length":6,"line":33,"character":11,"targetString":"height"},{"text":"(JSX attribute) selectedIndex?: number | undefined","docs":"","start":739,"length":13,"line":34,"character":2,"targetString":"selectedIndex"},{"text":"(JSX attribute) autoplay?: boolean | undefined","docs":"","start":759,"length":8,"line":35,"character":2,"targetString":"autoplay"},{"text":"(JSX attribute) loop?: boolean | undefined","docs":"","start":777,"length":4,"line":36,"character":2,"targetString":"loop"},{"text":"(JSX attribute) carouselChange?: ((index: number) => void) | undefined","docs":"","start":791,"length":14,"line":37,"character":2,"targetString":"carouselChange"},{"text":"(parameter) index: number","docs":"","start":807,"length":5,"line":37,"character":18,"targetString":"index"},{"text":"var console: Console","docs":"","start":816,"length":7,"line":37,"character":27,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":824,"length":3,"line":37,"character":35,"targetString":"log"},{"text":"(parameter) index: number","docs":"","start":828,"length":5,"line":37,"character":39,"targetString":"index"},{"text":"(JSX attribute) dotStyle?: StyleProp<ViewStyle>","docs":"","start":838,"length":8,"line":38,"character":2,"targetString":"dotStyle"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":854,"length":15,"line":39,"character":4,"targetString":"backgroundColor"},{"text":"const Content: ({ backgroundColor, text, textBgColor }: {\n    backgroundColor: any;\n    text: any;\n    textBgColor: any;\n}) => JSX.Element","docs":"","start":892,"length":7,"line":42,"character":3,"targetString":"Content"},{"text":"(JSX attribute) text: any","docs":"","start":900,"length":4,"line":42,"character":11,"targetString":"text"},{"text":"(JSX attribute) backgroundColor: any","docs":"","start":909,"length":15,"line":42,"character":20,"targetString":"backgroundColor"},{"text":"(JSX attribute) textBgColor: any","docs":"","start":935,"length":11,"line":42,"character":46,"targetString":"textBgColor"},{"text":"const Content: ({ backgroundColor, text, textBgColor }: {\n    backgroundColor: any;\n    text: any;\n    textBgColor: any;\n}) => JSX.Element","docs":"","start":963,"length":7,"line":43,"character":3,"targetString":"Content"},{"text":"(JSX attribute) text: any","docs":"","start":971,"length":4,"line":43,"character":11,"targetString":"text"},{"text":"(JSX attribute) backgroundColor: any","docs":"","start":980,"length":15,"line":43,"character":20,"targetString":"backgroundColor"},{"text":"(JSX attribute) textBgColor: any","docs":"","start":1006,"length":11,"line":43,"character":46,"targetString":"textBgColor"},{"text":"const Content: ({ backgroundColor, text, textBgColor }: {\n    backgroundColor: any;\n    text: any;\n    textBgColor: any;\n}) => JSX.Element","docs":"","start":1034,"length":7,"line":44,"character":3,"targetString":"Content"},{"text":"(JSX attribute) text: any","docs":"","start":1042,"length":4,"line":44,"character":11,"targetString":"text"},{"text":"(JSX attribute) backgroundColor: any","docs":"","start":1051,"length":15,"line":44,"character":20,"targetString":"backgroundColor"},{"text":"(JSX attribute) textBgColor: any","docs":"","start":1077,"length":11,"line":44,"character":46,"targetString":"textBgColor"},{"text":"(alias) class Carousel\nimport Carousel","docs":"","start":1104,"length":8,"line":45,"character":2,"targetString":"Carousel"}]],"/presentation/circle-view":[[{"text":"(alias) class CircleView\nimport CircleView","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"CircleView"},{"text":"(alias) class CircleView\nimport CircleView","docs":"","start":46,"length":10,"line":2,"character":1,"targetString":"CircleView"},{"text":"(JSX attribute) radius: number","docs":"","start":57,"length":6,"line":2,"character":12,"targetString":"radius"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":69,"length":5,"line":2,"character":24,"targetString":"color"}],[{"text":"(alias) class CircleView\nimport CircleView","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"CircleView"},{"text":"(alias) class CircleView\nimport CircleView","docs":"","start":46,"length":10,"line":2,"character":1,"targetString":"CircleView"},{"text":"(JSX attribute) radius: number","docs":"","start":57,"length":6,"line":2,"character":12,"targetString":"radius"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":69,"length":5,"line":2,"character":24,"targetString":"color"},{"text":"(JSX attribute) borderWidth?: number | undefined","docs":"","start":85,"length":11,"line":2,"character":40,"targetString":"borderWidth"},{"text":"(JSX attribute) borderColor?: string | undefined","docs":"","start":101,"length":11,"line":2,"character":56,"targetString":"borderColor"}],[{"text":"(alias) class CircleView\nimport CircleView","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"CircleView"},{"text":"(alias) class CircleView\nimport CircleView","docs":"","start":46,"length":10,"line":2,"character":1,"targetString":"CircleView"},{"text":"(JSX attribute) radius: number","docs":"","start":59,"length":6,"line":3,"character":2,"targetString":"radius"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":73,"length":5,"line":4,"character":2,"targetString":"color"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":91,"length":5,"line":5,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.alignItems?: FlexAlignType | undefined","docs":"","start":100,"length":10,"line":5,"character":11,"targetString":"alignItems"},{"text":"(property) FlexStyle.justifyContent?: \"flex-start\" | \"flex-end\" | \"center\" | \"space-between\" | \"space-around\" | \"space-evenly\" | undefined","docs":"","start":122,"length":14,"line":5,"character":33,"targetString":"justifyContent"},{"text":"(JSX attribute) name: string","docs":"","start":164,"length":4,"line":7,"character":12,"targetString":"name"},{"text":"(JSX attribute) size: number","docs":"","start":176,"length":4,"line":7,"character":24,"targetString":"size"},{"text":"(alias) class CircleView\nimport CircleView","docs":"","start":191,"length":10,"line":8,"character":2,"targetString":"CircleView"}]],"/presentation/collapsible":[[{"text":"(alias) class Button\nimport Button","docs":"","start":9,"length":6,"line":0,"character":9,"targetString":"Button"},{"text":"(alias) class Collapsible\nimport Collapsible","docs":"","start":17,"length":11,"line":0,"character":17,"targetString":"Collapsible"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":30,"length":5,"line":0,"character":30,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":70,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":80,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":87,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":93,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"const collapsed: boolean","docs":"","start":113,"length":9,"line":4,"character":7,"targetString":"collapsed"},{"text":"const setCollapsed: React.Dispatch<React.SetStateAction<boolean>>","docs":"","start":124,"length":12,"line":4,"character":18,"targetString":"setCollapsed"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":140,"length":5,"line":4,"character":34,"targetString":"React"},{"text":"function React.useState<boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch<React.SetStateAction<boolean>>] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":146,"length":8,"line":4,"character":40,"targetString":"useState"},{"text":"(alias) class Button\nimport Button","docs":"","start":165,"length":6,"line":6,"character":1,"targetString":"Button"},{"text":"(JSX attribute) stretch?: boolean | undefined","docs":"","start":174,"length":7,"line":7,"character":2,"targetString":"stretch"},{"text":"(JSX attribute) onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"Called when the touch is released,\nbut not if cancelled (e.g. by a scroll that steals the responder lock).","start":191,"length":7,"line":8,"character":2,"targetString":"onPress"},{"text":"const setCollapsed: (value: React.SetStateAction<boolean>) => void","docs":"","start":206,"length":12,"line":8,"character":17,"targetString":"setCollapsed"},{"text":"const collapsed: boolean","docs":"","start":220,"length":9,"line":8,"character":31,"targetString":"collapsed"},{"text":"(JSX attribute) text?: string | undefined","docs":"","start":234,"length":4,"line":9,"character":2,"targetString":"text"},{"text":"(JSX attribute) textStyle?: StyleProp<TextStyle>","docs":"","start":256,"length":9,"line":10,"character":2,"targetString":"textStyle"},{"text":"(property) TextStyle.fontSize?: number | undefined","docs":"","start":273,"length":8,"line":11,"character":4,"targetString":"fontSize"},{"text":"const cx: (d: number) => number","docs":"","start":283,"length":2,"line":11,"character":14,"targetString":"cx"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"//FIXME: not in doc but available in examples","start":298,"length":5,"line":13,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":311,"length":6,"line":14,"character":4,"targetString":"height"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":327,"length":15,"line":15,"character":4,"targetString":"backgroundColor"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":356,"length":5,"line":16,"character":4,"targetString":"width"},{"text":"(property) ViewStyle.borderColor?: ColorValue | undefined","docs":"","start":375,"length":11,"line":17,"character":4,"targetString":"borderColor"},{"text":"(property) ViewStyle.borderTopWidth?: number | undefined","docs":"","start":403,"length":14,"line":18,"character":4,"targetString":"borderTopWidth"},{"text":"(alias) class Collapsible\nimport Collapsible","docs":"","start":431,"length":11,"line":21,"character":1,"targetString":"Collapsible"},{"text":"(JSX attribute) collapsed?: boolean | undefined","docs":"","start":445,"length":9,"line":22,"character":2,"targetString":"collapsed"},{"text":"const collapsed: boolean","docs":"","start":456,"length":9,"line":22,"character":13,"targetString":"collapsed"},{"text":"(JSX attribute) align?: \"top\" | \"center\" | \"bottom\" | undefined","docs":"","start":469,"length":5,"line":23,"character":2,"targetString":"align"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":483,"length":5,"line":24,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":496,"length":6,"line":25,"character":4,"targetString":"height"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":513,"length":15,"line":26,"character":4,"targetString":"backgroundColor"}]],"/presentation/divider":[[{"text":"(alias) class Divider\nimport Divider","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"Divider"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":18,"length":5,"line":0,"character":18,"targetString":"Utils"},{"text":"(method) convertX(d: number): number","docs":"","start":58,"length":8,"line":2,"character":8,"targetString":"convertX"},{"text":"const cx: (d: number) => number","docs":"","start":68,"length":2,"line":2,"character":18,"targetString":"cx"},{"text":"(alias) let Utils: {\n    CoreUtils: {\n        get(object: object, pathString: string, defaultValue?: any): any;\n        toFixed(str: string | number, count: number): string;\n        toFilled(str: string | number, count: number): string;\n        partition(str: string, chunk: number): string[];\n        isObject(obj: any): boolean;\n        isArray(obj: any): boolean;\n        ... 9 more ...;\n        compareVersion(v1: string, v2: string): number;\n    };\n    ... 7 more ...;\n    TimeUtils: {\n        ...;\n    };\n}\nimport Utils","docs":"","start":75,"length":5,"line":2,"character":25,"targetString":"Utils"},{"text":"(property) RatioUtils: {\n    isIphoneX: boolean;\n    width: number;\n    height: number;\n    isIos: boolean;\n    isWeb: boolean;\n    statusBarHeight: number;\n    convert(d: number): number;\n    convertX(d: number): number;\n    convertY(d: number): number;\n    ... 8 more ...;\n    isSmallH: boolean;\n}","docs":"","start":81,"length":10,"line":2,"character":31,"targetString":"RatioUtils"},{"text":"(JSX attribute) style: {\n    backgroundColor: string;\n    height: number;\n    display: string;\n    justifyContent: string;\n}","docs":"","start":102,"length":5,"line":5,"character":2,"targetString":"style"},{"text":"(property) backgroundColor: string","docs":"","start":115,"length":15,"line":6,"character":4,"targetString":"backgroundColor"},{"text":"(property) height: number","docs":"","start":145,"length":6,"line":7,"character":4,"targetString":"height"},{"text":"const cx: (d: number) => number","docs":"","start":153,"length":2,"line":7,"character":12,"targetString":"cx"},{"text":"(property) display: string","docs":"","start":165,"length":7,"line":8,"character":4,"targetString":"display"},{"text":"(property) justifyContent: string","docs":"","start":186,"length":14,"line":9,"character":4,"targetString":"justifyContent"},{"text":"(alias) class Divider\nimport Divider","docs":"","start":222,"length":7,"line":12,"character":3,"targetString":"Divider"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":230,"length":5,"line":12,"character":11,"targetString":"style"},{"text":"(property) FlexStyle.alignSelf?: \"auto\" | FlexAlignType | undefined","docs":"","start":239,"length":9,"line":12,"character":20,"targetString":"alignSelf"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":262,"length":5,"line":12,"character":43,"targetString":"color"},{"text":"(JSX attribute) width?: number | undefined","docs":"","start":278,"length":5,"line":12,"character":59,"targetString":"width"}],[{"text":"(alias) class Divider\nimport Divider","docs":"","start":9,"length":7,"line":0,"character":9,"targetString":"Divider"},{"text":"(alias) class Divider\nimport Divider","docs":"","start":43,"length":7,"line":2,"character":1,"targetString":"Divider"},{"text":"(JSX attribute) color?: string | undefined","docs":"","start":53,"length":5,"line":3,"character":2,"targetString":"color"},{"text":"(JSX attribute) width?: number | undefined","docs":"","start":68,"length":5,"line":4,"character":2,"targetString":"width"},{"text":"(JSX attribute) height?: number | undefined","docs":"","start":82,"length":6,"line":5,"character":2,"targetString":"height"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":96,"length":5,"line":6,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.marginLeft?: string | number | undefined","docs":"","start":105,"length":10,"line":6,"character":11,"targetString":"marginLeft"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":121,"length":9,"line":6,"character":27,"targetString":"marginTop"}]],"/presentation/linear-gradient":[[{"text":"(alias) class LinearGradient\nimport LinearGradient","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"LinearGradient"},{"text":"(alias) class LinearGradient\nimport LinearGradient","docs":"","start":50,"length":14,"line":2,"character":1,"targetString":"LinearGradient"},{"text":"(JSX attribute) gradientId?: string | undefined","docs":"","start":67,"length":10,"line":3,"character":2,"targetString":"gradientId"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":92,"length":5,"line":4,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":105,"length":5,"line":5,"character":4,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":121,"length":6,"line":6,"character":4,"targetString":"height"},{"text":"(property) FlexStyle.marginLeft?: string | number | undefined","docs":"","start":138,"length":10,"line":7,"character":4,"targetString":"marginLeft"},{"text":"(JSX attribute) x1?: string | undefined","docs":"","start":161,"length":2,"line":9,"character":2,"targetString":"x1"},{"text":"(JSX attribute) y1?: string | undefined","docs":"","start":171,"length":2,"line":10,"character":2,"targetString":"y1"},{"text":"(JSX attribute) x2?: string | undefined","docs":"","start":181,"length":2,"line":11,"character":2,"targetString":"x2"},{"text":"(JSX attribute) y2?: string | undefined","docs":"","start":191,"length":2,"line":12,"character":2,"targetString":"y2"},{"text":"(JSX attribute) stops?: Record<string, string> | undefined","docs":"","start":203,"length":5,"line":13,"character":2,"targetString":"stops"},{"text":"(JSX attribute) width: number","docs":"","start":271,"length":5,"line":18,"character":8,"targetString":"width"},{"text":"(JSX attribute) height: number","docs":"","start":283,"length":6,"line":18,"character":20,"targetString":"height"},{"text":"(alias) class LinearGradient\nimport LinearGradient","docs":"","start":301,"length":14,"line":19,"character":2,"targetString":"LinearGradient"}],[{"text":"(alias) class LinearGradient\nimport LinearGradient","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"LinearGradient"},{"text":"(alias) class LinearGradient\nimport LinearGradient","docs":"","start":50,"length":14,"line":2,"character":1,"targetString":"LinearGradient"},{"text":"(JSX attribute) gradientId?: string | undefined","docs":"","start":67,"length":10,"line":3,"character":2,"targetString":"gradientId"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":92,"length":5,"line":4,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":101,"length":5,"line":4,"character":11,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":113,"length":6,"line":4,"character":23,"targetString":"height"},{"text":"(property) FlexStyle.marginLeft?: string | number | undefined","docs":"","start":126,"length":10,"line":4,"character":36,"targetString":"marginLeft"},{"text":"(JSX attribute) x1?: string | undefined","docs":"","start":146,"length":2,"line":5,"character":2,"targetString":"x1"},{"text":"(JSX attribute) y1?: string | undefined","docs":"","start":158,"length":2,"line":6,"character":2,"targetString":"y1"},{"text":"(JSX attribute) x2?: string | undefined","docs":"","start":168,"length":2,"line":7,"character":2,"targetString":"x2"},{"text":"(JSX attribute) y2?: string | undefined","docs":"","start":178,"length":2,"line":8,"character":2,"targetString":"y2"},{"text":"(JSX attribute) stops?: Record<string, string> | undefined","docs":"","start":190,"length":5,"line":9,"character":2,"targetString":"stops"},{"text":"(JSX attribute) width: number","docs":"","start":280,"length":5,"line":15,"character":8,"targetString":"width"},{"text":"(JSX attribute) height: number","docs":"","start":292,"length":6,"line":15,"character":20,"targetString":"height"},{"text":"(alias) class LinearGradient\nimport LinearGradient","docs":"","start":310,"length":14,"line":16,"character":2,"targetString":"LinearGradient"}],[{"text":"(alias) class LinearGradient\nimport LinearGradient","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"LinearGradient"},{"text":"import _","docs":"","start":56,"length":1,"line":2,"character":7,"targetString":"_"},{"text":"(alias) namespace React\nimport React","docs":"","start":80,"length":5,"line":3,"character":7,"targetString":"React"},{"text":"(alias) class View\nimport View","docs":"","start":109,"length":4,"line":4,"character":9,"targetString":"View"},{"text":"(alias) class NavigatorLayout<P = {}, S = {}>\nimport NavigatorLayout","docs":"","start":146,"length":15,"line":5,"character":9,"targetString":"NavigatorLayout"},{"text":"import composeLayout","docs":"","start":194,"length":13,"line":6,"character":7,"targetString":"composeLayout"},{"text":"import configureStore","docs":"","start":239,"length":14,"line":7,"character":7,"targetString":"configureStore"},{"text":"import routers","docs":"","start":294,"length":7,"line":8,"character":9,"targetString":"routers"},{"text":"const store: any","docs":"","start":335,"length":5,"line":10,"character":13,"targetString":"store"},{"text":"import configureStore","docs":"","start":343,"length":14,"line":10,"character":21,"targetString":"configureStore"},{"text":"class MainLayout","docs":"","start":368,"length":10,"line":12,"character":6,"targetString":"MainLayout"},{"text":"(alias) class NavigatorLayout<P = {}, S = {}>\nimport NavigatorLayout","docs":"","start":387,"length":15,"line":12,"character":25,"targetString":"NavigatorLayout"},{"text":"(method) MainLayout.hookRoute(route: any): any","docs":"","start":407,"length":9,"line":13,"character":2,"targetString":"hookRoute"},{"text":"(parameter) route: any","docs":"","start":417,"length":5,"line":13,"character":12,"targetString":"route"},{"text":"(parameter) route: any","docs":"","start":448,"length":5,"line":15,"character":9,"targetString":"route"},{"text":"(property) background: {\n    '3%': string;\n    '90%': string;\n}","docs":"","start":461,"length":10,"line":16,"character":6,"targetString":"background"},{"text":"(method) MainLayout.renderScene(route: any, navigator: any): JSX.Element","docs":"","start":544,"length":11,"line":23,"character":2,"targetString":"renderScene"},{"text":"(parameter) route: any","docs":"","start":556,"length":5,"line":23,"character":14,"targetString":"route"},{"text":"(parameter) navigator: any","docs":"","start":563,"length":9,"line":23,"character":21,"targetString":"navigator"},{"text":"let Scene: JSX.Element","docs":"","start":584,"length":5,"line":24,"character":8,"targetString":"Scene"},{"text":"(alias) class View\nimport View","docs":"","start":593,"length":4,"line":24,"character":17,"targetString":"View"},{"text":"let schema: {}","docs":"","start":609,"length":6,"line":25,"character":8,"targetString":"schema"},{"text":"let uiConfig: {}","docs":"","start":630,"length":8,"line":26,"character":8,"targetString":"uiConfig"},{"text":"const dispatch: any","docs":"","start":657,"length":8,"line":27,"character":12,"targetString":"dispatch"},{"text":"const devInfo: any","docs":"","start":667,"length":7,"line":27,"character":22,"targetString":"devInfo"},{"text":"const dpState: any","docs":"","start":676,"length":7,"line":27,"character":31,"targetString":"dpState"},{"text":"(property) React.Component<{}, { modalVisible: boolean; }, any>.props: Readonly<{}> & Readonly<{\n    children?: React.ReactNode;\n}>","docs":"","start":693,"length":5,"line":27,"character":48,"targetString":"props"},{"text":"import _","docs":"","start":710,"length":1,"line":29,"character":9,"targetString":"_"},{"text":"const devInfo: any","docs":"","start":720,"length":7,"line":29,"character":19,"targetString":"devInfo"},{"text":"let schema: {}","docs":"","start":738,"length":6,"line":30,"character":6,"targetString":"schema"},{"text":"const devInfo: any","docs":"","start":747,"length":7,"line":30,"character":15,"targetString":"devInfo"},{"text":"let uiConfig: {}","docs":"","start":775,"length":8,"line":31,"character":6,"targetString":"uiConfig"},{"text":"const devInfo: any","docs":"","start":786,"length":7,"line":31,"character":17,"targetString":"devInfo"},{"text":"const router: any","docs":"","start":827,"length":6,"line":34,"character":10,"targetString":"router"},{"text":"import routers","docs":"","start":836,"length":7,"line":34,"character":19,"targetString":"routers"},{"text":"(parameter) r: any","docs":"","start":849,"length":1,"line":34,"character":32,"targetString":"r"},{"text":"(parameter) r: any","docs":"","start":854,"length":1,"line":34,"character":37,"targetString":"r"},{"text":"(parameter) route: any","docs":"","start":863,"length":5,"line":34,"character":46,"targetString":"route"},{"text":"const router: any","docs":"","start":883,"length":6,"line":36,"character":8,"targetString":"router"},{"text":"const router: any","docs":"","start":893,"length":6,"line":36,"character":18,"targetString":"router"},{"text":"const Component: any","docs":"","start":921,"length":9,"line":37,"character":12,"targetString":"Component"},{"text":"const router: any","docs":"","start":933,"length":6,"line":37,"character":24,"targetString":"router"},{"text":"let Scene: JSX.Element","docs":"","start":953,"length":5,"line":38,"character":6,"targetString":"Scene"},{"text":"const Component: any","docs":"","start":972,"length":9,"line":39,"character":9,"targetString":"Component"},{"text":"(JSX attribute) dpData: {\n    state: any;\n    schema: {};\n    uiConfig: {};\n}","docs":"","start":992,"length":6,"line":40,"character":10,"targetString":"dpData"},{"text":"(property) state: any","docs":"","start":1002,"length":5,"line":40,"character":20,"targetString":"state"},{"text":"const dpState: any","docs":"","start":1009,"length":7,"line":40,"character":27,"targetString":"dpState"},{"text":"(property) schema: {}","docs":"","start":1018,"length":6,"line":40,"character":36,"targetString":"schema"},{"text":"(property) uiConfig: {}","docs":"","start":1026,"length":8,"line":40,"character":44,"targetString":"uiConfig"},{"text":"(JSX attribute) dispatch: any","docs":"","start":1048,"length":8,"line":41,"character":10,"targetString":"dispatch"},{"text":"const dispatch: any","docs":"","start":1058,"length":8,"line":41,"character":20,"targetString":"dispatch"},{"text":"(JSX attribute) navigator: any","docs":"","start":1078,"length":9,"line":42,"character":10,"targetString":"navigator"},{"text":"(parameter) navigator: any","docs":"","start":1089,"length":9,"line":42,"character":21,"targetString":"navigator"},{"text":"(parameter) route: any","docs":"","start":1114,"length":5,"line":43,"character":14,"targetString":"route"},{"text":"let Scene: JSX.Element","docs":"","start":1159,"length":5,"line":48,"character":11,"targetString":"Scene"},{"text":"import composeLayout","docs":"","start":1188,"length":13,"line":52,"character":15,"targetString":"composeLayout"},{"text":"const store: any","docs":"","start":1202,"length":5,"line":52,"character":29,"targetString":"store"},{"text":"class MainLayout","docs":"","start":1209,"length":10,"line":52,"character":36,"targetString":"MainLayout"}]],"/presentation/progress":[[{"text":"(alias) class Progress\nimport Progress","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Progress"},{"text":"(alias) class Progress\nimport Progress","docs":"","start":44,"length":8,"line":2,"character":1,"targetString":"Progress"},{"text":"(JSX attribute) foreColor?: string | StopsProps[] | {\n    [key: string]: string;\n} | undefined","docs":"","start":55,"length":9,"line":3,"character":2,"targetString":"foreColor"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":119,"length":5,"line":7,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":128,"length":5,"line":7,"character":11,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":140,"length":6,"line":7,"character":23,"targetString":"height"},{"text":"(JSX attribute) needMaxCircle?: boolean | undefined","docs":"","start":157,"length":13,"line":8,"character":2,"targetString":"needMaxCircle"},{"text":"(JSX attribute) startColor?: string | undefined","docs":"","start":180,"length":10,"line":9,"character":2,"targetString":"startColor"},{"text":"(JSX attribute) thumbRadius?: number | undefined","docs":"","start":203,"length":11,"line":10,"character":2,"targetString":"thumbRadius"},{"text":"(JSX attribute) value?: number | undefined","docs":"","start":221,"length":5,"line":11,"character":2,"targetString":"value"},{"text":"(JSX attribute) startDegree?: number | undefined","docs":"","start":234,"length":11,"line":12,"character":2,"targetString":"startDegree"},{"text":"(JSX attribute) andDegree?: number | undefined","docs":"","start":254,"length":9,"line":13,"character":2,"targetString":"andDegree"}],[{"text":"(alias) class Progress\nimport Progress","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Progress"},{"text":"(alias) class Progress\nimport Progress","docs":"","start":44,"length":8,"line":2,"character":1,"targetString":"Progress"},{"text":"(property) Progress.Space: React.ElementType<SpaceProps>","docs":"","start":53,"length":5,"line":2,"character":10,"targetString":"Space"},{"text":"(JSX attribute) SpaceProps.strokeWidth?: number | undefined","docs":"","start":59,"length":11,"line":2,"character":16,"targetString":"strokeWidth"},{"text":"(JSX attribute) SpaceProps.scaleNumber?: number | undefined","docs":"","start":75,"length":11,"line":2,"character":32,"targetString":"scaleNumber"},{"text":"(JSX attribute) ProgressProps.style?: StyleProp<ViewStyle>","docs":"","start":92,"length":5,"line":2,"character":49,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":101,"length":5,"line":2,"character":58,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":113,"length":6,"line":2,"character":70,"targetString":"height"}],[{"text":"(alias) class Progress\nimport Progress","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Progress"},{"text":"(alias) class Progress\nimport Progress","docs":"","start":44,"length":8,"line":2,"character":1,"targetString":"Progress"},{"text":"(property) Progress.Double: React.ElementType<DoubleProps>","docs":"","start":53,"length":6,"line":2,"character":10,"targetString":"Double"},{"text":"(JSX attribute) ProgressProps.foreColor?: string | StopsProps[] | {\n    [key: string]: string;\n} | undefined","docs":"","start":62,"length":9,"line":3,"character":2,"targetString":"foreColor"},{"text":"(JSX attribute) ProgressProps.startDegree?: number | undefined","docs":"","start":126,"length":11,"line":7,"character":2,"targetString":"startDegree"},{"text":"(JSX attribute) ProgressProps.style?: StyleProp<ViewStyle>","docs":"","start":146,"length":5,"line":8,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":155,"length":5,"line":8,"character":11,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":167,"length":6,"line":8,"character":23,"targetString":"height"}],[{"text":"(alias) class Progress\nimport Progress","docs":"","start":9,"length":8,"line":0,"character":9,"targetString":"Progress"},{"text":"(alias) class Progress\nimport Progress","docs":"","start":44,"length":8,"line":2,"character":1,"targetString":"Progress"},{"text":"(property) Progress.Compose: React.ElementType<ComposeProps>","docs":"","start":53,"length":7,"line":2,"character":10,"targetString":"Compose"},{"text":"(JSX attribute) ComposeProps.style?: StyleProp<ViewStyle>","docs":"","start":61,"length":5,"line":2,"character":18,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":70,"length":5,"line":2,"character":27,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":82,"length":6,"line":2,"character":39,"targetString":"height"}]],"/presentation/radial-gradient":[[{"text":"(alias) class RadialGradient\nimport RadialGradient","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"RadialGradient"},{"text":"(alias) class RadialGradient\nimport RadialGradient","docs":"","start":50,"length":14,"line":2,"character":1,"targetString":"RadialGradient"},{"text":"(JSX attribute) gradientId?: string | undefined","docs":"","start":67,"length":10,"line":3,"character":2,"targetString":"gradientId"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":92,"length":5,"line":4,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":101,"length":5,"line":4,"character":11,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":113,"length":6,"line":4,"character":23,"targetString":"height"},{"text":"(property) FlexStyle.marginLeft?: string | number | undefined","docs":"","start":126,"length":10,"line":4,"character":36,"targetString":"marginLeft"},{"text":"(JSX attribute) stops?: StopsProps[] | undefined","docs":"","start":146,"length":5,"line":5,"character":2,"targetString":"stops"},{"text":"(property) StopsProps.offset: string","docs":"","start":167,"length":6,"line":7,"character":6,"targetString":"offset"},{"text":"(property) StopsProps.stopColor: string","docs":"","start":187,"length":9,"line":8,"character":6,"targetString":"stopColor"},{"text":"(property) StopsProps.stopOpacity: string","docs":"","start":212,"length":11,"line":9,"character":6,"targetString":"stopOpacity"},{"text":"(property) StopsProps.offset: string","docs":"","start":249,"length":6,"line":12,"character":6,"targetString":"offset"},{"text":"(property) StopsProps.stopColor: string","docs":"","start":271,"length":9,"line":13,"character":6,"targetString":"stopColor"},{"text":"(property) StopsProps.stopOpacity: string","docs":"","start":296,"length":11,"line":14,"character":6,"targetString":"stopOpacity"},{"text":"(JSX attribute) rx?: string | undefined","docs":"","start":328,"length":2,"line":17,"character":2,"targetString":"rx"},{"text":"(JSX attribute) ry?: string | undefined","docs":"","start":339,"length":2,"line":18,"character":2,"targetString":"ry"},{"text":"(JSX attribute) fx?: string | undefined","docs":"","start":350,"length":2,"line":19,"character":2,"targetString":"fx"},{"text":"(JSX attribute) fy?: string | undefined","docs":"","start":361,"length":2,"line":20,"character":2,"targetString":"fy"},{"text":"(JSX attribute) cx?: string | undefined","docs":"","start":372,"length":2,"line":21,"character":2,"targetString":"cx"},{"text":"(JSX attribute) cy?: string | undefined","docs":"","start":383,"length":2,"line":22,"character":2,"targetString":"cy"}],[{"text":"(alias) class RadialGradient\nimport RadialGradient","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"RadialGradient"},{"text":"(alias) class RadialGradient\nimport RadialGradient","docs":"","start":50,"length":14,"line":2,"character":1,"targetString":"RadialGradient"},{"text":"(JSX attribute) gradientId?: string | undefined","docs":"","start":67,"length":10,"line":3,"character":2,"targetString":"gradientId"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":92,"length":5,"line":4,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":101,"length":5,"line":4,"character":11,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":113,"length":6,"line":4,"character":23,"targetString":"height"},{"text":"(property) FlexStyle.marginLeft?: string | number | undefined","docs":"","start":126,"length":10,"line":4,"character":36,"targetString":"marginLeft"},{"text":"(JSX attribute) stops?: StopsProps[] | undefined","docs":"","start":146,"length":5,"line":5,"character":2,"targetString":"stops"},{"text":"(property) StopsProps.offset: string","docs":"","start":167,"length":6,"line":7,"character":6,"targetString":"offset"},{"text":"(property) StopsProps.stopColor: string","docs":"","start":187,"length":9,"line":8,"character":6,"targetString":"stopColor"},{"text":"(property) StopsProps.stopOpacity: string","docs":"","start":211,"length":11,"line":9,"character":6,"targetString":"stopOpacity"},{"text":"(property) StopsProps.offset: string","docs":"","start":248,"length":6,"line":12,"character":6,"targetString":"offset"},{"text":"(property) StopsProps.stopColor: string","docs":"","start":269,"length":9,"line":13,"character":6,"targetString":"stopColor"},{"text":"(property) StopsProps.stopOpacity: string","docs":"","start":296,"length":11,"line":14,"character":6,"targetString":"stopOpacity"},{"text":"(property) StopsProps.offset: string","docs":"","start":333,"length":6,"line":17,"character":6,"targetString":"offset"},{"text":"(property) StopsProps.stopColor: string","docs":"","start":355,"length":9,"line":18,"character":6,"targetString":"stopColor"},{"text":"(property) StopsProps.stopOpacity: string","docs":"","start":380,"length":11,"line":19,"character":6,"targetString":"stopOpacity"},{"text":"(JSX attribute) rx?: string | undefined","docs":"","start":412,"length":2,"line":22,"character":2,"targetString":"rx"},{"text":"(JSX attribute) ry?: string | undefined","docs":"","start":423,"length":2,"line":23,"character":2,"targetString":"ry"},{"text":"(JSX attribute) fx?: string | undefined","docs":"","start":434,"length":2,"line":24,"character":2,"targetString":"fx"},{"text":"(JSX attribute) fy?: string | undefined","docs":"","start":446,"length":2,"line":25,"character":2,"targetString":"fy"},{"text":"(JSX attribute) cx?: string | undefined","docs":"","start":457,"length":2,"line":26,"character":2,"targetString":"cx"},{"text":"(JSX attribute) cy?: string | undefined","docs":"","start":468,"length":2,"line":27,"character":2,"targetString":"cy"}],[{"text":"(alias) class RadialGradient\nimport RadialGradient","docs":"","start":9,"length":14,"line":0,"character":9,"targetString":"RadialGradient"},{"text":"import _","docs":"","start":56,"length":1,"line":2,"character":7,"targetString":"_"},{"text":"(alias) namespace React\nimport React","docs":"","start":80,"length":5,"line":3,"character":7,"targetString":"React"},{"text":"(alias) class View\nimport View","docs":"","start":109,"length":4,"line":4,"character":9,"targetString":"View"},{"text":"(alias) class NavigatorLayout<P = {}, S = {}>\nimport NavigatorLayout","docs":"","start":146,"length":15,"line":5,"character":9,"targetString":"NavigatorLayout"},{"text":"import composeLayout","docs":"","start":194,"length":13,"line":6,"character":7,"targetString":"composeLayout"},{"text":"import configureStore","docs":"","start":239,"length":14,"line":7,"character":7,"targetString":"configureStore"},{"text":"import routers","docs":"","start":294,"length":7,"line":8,"character":9,"targetString":"routers"},{"text":"const store: any","docs":"","start":335,"length":5,"line":10,"character":13,"targetString":"store"},{"text":"import configureStore","docs":"","start":343,"length":14,"line":10,"character":21,"targetString":"configureStore"},{"text":"class MainLayout","docs":"","start":368,"length":10,"line":12,"character":6,"targetString":"MainLayout"},{"text":"(alias) class NavigatorLayout<P = {}, S = {}>\nimport NavigatorLayout","docs":"","start":387,"length":15,"line":12,"character":25,"targetString":"NavigatorLayout"},{"text":"(method) MainLayout.hookRoute(route: any): any","docs":"","start":407,"length":9,"line":13,"character":2,"targetString":"hookRoute"},{"text":"(parameter) route: any","docs":"","start":417,"length":5,"line":13,"character":12,"targetString":"route"},{"text":"(parameter) route: any","docs":"","start":448,"length":5,"line":15,"character":9,"targetString":"route"},{"text":"(property) background: {\n    stops: {\n        offset: string;\n        stopColor: string;\n        stopOpacity: string;\n    }[];\n}","docs":"","start":461,"length":10,"line":16,"character":6,"targetString":"background"},{"text":"(property) stops: {\n    offset: string;\n    stopColor: string;\n    stopOpacity: string;\n}[]","docs":"","start":483,"length":5,"line":17,"character":8,"targetString":"stops"},{"text":"(property) offset: string","docs":"","start":516,"length":6,"line":19,"character":12,"targetString":"offset"},{"text":"(property) stopColor: string","docs":"","start":542,"length":9,"line":20,"character":12,"targetString":"stopColor"},{"text":"(property) stopOpacity: string","docs":"","start":575,"length":11,"line":21,"character":12,"targetString":"stopOpacity"},{"text":"(property) offset: string","docs":"","start":630,"length":6,"line":24,"character":12,"targetString":"offset"},{"text":"(property) stopColor: string","docs":"","start":658,"length":9,"line":25,"character":12,"targetString":"stopColor"},{"text":"(property) stopOpacity: string","docs":"","start":688,"length":11,"line":26,"character":12,"targetString":"stopOpacity"},{"text":"(method) MainLayout.renderScene(route: any, navigator: any): JSX.Element","docs":"","start":752,"length":11,"line":32,"character":2,"targetString":"renderScene"},{"text":"(parameter) route: any","docs":"","start":764,"length":5,"line":32,"character":14,"targetString":"route"},{"text":"(parameter) navigator: any","docs":"","start":771,"length":9,"line":32,"character":21,"targetString":"navigator"},{"text":"let Scene: JSX.Element","docs":"","start":792,"length":5,"line":33,"character":8,"targetString":"Scene"},{"text":"(alias) class View\nimport View","docs":"","start":801,"length":4,"line":33,"character":17,"targetString":"View"},{"text":"let schema: {}","docs":"","start":817,"length":6,"line":34,"character":8,"targetString":"schema"},{"text":"let uiConfig: {}","docs":"","start":838,"length":8,"line":35,"character":8,"targetString":"uiConfig"},{"text":"const dispatch: any","docs":"","start":865,"length":8,"line":36,"character":12,"targetString":"dispatch"},{"text":"const devInfo: any","docs":"","start":875,"length":7,"line":36,"character":22,"targetString":"devInfo"},{"text":"const dpState: any","docs":"","start":884,"length":7,"line":36,"character":31,"targetString":"dpState"},{"text":"(property) React.Component<{}, { modalVisible: boolean; }, any>.props: Readonly<{}> & Readonly<{\n    children?: React.ReactNode;\n}>","docs":"","start":901,"length":5,"line":36,"character":48,"targetString":"props"},{"text":"import _","docs":"","start":917,"length":1,"line":37,"character":9,"targetString":"_"},{"text":"const devInfo: any","docs":"","start":927,"length":7,"line":37,"character":19,"targetString":"devInfo"},{"text":"let schema: {}","docs":"","start":945,"length":6,"line":38,"character":6,"targetString":"schema"},{"text":"const devInfo: any","docs":"","start":954,"length":7,"line":38,"character":15,"targetString":"devInfo"},{"text":"let uiConfig: {}","docs":"","start":982,"length":8,"line":39,"character":6,"targetString":"uiConfig"},{"text":"const devInfo: any","docs":"","start":993,"length":7,"line":39,"character":17,"targetString":"devInfo"},{"text":"const router: any","docs":"","start":1033,"length":6,"line":41,"character":10,"targetString":"router"},{"text":"import routers","docs":"","start":1042,"length":7,"line":41,"character":19,"targetString":"routers"},{"text":"(parameter) r: any","docs":"","start":1055,"length":1,"line":41,"character":32,"targetString":"r"},{"text":"(parameter) r: any","docs":"","start":1060,"length":1,"line":41,"character":37,"targetString":"r"},{"text":"(parameter) route: any","docs":"","start":1069,"length":5,"line":41,"character":46,"targetString":"route"},{"text":"const router: any","docs":"","start":1088,"length":6,"line":42,"character":8,"targetString":"router"},{"text":"const router: any","docs":"","start":1098,"length":6,"line":42,"character":18,"targetString":"router"},{"text":"const Component: any","docs":"","start":1126,"length":9,"line":43,"character":12,"targetString":"Component"},{"text":"const router: any","docs":"","start":1138,"length":6,"line":43,"character":24,"targetString":"router"},{"text":"let Scene: JSX.Element","docs":"","start":1158,"length":5,"line":44,"character":6,"targetString":"Scene"},{"text":"const Component: any","docs":"","start":1177,"length":9,"line":45,"character":9,"targetString":"Component"},{"text":"(JSX attribute) dpData: {\n    state: any;\n    schema: {};\n    uiConfig: {};\n}","docs":"","start":1197,"length":6,"line":46,"character":10,"targetString":"dpData"},{"text":"(property) state: any","docs":"","start":1207,"length":5,"line":46,"character":20,"targetString":"state"},{"text":"const dpState: any","docs":"","start":1214,"length":7,"line":46,"character":27,"targetString":"dpState"},{"text":"(property) schema: {}","docs":"","start":1223,"length":6,"line":46,"character":36,"targetString":"schema"},{"text":"(property) uiConfig: {}","docs":"","start":1231,"length":8,"line":46,"character":44,"targetString":"uiConfig"},{"text":"(JSX attribute) dispatch: any","docs":"","start":1253,"length":8,"line":47,"character":10,"targetString":"dispatch"},{"text":"const dispatch: any","docs":"","start":1263,"length":8,"line":47,"character":20,"targetString":"dispatch"},{"text":"(JSX attribute) navigator: any","docs":"","start":1283,"length":9,"line":48,"character":10,"targetString":"navigator"},{"text":"(parameter) navigator: any","docs":"","start":1294,"length":9,"line":48,"character":21,"targetString":"navigator"},{"text":"(parameter) route: any","docs":"","start":1319,"length":5,"line":49,"character":14,"targetString":"route"},{"text":"let Scene: JSX.Element","docs":"","start":1363,"length":5,"line":53,"character":11,"targetString":"Scene"},{"text":"import composeLayout","docs":"","start":1391,"length":13,"line":56,"character":15,"targetString":"composeLayout"},{"text":"const store: any","docs":"","start":1405,"length":5,"line":56,"character":29,"targetString":"store"},{"text":"class MainLayout","docs":"","start":1412,"length":10,"line":56,"character":36,"targetString":"MainLayout"}]],"/presentation/rotation-view":[[{"text":"(alias) class RotationView\nimport RotationView","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"RotationView"},{"text":"(alias) class RotationView\nimport RotationView","docs":"","start":48,"length":12,"line":2,"character":1,"targetString":"RotationView"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":61,"length":5,"line":2,"character":14,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":70,"length":5,"line":2,"character":23,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":82,"length":6,"line":2,"character":35,"targetString":"height"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":95,"length":9,"line":2,"character":48,"targetString":"marginTop"},{"text":"(JSX attribute) active?: boolean | undefined","docs":"","start":112,"length":6,"line":2,"character":65,"targetString":"active"},{"text":"var Image: new (width?: number | undefined, height?: number | undefined) => HTMLImageElement","docs":"","start":130,"length":5,"line":3,"character":3,"targetString":"Image"},{"text":"(JSX attribute) style: {\n    width: number;\n    height: number;\n    resizeMode: string;\n}","docs":"","start":140,"length":5,"line":4,"character":4,"targetString":"style"},{"text":"(property) width: number","docs":"","start":155,"length":5,"line":5,"character":6,"targetString":"width"},{"text":"(property) height: number","docs":"","start":173,"length":6,"line":6,"character":6,"targetString":"height"},{"text":"(property) resizeMode: string","docs":"","start":192,"length":10,"line":7,"character":6,"targetString":"resizeMode"},{"text":"(JSX attribute) source: {\n    uri: string;\n}","docs":"","start":226,"length":6,"line":9,"character":4,"targetString":"source"},{"text":"(property) uri: string","docs":"","start":242,"length":3,"line":10,"character":6,"targetString":"uri"},{"text":"(alias) class RotationView\nimport RotationView","docs":"","start":327,"length":12,"line":14,"character":2,"targetString":"RotationView"}],[{"text":"(alias) class RotationView\nimport RotationView","docs":"","start":9,"length":12,"line":0,"character":9,"targetString":"RotationView"},{"text":"(alias) class RotationView\nimport RotationView","docs":"","start":48,"length":12,"line":2,"character":1,"targetString":"RotationView"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"","start":61,"length":5,"line":2,"character":14,"targetString":"style"},{"text":"(property) FlexStyle.width?: string | number | undefined","docs":"","start":70,"length":5,"line":2,"character":23,"targetString":"width"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":82,"length":6,"line":2,"character":35,"targetString":"height"},{"text":"(property) FlexStyle.marginTop?: string | number | undefined","docs":"","start":95,"length":9,"line":2,"character":48,"targetString":"marginTop"},{"text":"(JSX attribute) active?: boolean | undefined","docs":"","start":112,"length":6,"line":2,"character":65,"targetString":"active"},{"text":"var Image: new (width?: number | undefined, height?: number | undefined) => HTMLImageElement","docs":"","start":130,"length":5,"line":3,"character":3,"targetString":"Image"},{"text":"(JSX attribute) style: {\n    width: number;\n    height: number;\n    resizeMode: string;\n}","docs":"","start":140,"length":5,"line":4,"character":4,"targetString":"style"},{"text":"(property) width: number","docs":"","start":155,"length":5,"line":5,"character":6,"targetString":"width"},{"text":"(property) height: number","docs":"","start":173,"length":6,"line":6,"character":6,"targetString":"height"},{"text":"(property) resizeMode: string","docs":"","start":192,"length":10,"line":7,"character":6,"targetString":"resizeMode"},{"text":"(JSX attribute) source: {\n    uri: string;\n}","docs":"","start":226,"length":6,"line":9,"character":4,"targetString":"source"},{"text":"(property) uri: string","docs":"","start":242,"length":3,"line":10,"character":6,"targetString":"uri"},{"text":"(alias) class RotationView\nimport RotationView","docs":"","start":327,"length":12,"line":14,"character":2,"targetString":"RotationView"}]],"/presentation/tyflat-list":[[{"text":"(alias) class TYFlatList<ItemT extends TYFlatListData>\nimport TYFlatList","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"TYFlatList"},{"text":"const data: ({\n    key: number;\n    title: string;\n    value: string;\n    arrow: boolean;\n    subTitle?: undefined;\n    theme?: undefined;\n    styles?: undefined;\n    children?: undefined;\n    Action?: undefined;\n} | {\n    key: number;\n    title: string;\n    subTitle: string;\n    ... 5 more ...;\n    Action?: undefined;\n} | ... 5 more ... | {\n    ...;\n})[]","docs":"","start":51,"length":4,"line":2,"character":6,"targetString":"data"},{"text":"(property) key: number","docs":"","start":68,"length":3,"line":4,"character":4,"targetString":"key"},{"text":"(property) title: string","docs":"","start":80,"length":5,"line":5,"character":4,"targetString":"title"},{"text":"(property) value: string","docs":"","start":105,"length":5,"line":6,"character":4,"targetString":"value"},{"text":"(property) arrow: boolean","docs":"","start":127,"length":5,"line":7,"character":4,"targetString":"arrow"},{"text":"(property) key: number","docs":"","start":153,"length":3,"line":10,"character":4,"targetString":"key"},{"text":"(property) title: string","docs":"","start":165,"length":5,"line":11,"character":4,"targetString":"title"},{"text":"(property) subTitle: string","docs":"","start":197,"length":8,"line":12,"character":4,"targetString":"subTitle"},{"text":"(property) arrow: boolean","docs":"","start":235,"length":5,"line":13,"character":4,"targetString":"arrow"},{"text":"(property) key: number","docs":"","start":261,"length":3,"line":16,"character":4,"targetString":"key"},{"text":"(property) title: string","docs":"","start":273,"length":5,"line":17,"character":4,"targetString":"title"},{"text":"(property) value: boolean","docs":"","start":346,"length":5,"line":18,"character":4,"targetString":"value"},{"text":"(property) key: number","docs":"","start":372,"length":3,"line":21,"character":4,"targetString":"key"},{"text":"(property) theme: {\n    subFontColor: string;\n}","docs":"","start":384,"length":5,"line":22,"character":4,"targetString":"theme"},{"text":"(property) subFontColor: string","docs":"","start":393,"length":12,"line":22,"character":13,"targetString":"subFontColor"},{"text":"(property) title: string","docs":"","start":424,"length":5,"line":23,"character":4,"targetString":"title"},{"text":"(property) subTitle: string","docs":"","start":477,"length":8,"line":24,"character":4,"targetString":"subTitle"},{"text":"(property) key: number","docs":"","start":519,"length":3,"line":27,"character":4,"targetString":"key"},{"text":"(property) styles: {\n    valueText: {\n        maxWidth: number;\n    };\n}","docs":"","start":531,"length":6,"line":28,"character":4,"targetString":"styles"},{"text":"(property) valueText: {\n    maxWidth: number;\n}","docs":"","start":541,"length":9,"line":28,"character":14,"targetString":"valueText"},{"text":"(property) maxWidth: number","docs":"","start":554,"length":8,"line":28,"character":27,"targetString":"maxWidth"},{"text":"(property) title: string","docs":"","start":577,"length":5,"line":29,"character":4,"targetString":"title"},{"text":"(property) value: string","docs":"","start":604,"length":5,"line":30,"character":4,"targetString":"value"},{"text":"(property) arrow: boolean","docs":"","start":662,"length":5,"line":31,"character":4,"targetString":"arrow"},{"text":"(property) key: number","docs":"","start":688,"length":3,"line":34,"character":4,"targetString":"key"},{"text":"(property) title: string","docs":"","start":700,"length":5,"line":35,"character":4,"targetString":"title"},{"text":"(property) children: JSX.Element","docs":"","start":734,"length":8,"line":36,"character":4,"targetString":"children"},{"text":"(JSX attribute) style: {\n    alignSelf: string;\n    marginTop: number;\n    paddingHorizontal: number;\n    borderRadius: number;\n    backgroundColor: string;\n}","docs":"","start":766,"length":5,"line":38,"character":8,"targetString":"style"},{"text":"(property) alignSelf: string","docs":"","start":785,"length":9,"line":39,"character":10,"targetString":"alignSelf"},{"text":"(property) marginTop: number","docs":"","start":820,"length":9,"line":40,"character":10,"targetString":"marginTop"},{"text":"(property) paddingHorizontal: number","docs":"","start":844,"length":17,"line":41,"character":10,"targetString":"paddingHorizontal"},{"text":"(property) borderRadius: number","docs":"","start":876,"length":12,"line":42,"character":10,"targetString":"borderRadius"},{"text":"(property) backgroundColor: string","docs":"","start":903,"length":15,"line":43,"character":10,"targetString":"backgroundColor"},{"text":"(JSX attribute) type: string","docs":"","start":966,"length":4,"line":46,"character":16,"targetString":"type"},{"text":"(JSX attribute) size: string","docs":"","start":983,"length":4,"line":46,"character":33,"targetString":"size"},{"text":"(JSX attribute) text: string","docs":"","start":997,"length":4,"line":46,"character":47,"targetString":"text"},{"text":"(JSX attribute) color: string","docs":"","start":1008,"length":5,"line":46,"character":58,"targetString":"color"},{"text":"(property) key: number","docs":"","start":1058,"length":3,"line":51,"character":4,"targetString":"key"},{"text":"(property) title: string","docs":"","start":1070,"length":5,"line":52,"character":4,"targetString":"title"},{"text":"(property) Action: JSX.Element","docs":"","start":1103,"length":6,"line":53,"character":4,"targetString":"Action"},{"text":"(JSX attribute) style: {\n    paddingHorizontal: number;\n    borderRadius: number;\n    backgroundColor: string;\n}","docs":"","start":1133,"length":5,"line":55,"character":8,"targetString":"style"},{"text":"(property) paddingHorizontal: number","docs":"","start":1152,"length":17,"line":56,"character":10,"targetString":"paddingHorizontal"},{"text":"(property) borderRadius: number","docs":"","start":1184,"length":12,"line":57,"character":10,"targetString":"borderRadius"},{"text":"(property) backgroundColor: string","docs":"","start":1211,"length":15,"line":58,"character":10,"targetString":"backgroundColor"},{"text":"(JSX attribute) type: string","docs":"","start":1274,"length":4,"line":61,"character":16,"targetString":"type"},{"text":"(JSX attribute) size: string","docs":"","start":1291,"length":4,"line":61,"character":33,"targetString":"size"},{"text":"(JSX attribute) text: string","docs":"","start":1305,"length":4,"line":61,"character":47,"targetString":"text"},{"text":"(JSX attribute) color: string","docs":"","start":1316,"length":5,"line":61,"character":58,"targetString":"color"},{"text":"(property) arrow: boolean","docs":"","start":1357,"length":5,"line":64,"character":4,"targetString":"arrow"},{"text":"(property) key: number","docs":"","start":1383,"length":3,"line":67,"character":4,"targetString":"key"},{"text":"(property) title: string","docs":"","start":1395,"length":5,"line":68,"character":4,"targetString":"title"},{"text":"(property) Action: string","docs":"","start":1436,"length":6,"line":69,"character":4,"targetString":"Action"},{"text":"(property) subTitle: string","docs":"","start":1472,"length":8,"line":70,"character":4,"targetString":"subTitle"},{"text":"(property) theme: {\n    descFontColor: string;\n}","docs":"","start":1531,"length":5,"line":71,"character":4,"targetString":"theme"},{"text":"(property) descFontColor: string","docs":"","start":1540,"length":13,"line":71,"character":13,"targetString":"descFontColor"},{"text":"(alias) class TYFlatList<ItemT extends TYFlatListData>\nimport TYFlatList","docs":"","start":1578,"length":10,"line":75,"character":1,"targetString":"TYFlatList"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"Style","start":1591,"length":5,"line":76,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.alignSelf?: \"auto\" | FlexAlignType | undefined","docs":"","start":1604,"length":9,"line":77,"character":4,"targetString":"alignSelf"},{"text":"(property) ViewStyle.backgroundColor?: ColorValue | undefined","docs":"","start":1630,"length":15,"line":78,"character":4,"targetString":"backgroundColor"},{"text":"(property) FlexStyle.height?: string | number | undefined","docs":"","start":1662,"length":6,"line":79,"character":4,"targetString":"height"},{"text":"(property) ViewStyle.borderRadius?: number | undefined","docs":"","start":1679,"length":12,"line":80,"character":4,"targetString":"borderRadius"},{"text":"(JSX attribute) data: ({\n    key: number;\n    title: string;\n    value: string;\n    arrow: boolean;\n    subTitle?: undefined;\n    theme?: undefined;\n    styles?: undefined;\n    children?: undefined;\n    Action?: undefined;\n} | {\n    key: number;\n    title: string;\n    subTitle: string;\n    ... 5 more ...;\n    Action?: undefined;\n} | ... 5 more ... | {\n    ...;\n})[]","docs":"For simplicity, data is just a plain array. If you want to use something else,\nlike an immutable list, use the underlying VirtualizedList directly.","start":1703,"length":4,"line":82,"character":2,"targetString":"data"},{"text":"const data: ({\n    key: number;\n    title: string;\n    value: string;\n    arrow: boolean;\n    subTitle?: undefined;\n    theme?: undefined;\n    styles?: undefined;\n    children?: undefined;\n    Action?: undefined;\n} | {\n    key: number;\n    title: string;\n    subTitle: string;\n    ... 5 more ...;\n    Action?: undefined;\n} | ... 5 more ... | {\n    ...;\n})[]","docs":"","start":1709,"length":4,"line":82,"character":8,"targetString":"data"}]],"/presentation/tylist-item":[[{"text":"(alias) class TYListItem\nimport TYListItem","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"TYListItem"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":21,"length":8,"line":0,"character":21,"targetString":"IconFont"},{"text":"(alias) class TYListItem\nimport TYListItem","docs":"","start":56,"length":10,"line":2,"character":1,"targetString":"TYListItem"},{"text":"(JSX attribute) theme?: {\n    boardBg?: string | undefined;\n    fontColor?: string | undefined;\n    subFontColor?: string | undefined;\n    descFontColor?: string | undefined;\n    cellLine?: string | undefined;\n    cellBg?: string | undefined;\n    cellRadius?: number | undefined;\n    margin?: number | ... 1 more ... | undefined;\n    padding?: number | ... 1 more ... | undefined;\n} | undefined","docs":"","start":69,"length":5,"line":3,"character":2,"targetString":"theme"},{"text":"(property) fontColor?: string | undefined","docs":"","start":82,"length":9,"line":4,"character":4,"targetString":"fontColor"},{"text":"(property) subFontColor?: string | undefined","docs":"","start":108,"length":12,"line":5,"character":4,"targetString":"subFontColor"},{"text":"(property) descFontColor?: string | undefined","docs":"","start":134,"length":13,"line":6,"character":4,"targetString":"descFontColor"},{"text":"(property) cellBg?: string | undefined","docs":"","start":160,"length":6,"line":7,"character":4,"targetString":"cellBg"},{"text":"(JSX attribute) title?: string | undefined","docs":"","start":184,"length":5,"line":9,"character":2,"targetString":"title"},{"text":"(JSX attribute) subTitle?: string | undefined","docs":"","start":202,"length":8,"line":10,"character":2,"targetString":"subTitle"},{"text":"(JSX attribute) Action?: any","docs":"","start":227,"length":6,"line":11,"character":2,"targetString":"Action"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":236,"length":8,"line":11,"character":11,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":245,"length":5,"line":11,"character":20,"targetString":"color"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":272,"length":4,"line":11,"character":47,"targetString":"name"},{"text":"(JSX attribute) onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"Called when the touch is released,\nbut not if cancelled (e.g. by a scroll that steals the responder lock).","start":291,"length":7,"line":12,"character":2,"targetString":"onPress"},{"text":"var console: Console","docs":"","start":306,"length":7,"line":12,"character":17,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":314,"length":3,"line":12,"character":25,"targetString":"log"}],[{"text":"(alias) class TYListItem\nimport TYListItem","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"TYListItem"},{"text":"(alias) class TYListItem\nimport TYListItem","docs":"","start":46,"length":10,"line":2,"character":1,"targetString":"TYListItem"},{"text":"(JSX attribute) theme?: {\n    boardBg?: string | undefined;\n    fontColor?: string | undefined;\n    subFontColor?: string | undefined;\n    descFontColor?: string | undefined;\n    cellLine?: string | undefined;\n    cellBg?: string | undefined;\n    cellRadius?: number | undefined;\n    margin?: number | ... 1 more ... | undefined;\n    padding?: number | ... 1 more ... | undefined;\n} | undefined","docs":"","start":59,"length":5,"line":3,"character":2,"targetString":"theme"},{"text":"(property) fontColor?: string | undefined","docs":"","start":72,"length":9,"line":4,"character":4,"targetString":"fontColor"},{"text":"(property) subFontColor?: string | undefined","docs":"","start":98,"length":12,"line":5,"character":4,"targetString":"subFontColor"},{"text":"(property) descFontColor?: string | undefined","docs":"","start":124,"length":13,"line":6,"character":4,"targetString":"descFontColor"},{"text":"(property) cellBg?: string | undefined","docs":"","start":150,"length":6,"line":7,"character":4,"targetString":"cellBg"},{"text":"(JSX attribute) title?: string | undefined","docs":"","start":174,"length":5,"line":9,"character":2,"targetString":"title"},{"text":"(JSX attribute) subTitle?: string | undefined","docs":"","start":265,"length":8,"line":10,"character":2,"targetString":"subTitle"},{"text":"(JSX attribute) arrow?: boolean | undefined","docs":"","start":290,"length":5,"line":11,"character":2,"targetString":"arrow"},{"text":"(JSX attribute) arrowColor?: string | undefined","docs":"","start":305,"length":10,"line":12,"character":2,"targetString":"arrowColor"},{"text":"(JSX attribute) onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"Called when the touch is released,\nbut not if cancelled (e.g. by a scroll that steals the responder lock).","start":325,"length":7,"line":13,"character":2,"targetString":"onPress"},{"text":"var console: Console","docs":"","start":340,"length":7,"line":13,"character":17,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":348,"length":3,"line":13,"character":25,"targetString":"log"},{"text":"(JSX attribute) Action?: any","docs":"","start":360,"length":6,"line":14,"character":2,"targetString":"Action"},{"text":"(JSX attribute) color: string","docs":"","start":378,"length":5,"line":14,"character":20,"targetString":"color"},{"text":"(JSX attribute) name: string","docs":"","start":405,"length":4,"line":14,"character":47,"targetString":"name"}],[{"text":"(alias) class TYListItem\nimport TYListItem","docs":"","start":9,"length":10,"line":0,"character":9,"targetString":"TYListItem"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":21,"length":8,"line":0,"character":21,"targetString":"IconFont"},{"text":"const Icons: {\n    flower: JSX.Element;\n}","docs":"","start":68,"length":5,"line":2,"character":13,"targetString":"Icons"},{"text":"(property) flower: JSX.Element","docs":"","start":80,"length":6,"line":3,"character":2,"targetString":"flower"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":95,"length":8,"line":4,"character":5,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":110,"length":5,"line":5,"character":6,"targetString":"color"},{"text":"(JSX attribute) d?: string | undefined","docs":"","start":132,"length":1,"line":6,"character":6,"targetString":"d"},{"text":"(alias) class TYListItem\nimport TYListItem","docs":"","start":1238,"length":10,"line":11,"character":1,"targetString":"TYListItem"},{"text":"(JSX attribute) theme?: {\n    boardBg?: string | undefined;\n    fontColor?: string | undefined;\n    subFontColor?: string | undefined;\n    descFontColor?: string | undefined;\n    cellLine?: string | undefined;\n    cellBg?: string | undefined;\n    cellRadius?: number | undefined;\n    margin?: number | ... 1 more ... | undefined;\n    padding?: number | ... 1 more ... | undefined;\n} | undefined","docs":"","start":1251,"length":5,"line":12,"character":2,"targetString":"theme"},{"text":"(property) fontColor?: string | undefined","docs":"","start":1264,"length":9,"line":13,"character":4,"targetString":"fontColor"},{"text":"(property) subFontColor?: string | undefined","docs":"","start":1290,"length":12,"line":14,"character":4,"targetString":"subFontColor"},{"text":"(property) descFontColor?: string | undefined","docs":"","start":1316,"length":13,"line":15,"character":4,"targetString":"descFontColor"},{"text":"(property) cellBg?: string | undefined","docs":"","start":1342,"length":6,"line":16,"character":4,"targetString":"cellBg"},{"text":"(JSX attribute) arrow?: boolean | undefined","docs":"","start":1366,"length":5,"line":18,"character":2,"targetString":"arrow"},{"text":"(JSX attribute) arrowColor?: string | undefined","docs":"","start":1381,"length":10,"line":19,"character":2,"targetString":"arrowColor"},{"text":"(JSX attribute) title?: string | undefined","docs":"","start":1401,"length":5,"line":20,"character":2,"targetString":"title"},{"text":"(JSX attribute) subTitle?: string | undefined","docs":"","start":1419,"length":8,"line":21,"character":2,"targetString":"subTitle"},{"text":"(JSX attribute) Icon?: any","docs":"","start":1444,"length":4,"line":22,"character":2,"targetString":"Icon"},{"text":"const Icons: {\n    flower: JSX.Element;\n}","docs":"","start":1450,"length":5,"line":22,"character":8,"targetString":"Icons"},{"text":"(property) flower: JSX.Element","docs":"","start":1456,"length":6,"line":22,"character":14,"targetString":"flower"},{"text":"(JSX attribute) onPress?: ((event: GestureResponderEvent) => void) | undefined","docs":"Called when the touch is released,\nbut not if cancelled (e.g. by a scroll that steals the responder lock).","start":1466,"length":7,"line":23,"character":2,"targetString":"onPress"},{"text":"var console: Console","docs":"","start":1481,"length":7,"line":23,"character":17,"targetString":"console"},{"text":"(method) Console.log(message?: any, ...optionalParams: any[]): void (+1 overload)","docs":"","start":1489,"length":3,"line":23,"character":25,"targetString":"log"},{"text":"(JSX attribute) Action?: any","docs":"","start":1501,"length":6,"line":24,"character":2,"targetString":"Action"},{"text":"(alias) class IconFont\nimport IconFont","docs":"","start":1510,"length":8,"line":24,"character":11,"targetString":"IconFont"},{"text":"(JSX attribute) color?: any","docs":"","start":1519,"length":5,"line":24,"character":20,"targetString":"color"},{"text":"(JSX attribute) name?: IconFontName | undefined","docs":"","start":1546,"length":4,"line":24,"character":47,"targetString":"name"}]],"/presentation/tysection-list":[[{"text":"(alias) class TYSectionList\nimport TYSectionList","docs":"","start":9,"length":13,"line":0,"character":9,"targetString":"TYSectionList"},{"text":"const state: {\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n}","docs":"","start":55,"length":5,"line":2,"character":7,"targetString":"state"},{"text":"const set: React.Dispatch<React.SetStateAction<{\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n}>>","docs":"","start":62,"length":3,"line":2,"character":14,"targetString":"set"},{"text":"(alias) namespace React\nexport namespace React","docs":"","start":69,"length":5,"line":2,"character":21,"targetString":"React"},{"text":"function React.useState<{\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n}>(initialState: {\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n} | (() => {\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n})): [...] (+1 overload)","docs":"Returns a stateful value, and a function to update it.","start":75,"length":8,"line":2,"character":27,"targetString":"useState"},{"text":"(property) value: number","docs":"","start":88,"length":5,"line":3,"character":2,"targetString":"value"},{"text":"(property) sliderValue: number","docs":"","start":101,"length":11,"line":4,"character":2,"targetString":"sliderValue"},{"text":"(property) name: string","docs":"","start":120,"length":4,"line":5,"character":2,"targetString":"name"},{"text":"(property) switchValue: boolean","docs":"","start":132,"length":11,"line":6,"character":2,"targetString":"switchValue"},{"text":"const setState: (value: any) => void","docs":"","start":161,"length":8,"line":8,"character":6,"targetString":"setState"},{"text":"(parameter) value: any","docs":"","start":172,"length":5,"line":8,"character":17,"targetString":"value"},{"text":"const set: (value: React.SetStateAction<{\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n}>) => void","docs":"","start":181,"length":3,"line":8,"character":26,"targetString":"set"},{"text":"const state: {\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n}","docs":"","start":190,"length":5,"line":8,"character":35,"targetString":"state"},{"text":"(parameter) value: any","docs":"","start":200,"length":5,"line":8,"character":45,"targetString":"value"},{"text":"const sections: ({\n    title: string;\n    data: {\n        key: number;\n        theme: {\n            descFontColor: string;\n        };\n        title: string;\n        subTitle: string;\n        value: string;\n        arrow: boolean;\n        Action: JSX.Element;\n    }[];\n    renderItem: ({ item }: {\n        item: any;\n    }) => JSX.Element;\n} | {\n    ...;\n} | {\n    ...;\n} | {\n    ...;\n} | {\n    ...;\n})[]","docs":"","start":216,"length":8,"line":9,"character":6,"targetString":"sections"},{"text":"(property) title: string","docs":"","start":237,"length":5,"line":11,"character":4,"targetString":"title"},{"text":"(property) data: {\n    key: number;\n    theme: {\n        descFontColor: string;\n    };\n    title: string;\n    subTitle: string;\n    value: string;\n    arrow: boolean;\n    Action: JSX.Element;\n}[]","docs":"","start":267,"length":4,"line":12,"character":4,"targetString":"data"},{"text":"(property) key: number","docs":"","start":291,"length":3,"line":14,"character":8,"targetString":"key"},{"text":"(property) theme: {\n    descFontColor: string;\n}","docs":"","start":307,"length":5,"line":15,"character":8,"targetString":"theme"},{"text":"(property) descFontColor: string","docs":"","start":316,"length":13,"line":15,"character":17,"targetString":"descFontColor"},{"text":"(property) title: string","docs":"","start":352,"length":5,"line":16,"character":8,"targetString":"title"},{"text":"(property) subTitle: string","docs":"","start":381,"length":8,"line":17,"character":8,"targetString":"subTitle"},{"text":"(property) value: string","docs":"","start":416,"length":5,"line":18,"character":8,"targetString":"value"},{"text":"(property) arrow: boolean","docs":"","start":438,"length":5,"line":19,"character":8,"targetString":"arrow"},{"text":"(property) Action: JSX.Element","docs":"","start":459,"length":6,"line":20,"character":8,"targetString":"Action"},{"text":"(JSX attribute) style: {\n    paddingHorizontal: number;\n    borderRadius: number;\n    backgroundColor: string;\n}","docs":"","start":497,"length":5,"line":22,"character":12,"targetString":"style"},{"text":"(property) paddingHorizontal: number","docs":"","start":520,"length":17,"line":23,"character":14,"targetString":"paddingHorizontal"},{"text":"(property) borderRadius: number","docs":"","start":556,"length":12,"line":24,"character":14,"targetString":"borderRadius"},{"text":"(property) backgroundColor: string","docs":"","start":587,"length":15,"line":25,"character":14,"targetString":"backgroundColor"},{"text":"(JSX attribute) type: string","docs":"","start":662,"length":4,"line":28,"character":20,"targetString":"type"},{"text":"(JSX attribute) size: string","docs":"","start":679,"length":4,"line":28,"character":37,"targetString":"size"},{"text":"(JSX attribute) text: string","docs":"","start":693,"length":4,"line":28,"character":51,"targetString":"text"},{"text":"(JSX attribute) color: string","docs":"","start":704,"length":5,"line":28,"character":62,"targetString":"color"},{"text":"(property) renderItem: ({ item }: {\n    item: any;\n}) => JSX.Element","docs":"","start":769,"length":10,"line":33,"character":4,"targetString":"renderItem"},{"text":"var item: any","docs":"","start":784,"length":4,"line":33,"character":19,"targetString":"item"},{"text":"(alias) class TYSectionList\nimport TYSectionList","docs":"","start":796,"length":13,"line":33,"character":31,"targetString":"TYSectionList"},{"text":"(property) TYSectionList.Item: React.ElementType<TYListItemProps>","docs":"","start":810,"length":4,"line":33,"character":45,"targetString":"Item"},{"text":"var item: any","docs":"","start":819,"length":4,"line":33,"character":54,"targetString":"item"},{"text":"(property) title: string","docs":"","start":842,"length":5,"line":36,"character":4,"targetString":"title"},{"text":"(property) data: {\n    key: number;\n    theme: {\n        descFontColor: string;\n    };\n    Action: string;\n    title: string;\n    subTitle: string;\n    checked: boolean;\n    onChange: (checked: any) => void;\n}[]","docs":"","start":877,"length":4,"line":37,"character":4,"targetString":"data"},{"text":"(property) key: number","docs":"","start":901,"length":3,"line":39,"character":8,"targetString":"key"},{"text":"(property) theme: {\n    descFontColor: string;\n}","docs":"","start":917,"length":5,"line":40,"character":8,"targetString":"theme"},{"text":"(property) descFontColor: string","docs":"","start":926,"length":13,"line":40,"character":17,"targetString":"descFontColor"},{"text":"(property) Action: string","docs":"","start":962,"length":6,"line":41,"character":8,"targetString":"Action"},{"text":"(property) title: string","docs":"","start":1002,"length":5,"line":42,"character":8,"targetString":"title"},{"text":"(property) subTitle: string","docs":"","start":1038,"length":8,"line":43,"character":8,"targetString":"subTitle"},{"text":"(property) checked: boolean","docs":"","start":1101,"length":7,"line":44,"character":8,"targetString":"checked"},{"text":"const state: {\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n}","docs":"","start":1110,"length":5,"line":44,"character":17,"targetString":"state"},{"text":"(property) value: number","docs":"","start":1116,"length":5,"line":44,"character":23,"targetString":"value"},{"text":"(property) onChange: (checked: any) => void","docs":"","start":1137,"length":8,"line":45,"character":8,"targetString":"onChange"},{"text":"(parameter) checked: any","docs":"","start":1147,"length":7,"line":45,"character":18,"targetString":"checked"},{"text":"const setState: (value: any) => void","docs":"","start":1158,"length":8,"line":45,"character":29,"targetString":"setState"},{"text":"(property) value: number","docs":"","start":1169,"length":5,"line":45,"character":40,"targetString":"value"},{"text":"(parameter) checked: any","docs":"","start":1176,"length":7,"line":45,"character":47,"targetString":"checked"},{"text":"(property) renderItem: ({ item }: {\n    item: any;\n}) => JSX.Element","docs":"","start":1217,"length":10,"line":48,"character":4,"targetString":"renderItem"},{"text":"var item: any","docs":"","start":1232,"length":4,"line":48,"character":19,"targetString":"item"},{"text":"(alias) class TYSectionList\nimport TYSectionList","docs":"","start":1244,"length":13,"line":48,"character":31,"targetString":"TYSectionList"},{"text":"(property) TYSectionList.CheckboxItem: React.ElementType<TYSectionCheckboxProps>","docs":"","start":1258,"length":12,"line":48,"character":45,"targetString":"CheckboxItem"},{"text":"var item: any","docs":"","start":1275,"length":4,"line":48,"character":62,"targetString":"item"},{"text":"(property) title: string","docs":"","start":1298,"length":5,"line":51,"character":4,"targetString":"title"},{"text":"(property) data: {\n    key: number;\n    actionType: string;\n    Icon: string;\n    Action: string;\n    value: number;\n    minimumValue: number;\n    maximumValue: number;\n    canTouchTrack: boolean;\n    onSlidingComplete: (sliderValue: any) => void;\n}[]","docs":"","start":1329,"length":4,"line":52,"character":4,"targetString":"data"},{"text":"(property) key: number","docs":"","start":1353,"length":3,"line":54,"character":8,"targetString":"key"},{"text":"(property) actionType: string","docs":"","start":1369,"length":10,"line":55,"character":8,"targetString":"actionType"},{"text":"(property) Icon: string","docs":"","start":1401,"length":4,"line":56,"character":8,"targetString":"Icon"},{"text":"(property) Action: string","docs":"","start":1435,"length":6,"line":57,"character":8,"targetString":"Action"},{"text":"(property) value: number","docs":"","start":1471,"length":5,"line":58,"character":8,"targetString":"value"},{"text":"const state: {\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n}","docs":"","start":1478,"length":5,"line":58,"character":15,"targetString":"state"},{"text":"(property) sliderValue: number","docs":"","start":1484,"length":11,"line":58,"character":21,"targetString":"sliderValue"},{"text":"(property) minimumValue: number","docs":"","start":1505,"length":12,"line":59,"character":8,"targetString":"minimumValue"},{"text":"(property) maximumValue: number","docs":"","start":1530,"length":12,"line":60,"character":8,"targetString":"maximumValue"},{"text":"(property) canTouchTrack: boolean","docs":"","start":1557,"length":13,"line":61,"character":8,"targetString":"canTouchTrack"},{"text":"(property) onSlidingComplete: (sliderValue: any) => void","docs":"","start":1586,"length":17,"line":62,"character":8,"targetString":"onSlidingComplete"},{"text":"(parameter) sliderValue: any","docs":"","start":1605,"length":11,"line":62,"character":27,"targetString":"sliderValue"},{"text":"const setState: (value: any) => void","docs":"","start":1620,"length":8,"line":62,"character":42,"targetString":"setState"},{"text":"(property) sliderValue: any","docs":"","start":1631,"length":11,"line":62,"character":53,"targetString":"sliderValue"},{"text":"(property) renderItem: ({ item }: {\n    item: any;\n}) => JSX.Element","docs":"","start":1667,"length":10,"line":65,"character":4,"targetString":"renderItem"},{"text":"var item: any","docs":"","start":1682,"length":4,"line":65,"character":19,"targetString":"item"},{"text":"(alias) class TYSectionList\nimport TYSectionList","docs":"","start":1694,"length":13,"line":65,"character":31,"targetString":"TYSectionList"},{"text":"(property) TYSectionList.SliderItem: React.ElementType<TYSectionSliderProps>","docs":"","start":1708,"length":10,"line":65,"character":45,"targetString":"SliderItem"},{"text":"var item: any","docs":"","start":1723,"length":4,"line":65,"character":60,"targetString":"item"},{"text":"(property) title: string","docs":"","start":1746,"length":5,"line":68,"character":4,"targetString":"title"},{"text":"(property) data: {\n    key: number;\n    title: string;\n    value: string;\n    placeholder: string;\n    onChangeText: (name: any) => void;\n}[]","docs":"","start":1780,"length":4,"line":69,"character":4,"targetString":"data"},{"text":"(property) key: number","docs":"","start":1804,"length":3,"line":71,"character":8,"targetString":"key"},{"text":"(property) title: string","docs":"","start":1820,"length":5,"line":72,"character":8,"targetString":"title"},{"text":"(property) value: string","docs":"","start":1843,"length":5,"line":73,"character":8,"targetString":"value"},{"text":"const state: {\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n}","docs":"","start":1850,"length":5,"line":73,"character":15,"targetString":"state"},{"text":"(property) name: string","docs":"","start":1856,"length":4,"line":73,"character":21,"targetString":"name"},{"text":"(property) placeholder: string","docs":"","start":1870,"length":11,"line":74,"character":8,"targetString":"placeholder"},{"text":"(property) onChangeText: (name: any) => void","docs":"","start":1905,"length":12,"line":75,"character":8,"targetString":"onChangeText"},{"text":"(parameter) name: any","docs":"","start":1919,"length":4,"line":75,"character":22,"targetString":"name"},{"text":"const setState: (value: any) => void","docs":"","start":1927,"length":8,"line":75,"character":30,"targetString":"setState"},{"text":"(property) name: any","docs":"","start":1938,"length":4,"line":75,"character":41,"targetString":"name"},{"text":"(property) renderItem: ({ item }: {\n    item: any;\n}) => JSX.Element","docs":"","start":1967,"length":10,"line":78,"character":4,"targetString":"renderItem"},{"text":"var item: any","docs":"","start":1982,"length":4,"line":78,"character":19,"targetString":"item"},{"text":"(alias) class TYSectionList\nimport TYSectionList","docs":"","start":1994,"length":13,"line":78,"character":31,"targetString":"TYSectionList"},{"text":"(property) TYSectionList.InputItem: React.ElementType<TYSectionInputProps>","docs":"","start":2008,"length":9,"line":78,"character":45,"targetString":"InputItem"},{"text":"var item: any","docs":"","start":2022,"length":4,"line":78,"character":59,"targetString":"item"},{"text":"(property) title: string","docs":"","start":2045,"length":5,"line":81,"character":4,"targetString":"title"},{"text":"(property) data: {\n    key: number;\n    title: string;\n    subTitle: string;\n    value: boolean;\n    onValueChange: (value: any) => void;\n}[]","docs":"","start":2087,"length":4,"line":82,"character":4,"targetString":"data"},{"text":"(property) key: number","docs":"","start":2111,"length":3,"line":84,"character":8,"targetString":"key"},{"text":"(property) title: string","docs":"","start":2127,"length":5,"line":85,"character":8,"targetString":"title"},{"text":"(property) subTitle: string","docs":"","start":2204,"length":8,"line":86,"character":8,"targetString":"subTitle"},{"text":"(property) value: boolean","docs":"","start":2316,"length":5,"line":88,"character":8,"targetString":"value"},{"text":"const state: {\n    value: number;\n    sliderValue: number;\n    name: string;\n    switchValue: boolean;\n}","docs":"","start":2323,"length":5,"line":88,"character":15,"targetString":"state"},{"text":"(property) switchValue: boolean","docs":"","start":2329,"length":11,"line":88,"character":21,"targetString":"switchValue"},{"text":"(property) onValueChange: (value: any) => void","docs":"","start":2350,"length":13,"line":89,"character":8,"targetString":"onValueChange"},{"text":"(parameter) value: any","docs":"","start":2365,"length":5,"line":89,"character":23,"targetString":"value"},{"text":"const setState: (value: any) => void","docs":"","start":2374,"length":8,"line":89,"character":32,"targetString":"setState"},{"text":"(property) switchValue: any","docs":"","start":2385,"length":11,"line":89,"character":43,"targetString":"switchValue"},{"text":"(parameter) value: any","docs":"","start":2398,"length":5,"line":89,"character":56,"targetString":"value"},{"text":"(property) renderItem: ({ item }: {\n    item: any;\n}) => JSX.Element","docs":"","start":2428,"length":10,"line":92,"character":4,"targetString":"renderItem"},{"text":"var item: any","docs":"","start":2443,"length":4,"line":92,"character":19,"targetString":"item"},{"text":"(alias) class TYSectionList\nimport TYSectionList","docs":"","start":2455,"length":13,"line":92,"character":31,"targetString":"TYSectionList"},{"text":"(property) TYSectionList.SwitchItem: React.ElementType<TYSectionSwitchProps>","docs":"","start":2469,"length":10,"line":92,"character":45,"targetString":"SwitchItem"},{"text":"var item: any","docs":"","start":2484,"length":4,"line":92,"character":60,"targetString":"item"},{"text":"(alias) class TYSectionList\nimport TYSectionList","docs":"","start":2504,"length":13,"line":96,"character":1,"targetString":"TYSectionList"},{"text":"(JSX attribute) style?: StyleProp<ViewStyle>","docs":"Style","start":2520,"length":5,"line":97,"character":2,"targetString":"style"},{"text":"(property) FlexStyle.alignSelf?: \"auto\" | FlexAlignType | undefined","docs":"","start":2529,"length":9,"line":97,"character":11,"targetString":"alignSelf"},{"text":"(JSX attribute) sections: readonly SectionListData<SectionDataProps, DefaultSectionT>[]","docs":"An array of objects with data for each section.","start":2555,"length":8,"line":98,"character":2,"targetString":"sections"},{"text":"const sections: ({\n    title: string;\n    data: {\n        key: number;\n        theme: {\n            descFontColor: string;\n        };\n        title: string;\n        subTitle: string;\n        value: string;\n        arrow: boolean;\n        Action: JSX.Element;\n    }[];\n    renderItem: ({ item }: {\n        item: any;\n    }) => JSX.Element;\n} | {\n    ...;\n} | {\n    ...;\n} | {\n    ...;\n} | {\n    ...;\n})[]","docs":"","start":2565,"length":8,"line":98,"character":12,"targetString":"sections"},{"text":"(JSX attribute) renderItem?: SectionListRenderItem<SectionDataProps, DefaultSectionT> | undefined","docs":"Default renderer for every item in every section. Can be over-ridden on a per-section basis.","start":2577,"length":10,"line":99,"character":2,"targetString":"renderItem"},{"text":"var item: SectionDataProps","docs":"","start":2592,"length":4,"line":99,"character":17,"targetString":"item"},{"text":"(alias) class TYSectionList\nimport TYSectionList","docs":"","start":2604,"length":13,"line":99,"character":29,"targetString":"TYSectionList"},{"text":"(property) TYSectionList.CheckboxItem: React.ElementType<TYSectionCheckboxProps>","docs":"","start":2618,"length":12,"line":99,"character":43,"targetString":"CheckboxItem"},{"text":"var item: SectionDataProps","docs":"","start":2635,"length":4,"line":99,"character":60,"targetString":"item"}]]}